{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "newName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "newSymbol",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AllowanceOverflow",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "AllowanceUnderflow",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientAllowance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidPermit",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Permit2AllowanceIsFixedAtInfinity",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PermitExpired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TotalSupplyOverflow",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DOMAIN_SEPARATOR",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "result",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "result",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "asset",
				"outputs": [
					{
						"internalType": "contract ERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "result",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "customCall",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc20Inhibitor",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc20PurchasableRate",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc20PurchasableTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "erc20sSold",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "erc20ToNativeSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "nativesBought",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "erc20sSold",
						"type": "uint256"
					}
				],
				"name": "erc20ToNativeSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "nativesBought",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "erc20sSold",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct Permit2Sig",
						"name": "sig",
						"type": "tuple"
					}
				],
				"name": "erc20ToNativeSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "nativesBought",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "erc20sSold",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct Permit2Sig",
						"name": "sig",
						"type": "tuple"
					}
				],
				"name": "erc20ToNativeSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "nativesBought",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "erc20sSold",
						"type": "uint256"
					}
				],
				"name": "getERC20ToNativePrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "nativesBought",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "nativesSold",
						"type": "uint256"
					}
				],
				"name": "getNativeToERC20Price",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "erc20sBought",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nativeInhibitor",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nativePurchasableRate",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nativePurchasableTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nativeToERC20Swap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "erc20sBought",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "nativeToERC20Swap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "erc20sBought",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "result",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "permit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "purchasableERC20s",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "purchasableNatives",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "result",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"AllowanceOverflow()": [
					{
						"details": "The allowance has overflowed."
					}
				],
				"AllowanceUnderflow()": [
					{
						"details": "The allowance has underflowed."
					}
				],
				"InsufficientAllowance()": [
					{
						"details": "Insufficient allowance."
					}
				],
				"InsufficientBalance()": [
					{
						"details": "Insufficient balance."
					}
				],
				"InvalidPermit()": [
					{
						"details": "The permit is invalid."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"Permit2AllowanceIsFixedAtInfinity()": [
					{
						"details": "The allowance of Permit2 is fixed at infinity."
					}
				],
				"PermitExpired()": [
					{
						"details": "The permit has expired."
					}
				],
				"TotalSupplyOverflow()": [
					{
						"details": "The total supply has overflowed."
					}
				]
			},
			"events": {
				"Approval(address,address,uint256)": {
					"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
				},
				"Transfer(address,address,uint256)": {
					"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
				}
			},
			"kind": "dev",
			"methods": {
				"DOMAIN_SEPARATOR()": {
					"details": "Returns the EIP-712 domain separator for the EIP-2612 permit."
				},
				"allowance(address,address)": {
					"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
				},
				"approve(address,uint256)": {
					"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
				},
				"balanceOf(address)": {
					"details": "Returns the amount of tokens owned by `owner`."
				},
				"decimals()": {
					"details": "Returns the decimals places of the token."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"nonces(address)": {
					"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"symbol()": {
					"details": "Returns the symbol of the token."
				},
				"totalSupply()": {
					"details": "Returns the amount of tokens in existence."
				},
				"transfer(address,uint256)": {
					"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
				},
				"transferFrom(address,address,uint256)": {
					"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/PinusVaultCore.sol": "PinusVaultCore"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol": {
			"keccak256": "0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2",
				"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV"
			]
		},
		"src/ExchangeAbstract.sol": {
			"keccak256": "0x55f1b28a305a6421a14744f17c61b4e4417c839dce1743c7b3ff8ab9d7db4e4d",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://255ab927b18d55eed88cbfeb5fdc478f00c6231d138959fad186c1442e6d2dd8",
				"dweb:/ipfs/QmeAhbXuPnnALGHiGk5bmfWvYfBKKP4PSZPyjaT1g4oeWf"
			]
		},
		"src/PinusVaultCore.sol": {
			"keccak256": "0x1c5687a71bee607debb6357fe912178b7ff96e3be70755283060321c21755c45",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://6956793bedf50836374016dc774737316011dfce69c7c6d0245561c67992138d",
				"dweb:/ipfs/QmSqBcdaAf6sgDJFSZKDk4BiYnveHj43Tnz3iSn6QyWHqc"
			]
		},
		"src/SwapAbstract.sol": {
			"keccak256": "0x6588129c8c19a914de11e5a97b8a3a04e4f575ae81d9dc76869ea5c6cb0d0782",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://8fedda8d8edeb77491aca678bea59edbccfd90b900df22fe5b10a0431d5b53b6",
				"dweb:/ipfs/QmWbfFMyDJ59MptJm2EqherMsG7mYdPnziZiNYSzFebPA6"
			]
		}
	},
	"version": 1
}