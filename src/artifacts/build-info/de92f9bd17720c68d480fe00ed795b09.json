{
	"id": "de92f9bd17720c68d480fe00ed795b09",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/PinusVault2.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.28;\r\n\r\n//import \"https://github.com/Vectorized/solady/blob/main/src/auth/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\";\r\nimport \"./ExchangeAbstract.sol\";\r\n//import \"./LindyERC20.sol\";\r\n\r\n/* \r\nPartially implements EIP-7535 which is a native token version of EIP-4626 where it makes sense.\r\n\r\nmint() is not implemented because it's not necessary, requires more fringe-case handling, and doesn't even apply to current use cases.\r\nwithdraw() isn't implemented for the same reasons.\r\n\r\nGenerally the need to make auditing simpler is more important to me than adding features that may never even be used.\r\n\r\nI decided to use solady for erc 20 because I want to remove any obstacles from producing volume.\r\n\r\nHowever for ownable, I appreciate the extra protection from human-error in openzeppelin's implementation.\r\n\r\nI was originally going to add a proxy for maximum flexibility but decided I just want something more simple yet flexible\r\nso I decided on customCall() instead. Doesn't even have batching but should cover any situation. Doesn't even check if the call was successful.\r\n\r\nhttps://eips.ethereum.org/EIPS/eip-5143\r\nWas not going to add front-run protection because there's not as much incentive to sandwich when there's a spread.\r\nI also think front-run protection should be implemented by the caller instead...\r\n\r\ndeposit() and redeem() are missing transfers to an address aside from the sender. \r\n*/\r\n\r\n\r\n\r\nuint128 constant ERC20_INHIBITOR = 1 ether;\r\nuint128 constant ERC20_PURCHASABLE_RATE = 1 ether / uint128(24 hours);\r\nuint128 constant NATIVE_INHIBITOR = .1 ether;\r\nuint128 constant NATIVE_PURCHASABLE_RATE = .1 ether / uint128(24 hours);\r\n\r\ncontract PinusVault2 \r\n    is \r\n    ExchangeAbstract(ERC20_INHIBITOR,ERC20_PURCHASABLE_RATE,NATIVE_INHIBITOR,NATIVE_PURCHASABLE_RATE), \r\n    ERC223, \r\n    Ownable \r\n{\r\n\r\n    bytes32 immutable _name;\r\n    bytes32 immutable _symbol;\r\n\r\n    bytes32 public immutable nameHash;\r\n    \r\n    constructor(address owner, string memory name_, string memory symbol_) Ownable(owner) SwapAbstract(this) {\r\n        _name = bytes32(abi.encodePacked(name_));\r\n        nameHash = keccak256(bytes(name_));\r\n\r\n        _symbol = bytes32(abi.encodePacked(symbol_));\r\n    }\r\n\r\n    function _constantNameHash() internal view override returns (bytes32 result) {\r\n        return nameHash;\r\n    }\r\n\r\n    function name() public view override returns (string memory){\r\n        return string(abi.encodePacked(_name));\r\n    }\r\n    \r\n    function symbol() public view override returns (string memory){\r\n        return string(abi.encodePacked(_symbol));\r\n    }\r\n\r\n    function customCall(address to,uint value,bytes calldata data) public onlyOwner returns (bool success, bytes memory returnData) {\r\n        return to.call{value:value}(data);\r\n    }\r\n\r\n    function nativeToERC20Price(uint nativesSold) public override view returns (uint erc20sBought) {\r\n        return erc20sBuyable() * nativesSold / (nativeSellInhibitor + nativesSold);\r\n    }\r\n\r\n    function _transferERC20sBought(address to, uint amount) internal override {\r\n        // Effects\r\n        erc20BuyableTime += amount / erc20BuyableRate;\r\n\r\n        // Interactions\r\n        _mint(to,amount);\r\n    }\r\n\r\n    function swapERC20ToNative(uint erc20sSold, address recipient) public override returns (uint nativesBought) {\r\n        nativesBought = erc20ToNativePrice(erc20sSold);\r\n        _burn(msg.sender,erc20sSold);\r\n        _transferNativesBought(recipient,nativesBought);\r\n    }\r\n\r\n\r\n}"
			},
			"src/ExchangeAbstract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.28;\r\n\r\nimport \"./SwapAbstract.sol\";\r\n\r\nabstract contract ExchangeAbstract is SwapAbstract {\r\n    \r\n    uint128 public immutable erc20SellInhibitor;\r\n    uint128 public immutable erc20BuyableRate;\r\n    uint128 public immutable nativeSellInhibitor;\r\n    uint128 public immutable nativeBuyableRate;\r\n    \r\n    uint public erc20BuyableTime = block.timestamp;\r\n    uint private _nativeBuyableTime = block.timestamp;\r\n\r\n    constructor(\r\n        uint128 erc20SellInhibitor_, \r\n        uint128 erc20BuyableRate_,\r\n        uint128 nativeSellInhibitor_,\r\n        uint128 nativeBuyableRate_\r\n    ) {\r\n        erc20SellInhibitor = erc20SellInhibitor_;\r\n        erc20BuyableRate = erc20BuyableRate_;\r\n        nativeSellInhibitor = nativeSellInhibitor_;\r\n        nativeBuyableRate = nativeBuyableRate_;\r\n    }\r\n\r\n    // nativesBuyable is better than buyableNatives because the later may be interpreted as an array\r\n    function nativesBuyable() public view returns (uint) {\r\n        return (block.timestamp - _nativeBuyableTime) * nativeBuyableRate;\r\n    }\r\n\r\n    function erc20sBuyable() public view returns (uint) {\r\n        return (block.timestamp - erc20BuyableTime) * erc20BuyableRate;\r\n    }\r\n\r\n    function erc20ToNativePrice(uint erc20sSold) public override view returns (uint nativesBought) {\r\n        nativesBought = nativesBuyable() * erc20sSold / (erc20SellInhibitor + erc20sSold);\r\n        if(address(this).balance < nativesBought) {\r\n            nativesBought = address(this).balance;\r\n        }\r\n    }\r\n\r\n    function _transferNativesBought(address to, uint amount) internal override {\r\n        // Effects\r\n        _nativeBuyableTime += amount / nativeBuyableRate;\r\n        \r\n        // Interactions\r\n        (bool success,) = to.call{value:amount}(\"\");\r\n        require(success);\r\n    }\r\n\r\n    \r\n}"
			},
			"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Simple ERC20 + EIP-2612 implementation.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\n///\n/// @dev Note:\n/// - The ERC20 standard allows minting and transferring to and from the zero address,\n///   minting and transferring zero tokens, as well as self-approvals.\n///   For performance, this implementation WILL NOT revert for such actions.\n///   Please add any checks with overrides if desired.\n/// - The `permit` function uses the ecrecover precompile (0x1).\n///\n/// If you are overriding:\n/// - NEVER violate the ERC20 invariant:\n///   the total sum of all balances must be equal to `totalSupply()`.\n/// - Check that the overridden function is actually used in the function you want to\n///   change the behavior of. Much of the code has been manually inlined for performance.\nabstract contract ERC20 {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The total supply has overflowed.\n    error TotalSupplyOverflow();\n\n    /// @dev The allowance has overflowed.\n    error AllowanceOverflow();\n\n    /// @dev The allowance has underflowed.\n    error AllowanceUnderflow();\n\n    /// @dev Insufficient balance.\n    error InsufficientBalance();\n\n    /// @dev Insufficient allowance.\n    error InsufficientAllowance();\n\n    /// @dev The permit is invalid.\n    error InvalidPermit();\n\n    /// @dev The permit has expired.\n    error PermitExpired();\n\n    /// @dev The allowance of Permit2 is fixed at infinity.\n    error Permit2AllowanceIsFixedAtInfinity();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           EVENTS                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Emitted when `amount` tokens is transferred from `from` to `to`.\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /// @dev `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    uint256 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    /// @dev `keccak256(bytes(\"Approval(address,address,uint256)\"))`.\n    uint256 private constant _APPROVAL_EVENT_SIGNATURE =\n        0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          STORAGE                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The storage slot for the total supply.\n    uint256 private constant _TOTAL_SUPPLY_SLOT = 0x05345cdf77eb68f44c;\n\n    /// @dev The balance slot of `owner` is given by:\n    /// ```\n    ///     mstore(0x0c, _BALANCE_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let balanceSlot := keccak256(0x0c, 0x20)\n    /// ```\n    uint256 private constant _BALANCE_SLOT_SEED = 0x87a211a2;\n\n    /// @dev The allowance slot of (`owner`, `spender`) is given by:\n    /// ```\n    ///     mstore(0x20, spender)\n    ///     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let allowanceSlot := keccak256(0x0c, 0x34)\n    /// ```\n    uint256 private constant _ALLOWANCE_SLOT_SEED = 0x7f5e9f20;\n\n    /// @dev The nonce slot of `owner` is given by:\n    /// ```\n    ///     mstore(0x0c, _NONCES_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let nonceSlot := keccak256(0x0c, 0x20)\n    /// ```\n    uint256 private constant _NONCES_SLOT_SEED = 0x38377508;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev `(_NONCES_SLOT_SEED << 16) | 0x1901`.\n    uint256 private constant _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX = 0x383775081901;\n\n    /// @dev `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`.\n    bytes32 private constant _DOMAIN_TYPEHASH =\n        0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f;\n\n    /// @dev `keccak256(\"1\")`.\n    /// If you need to use a different version, override `_versionHash`.\n    bytes32 private constant _DEFAULT_VERSION_HASH =\n        0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6;\n\n    /// @dev `keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`.\n    bytes32 private constant _PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    /// @dev The canonical Permit2 address.\n    /// For signature-based allowance granting for single transaction ERC20 `transferFrom`.\n    /// To enable, override `_givePermit2InfiniteAllowance()`.\n    /// [Github](https://github.com/Uniswap/permit2)\n    /// [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\n    address internal constant _PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       ERC20 METADATA                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the name of the token.\n    function name() public view virtual returns (string memory);\n\n    /// @dev Returns the symbol of the token.\n    function symbol() public view virtual returns (string memory);\n\n    /// @dev Returns the decimals places of the token.\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           ERC20                            */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the amount of tokens in existence.\n    function totalSupply() public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := sload(_TOTAL_SUPPLY_SLOT)\n        }\n    }\n\n    /// @dev Returns the amount of tokens owned by `owner`.\n    function balanceOf(address owner) public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /// @dev Returns the amount of tokens that `spender` can spend on behalf of `owner`.\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        returns (uint256 result)\n    {\n        if (_givePermit2InfiniteAllowance()) {\n            if (spender == _PERMIT2) return type(uint256).max;\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x34))\n        }\n    }\n\n    /// @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n    ///\n    /// Emits a {Approval} event.\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        if (_givePermit2InfiniteAllowance()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                // If `spender == _PERMIT2 && amount != type(uint256).max`.\n                if iszero(or(xor(shr(96, shl(96, spender)), _PERMIT2), iszero(not(amount)))) {\n                    mstore(0x00, 0x3f68539a) // `Permit2AllowanceIsFixedAtInfinity()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and store the amount.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            sstore(keccak256(0x0c, 0x34), amount)\n            // Emit the {Approval} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c)))\n        }\n        return true;\n    }\n\n    /// @dev Transfer `amount` tokens from the caller to `to`.\n    ///\n    /// Requirements:\n    /// - `from` must at least have `amount`.\n    ///\n    /// Emits a {Transfer} event.\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        _beforeTokenTransfer(msg.sender, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, caller(), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(msg.sender, to, amount);\n        return true;\n    }\n\n    /// @dev Transfers `amount` tokens from `from` to `to`.\n    ///\n    /// Note: Does not update the allowance if it is the maximum uint256 value.\n    ///\n    /// Requirements:\n    /// - `from` must at least have `amount`.\n    /// - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\n    ///\n    /// Emits a {Transfer} event.\n    function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {\n        _beforeTokenTransfer(from, to, amount);\n        // Code duplication is for zero-cost abstraction if possible.\n        if (_givePermit2InfiniteAllowance()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                let from_ := shl(96, from)\n                if iszero(eq(caller(), _PERMIT2)) {\n                    // Compute the allowance slot and load its value.\n                    mstore(0x20, caller())\n                    mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED))\n                    let allowanceSlot := keccak256(0x0c, 0x34)\n                    let allowance_ := sload(allowanceSlot)\n                    // If the allowance is not the maximum uint256 value.\n                    if not(allowance_) {\n                        // Revert if the amount to be transferred exceeds the allowance.\n                        if gt(amount, allowance_) {\n                            mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                            revert(0x1c, 0x04)\n                        }\n                        // Subtract and store the updated allowance.\n                        sstore(allowanceSlot, sub(allowance_, amount))\n                    }\n                }\n                // Compute the balance slot and load its value.\n                mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n                let fromBalanceSlot := keccak256(0x0c, 0x20)\n                let fromBalance := sload(fromBalanceSlot)\n                // Revert if insufficient balance.\n                if gt(amount, fromBalance) {\n                    mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated balance.\n                sstore(fromBalanceSlot, sub(fromBalance, amount))\n                // Compute the balance slot of `to`.\n                mstore(0x00, to)\n                let toBalanceSlot := keccak256(0x0c, 0x20)\n                // Add and store the updated balance of `to`.\n                // Will not overflow because the sum of all user balances\n                // cannot exceed the maximum uint256 value.\n                sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n                // Emit the {Transfer} event.\n                mstore(0x20, amount)\n                log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n            }\n        } else {\n            /// @solidity memory-safe-assembly\n            assembly {\n                let from_ := shl(96, from)\n                // Compute the allowance slot and load its value.\n                mstore(0x20, caller())\n                mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED))\n                let allowanceSlot := keccak256(0x0c, 0x34)\n                let allowance_ := sload(allowanceSlot)\n                // If the allowance is not the maximum uint256 value.\n                if not(allowance_) {\n                    // Revert if the amount to be transferred exceeds the allowance.\n                    if gt(amount, allowance_) {\n                        mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                        revert(0x1c, 0x04)\n                    }\n                    // Subtract and store the updated allowance.\n                    sstore(allowanceSlot, sub(allowance_, amount))\n                }\n                // Compute the balance slot and load its value.\n                mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n                let fromBalanceSlot := keccak256(0x0c, 0x20)\n                let fromBalance := sload(fromBalanceSlot)\n                // Revert if insufficient balance.\n                if gt(amount, fromBalance) {\n                    mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated balance.\n                sstore(fromBalanceSlot, sub(fromBalance, amount))\n                // Compute the balance slot of `to`.\n                mstore(0x00, to)\n                let toBalanceSlot := keccak256(0x0c, 0x20)\n                // Add and store the updated balance of `to`.\n                // Will not overflow because the sum of all user balances\n                // cannot exceed the maximum uint256 value.\n                sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n                // Emit the {Transfer} event.\n                mstore(0x20, amount)\n                log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n            }\n        }\n        _afterTokenTransfer(from, to, amount);\n        return true;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          EIP-2612                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev For more performance, override to return the constant value\n    /// of `keccak256(bytes(name()))` if `name()` will never change.\n    function _constantNameHash() internal view virtual returns (bytes32 result) {}\n\n    /// @dev If you need a different value, override this function.\n    function _versionHash() internal view virtual returns (bytes32 result) {\n        result = _DEFAULT_VERSION_HASH;\n    }\n\n    /// @dev For inheriting contracts to increment the nonce.\n    function _incrementNonce(address owner) internal virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x0c, _NONCES_SLOT_SEED)\n            mstore(0x00, owner)\n            let nonceSlot := keccak256(0x0c, 0x20)\n            sstore(nonceSlot, add(1, sload(nonceSlot)))\n        }\n    }\n\n    /// @dev Returns the current nonce for `owner`.\n    /// This value is used to compute the signature for EIP-2612 permit.\n    function nonces(address owner) public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the nonce slot and load its value.\n            mstore(0x0c, _NONCES_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /// @dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\n    /// authorized by a signed approval by `owner`.\n    ///\n    /// Emits a {Approval} event.\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (_givePermit2InfiniteAllowance()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                // If `spender == _PERMIT2 && value != type(uint256).max`.\n                if iszero(or(xor(shr(96, shl(96, spender)), _PERMIT2), iszero(not(value)))) {\n                    mstore(0x00, 0x3f68539a) // `Permit2AllowanceIsFixedAtInfinity()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n        }\n        bytes32 nameHash = _constantNameHash();\n        //  We simply calculate it on-the-fly to allow for cases where the `name` may change.\n        if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name()));\n        bytes32 versionHash = _versionHash();\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Revert if the block timestamp is greater than `deadline`.\n            if gt(timestamp(), deadline) {\n                mstore(0x00, 0x1a15a3cc) // `PermitExpired()`.\n                revert(0x1c, 0x04)\n            }\n            let m := mload(0x40) // Grab the free memory pointer.\n            // Clean the upper 96 bits.\n            owner := shr(96, shl(96, owner))\n            spender := shr(96, shl(96, spender))\n            // Compute the nonce slot and load its value.\n            mstore(0x0e, _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX)\n            mstore(0x00, owner)\n            let nonceSlot := keccak256(0x0c, 0x20)\n            let nonceValue := sload(nonceSlot)\n            // Prepare the domain separator.\n            mstore(m, _DOMAIN_TYPEHASH)\n            mstore(add(m, 0x20), nameHash)\n            mstore(add(m, 0x40), versionHash)\n            mstore(add(m, 0x60), chainid())\n            mstore(add(m, 0x80), address())\n            mstore(0x2e, keccak256(m, 0xa0))\n            // Prepare the struct hash.\n            mstore(m, _PERMIT_TYPEHASH)\n            mstore(add(m, 0x20), owner)\n            mstore(add(m, 0x40), spender)\n            mstore(add(m, 0x60), value)\n            mstore(add(m, 0x80), nonceValue)\n            mstore(add(m, 0xa0), deadline)\n            mstore(0x4e, keccak256(m, 0xc0))\n            // Prepare the ecrecover calldata.\n            mstore(0x00, keccak256(0x2c, 0x42))\n            mstore(0x20, and(0xff, v))\n            mstore(0x40, r)\n            mstore(0x60, s)\n            let t := staticcall(gas(), 1, 0x00, 0x80, 0x20, 0x20)\n            // If the ecrecover fails, the returndatasize will be 0x00,\n            // `owner` will be checked if it equals the hash at 0x00,\n            // which evaluates to false (i.e. 0), and we will revert.\n            // If the ecrecover succeeds, the returndatasize will be 0x20,\n            // `owner` will be compared against the returned address at 0x20.\n            if iszero(eq(mload(returndatasize()), owner)) {\n                mstore(0x00, 0xddafbaef) // `InvalidPermit()`.\n                revert(0x1c, 0x04)\n            }\n            // Increment and store the updated nonce.\n            sstore(nonceSlot, add(nonceValue, t)) // `t` is 1 if ecrecover succeeds.\n            // Compute the allowance slot and store the value.\n            // The `owner` is already at slot 0x20.\n            mstore(0x40, or(shl(160, _ALLOWANCE_SLOT_SEED), spender))\n            sstore(keccak256(0x2c, 0x34), value)\n            // Emit the {Approval} event.\n            log3(add(m, 0x60), 0x20, _APPROVAL_EVENT_SIGNATURE, owner, spender)\n            mstore(0x40, m) // Restore the free memory pointer.\n            mstore(0x60, 0) // Restore the zero pointer.\n        }\n    }\n\n    /// @dev Returns the EIP-712 domain separator for the EIP-2612 permit.\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {\n        bytes32 nameHash = _constantNameHash();\n        //  We simply calculate it on-the-fly to allow for cases where the `name` may change.\n        if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name()));\n        bytes32 versionHash = _versionHash();\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Grab the free memory pointer.\n            mstore(m, _DOMAIN_TYPEHASH)\n            mstore(add(m, 0x20), nameHash)\n            mstore(add(m, 0x40), versionHash)\n            mstore(add(m, 0x60), chainid())\n            mstore(add(m, 0x80), address())\n            result := keccak256(m, 0xa0)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  INTERNAL MINT FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Mints `amount` tokens to `to`, increasing the total supply.\n    ///\n    /// Emits a {Transfer} event.\n    function _mint(address to, uint256 amount) internal virtual {\n        _beforeTokenTransfer(address(0), to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let totalSupplyBefore := sload(_TOTAL_SUPPLY_SLOT)\n            let totalSupplyAfter := add(totalSupplyBefore, amount)\n            // Revert if the total supply overflows.\n            if lt(totalSupplyAfter, totalSupplyBefore) {\n                mstore(0x00, 0xe5cfe957) // `TotalSupplyOverflow()`.\n                revert(0x1c, 0x04)\n            }\n            // Store the updated total supply.\n            sstore(_TOTAL_SUPPLY_SLOT, totalSupplyAfter)\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, 0, shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(address(0), to, amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  INTERNAL BURN FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Burns `amount` tokens from `from`, reducing the total supply.\n    ///\n    /// Emits a {Transfer} event.\n    function _burn(address from, uint256 amount) internal virtual {\n        _beforeTokenTransfer(from, address(0), amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, from)\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Subtract and store the updated total supply.\n            sstore(_TOTAL_SUPPLY_SLOT, sub(sload(_TOTAL_SUPPLY_SLOT), amount))\n            // Emit the {Transfer} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, shl(96, from)), 0)\n        }\n        _afterTokenTransfer(from, address(0), amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                INTERNAL TRANSFER FUNCTIONS                 */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Moves `amount` of tokens from `from` to `to`.\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        _beforeTokenTransfer(from, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let from_ := shl(96, from)\n            // Compute the balance slot and load its value.\n            mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                INTERNAL ALLOWANCE FUNCTIONS                */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Updates the allowance of `owner` for `spender` based on spent `amount`.\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        if (_givePermit2InfiniteAllowance()) {\n            if (spender == _PERMIT2) return; // Do nothing, as allowance is infinite.\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and load its value.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            let allowanceSlot := keccak256(0x0c, 0x34)\n            let allowance_ := sload(allowanceSlot)\n            // If the allowance is not the maximum uint256 value.\n            if not(allowance_) {\n                // Revert if the amount to be transferred exceeds the allowance.\n                if gt(amount, allowance_) {\n                    mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated allowance.\n                sstore(allowanceSlot, sub(allowance_, amount))\n            }\n        }\n    }\n\n    /// @dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\n    ///\n    /// Emits a {Approval} event.\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        if (_givePermit2InfiniteAllowance()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                // If `spender == _PERMIT2 && amount != type(uint256).max`.\n                if iszero(or(xor(shr(96, shl(96, spender)), _PERMIT2), iszero(not(amount)))) {\n                    mstore(0x00, 0x3f68539a) // `Permit2AllowanceIsFixedAtInfinity()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            let owner_ := shl(96, owner)\n            // Compute the allowance slot and store the amount.\n            mstore(0x20, spender)\n            mstore(0x0c, or(owner_, _ALLOWANCE_SLOT_SEED))\n            sstore(keccak256(0x0c, 0x34), amount)\n            // Emit the {Approval} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, shr(96, owner_), shr(96, mload(0x2c)))\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     HOOKS TO OVERRIDE                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Hook that is called before any transfer of tokens.\n    /// This includes minting and burning.\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /// @dev Hook that is called after any transfer of tokens.\n    /// This includes minting and burning.\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          PERMIT2                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns whether to fix the Permit2 contract's allowance at infinity.\n    ///\n    /// This value should be kept constant after contract initialization,\n    /// or else the actual allowance values may not match with the {Approval} events.\n    /// For best performance, return a compile-time constant for zero-cost abstraction.\n    function _givePermit2InfiniteAllowance() internal view virtual returns (bool) {\n        return false;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"src/SwapAbstract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.28;\r\n\r\nimport \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\";\r\nimport \"./ERC223.sol\";\r\n\r\nstruct Permit2Sig {\r\n    uint deadline;\r\n    uint8 v;\r\n    bytes32 r;\r\n    bytes32 s;\r\n}\r\n\r\n/* It's more of an interface just with public functions */\r\nabstract contract SwapAbstract {\r\n    ERC20 public immutable asset;\r\n\r\n    constructor(ERC20 asset_){\r\n        asset = asset_;\r\n    }\r\n\r\n    function erc20ToNativePrice(uint erc20sSold) public virtual view returns (uint nativesBought);\r\n    function nativeToERC20Price(uint nativesSold) public virtual view returns (uint erc20sBought);\r\n\r\n    // Use these to handle any effects and interactions\r\n    function _transferNativesBought(address to, uint nativesBought) internal virtual;\r\n    // The erc20 can be a transfer or a mint\r\n    function _transferERC20sBought(address to, uint erc20sBought) internal virtual;\r\n\r\n    // Sometimes the erc20 is a transferForm and sometimes it's a burn\r\n    function swapERC20ToNative(uint erc20sSold, address to) public virtual returns (uint nativesBought);\r\n\r\n    \r\n    function swapNativeToERC20(address to) public payable returns (uint erc20sBought) {\r\n        erc20sBought = nativeToERC20Price(msg.value);\r\n        _transferERC20sBought(to, erc20sBought);\r\n    }\r\n\r\n    // ERC223 tokens can use this instead of erc20ToNativeSwap() to remove the need for approval\r\n    // which is even better than permit2 which still requires approval variable\r\n\r\n    // Perhaps the biggest danger of ERC223 is if tokenReceived is if the balance did not increase\r\n    // due to a bad implementation. Even so, how much native tokens that can be extracted is\r\n    // still capped by `nativesBuyable()`.\r\n    function tokenReceived(address from, uint value, bytes calldata) external returns (bytes4) {\r\n        // Checks\r\n        require(msg.sender == address(asset));\r\n\r\n        // Effects and Interactions\r\n        _transferNativesBought(from, erc20ToNativePrice(value));\r\n\r\n        return 0x8943ec02;\r\n    }\r\n\r\n\r\n    // msg.sender Defaults\r\n    function swapERC20ToNative(uint erc20sSold) public returns (uint nativesBought) {\r\n        return swapERC20ToNative(erc20sSold, msg.sender);\r\n    }\r\n\r\n    function swapNativeToERC20() external payable returns (uint erc20sBought) {\r\n        return swapNativeToERC20(msg.sender);\r\n    }\r\n\r\n\r\n    /* Permit functions */\r\n    function swapERC20ToNative(uint erc20sSold, address to, Permit2Sig calldata sig) public returns (uint nativesBought) {\r\n        asset.permit(msg.sender, address(this), erc20sSold, sig.deadline, sig.v, sig.r, sig.s);\r\n        return swapERC20ToNative(erc20sSold, to);\r\n    }\r\n    \r\n    function swapERC20ToNative(uint erc20sSold, Permit2Sig calldata sig) external returns (uint nativesBought) {\r\n        return swapERC20ToNative(erc20sSold,msg.sender,sig);\r\n    }\r\n\r\n    function swapNativeToERC20(SwapAbstract sa, uint nativesSold, address to) external returns (uint nativesEarned) {\r\n        uint startBalance = asset.balanceOf(address(this));\r\n\r\n        sa.swapNativeToERC20{value:nativesSold}();\r\n\r\n        nativesEarned = erc20ToNativePrice(asset.balanceOf(address(this)) - startBalance) - nativesSold;\r\n\r\n        _transferNativesBought(to, nativesEarned);\r\n    }\r\n\r\n    function swapERC20ToNative(SwapAbstract sa, uint erc20sSold, address to) external returns (uint erc20sEarned) {\r\n        uint startBalance = address(this).balance;\r\n\r\n        if(address(sa) != address(asset)) { //If the token is from the same contract, it doesn't need approval\r\n            asset.approve(address(sa),erc20sSold);\r\n        }\r\n\r\n        sa.swapERC20ToNative(erc20sSold);\r\n\r\n        erc20sEarned = nativeToERC20Price(address(this).balance - startBalance) - erc20sSold;\r\n\r\n        _transferERC20sBought(to, erc20sEarned);\r\n    }\r\n\r\n    // If the token is the same as sa, do not use this because it'll prevent a burn. instead just use the\r\n    // erc20 version.\r\n    function swapERC223ToNative(SwapAbstract sa, uint erc20sSold, address to) external returns (uint erc20sEarned) {\r\n        uint startBalance = address(this).balance;\r\n\r\n        ERC223(address(asset)).transfer(address(sa),erc20sSold,\"\");\r\n\r\n        erc20sEarned = nativeToERC20Price(address(this).balance - startBalance) - erc20sSold;\r\n\r\n        _transferERC20sBought(to, erc20sEarned);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"src/ERC223.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.28;\r\n\r\nimport \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\";\r\nimport \"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol\";\r\n\r\nabstract contract ERC223 is ERC20 {\r\n\r\n    function transfer(address _to, uint _value, bytes calldata _data) public returns (bool success)\r\n    {\r\n        transfer(_to, _value);\r\n\r\n        IERC223Recipient(_to).tokenReceived(msg.sender, _value, _data);\r\n\r\n        return true;\r\n    }\r\n}"
			},
			"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol": {
				"content": "pragma solidity ^0.8.0;\n\n /**\n * @title Contract that will work with ERC-223 tokens.\n */\n \nabstract contract IERC223Recipient {\n\n\n struct ERC223TransferInfo\n    {\n        address token_contract;\n        address sender;\n        uint256 value;\n        bytes   data;\n    }\n    \n    ERC223TransferInfo private tkn;\n    \n/**\n * @dev Standard ERC223 function that will handle incoming token transfers.\n *\n * @param _from  Token sender address.\n * @param _value Amount of tokens.\n * @param _data  Transaction metadata.\n */\n    function tokenReceived(address _from, uint _value, bytes memory _data) public virtual returns (bytes4)\n    {\n        /**\n         * @dev Note that inside of the token transaction handler the actual sender of token transfer is accessible via the tkn.sender variable\n         * (analogue of msg.sender for Ether transfers)\n         * \n         * tkn.value - is the amount of transferred tokens\n         * tkn.data  - is the \"metadata\" of token transfer\n         * tkn.token_contract is most likely equal to msg.sender because the token contract typically invokes this function\n        */\n        tkn.token_contract = msg.sender;\n        tkn.sender         = _from;\n        tkn.value          = _value;\n        tkn.data           = _data;\n        \n        // ACTUAL CODE\n\n        return 0x8943ec02;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol": {
				"IERC223Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "tokenReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"tokenReceived(address,uint256,bytes)": {
								"details": "Standard ERC223 function that will handle incoming token transfers.",
								"params": {
									"_data": "Transaction metadata.",
									"_from": "Token sender address.",
									"_value": "Amount of tokens."
								}
							}
						},
						"title": "Contract that will work with ERC-223 tokens.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokenReceived(address,uint256,bytes)": "8943ec02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokenReceived(address,uint256,bytes)\":{\"details\":\"Standard ERC223 function that will handle incoming token transfers.\",\"params\":{\"_data\":\"Transaction metadata.\",\"_from\":\"Token sender address.\",\"_value\":\"Amount of tokens.\"}}},\"title\":\"Contract that will work with ERC-223 tokens.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol\":\"IERC223Recipient\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol\":{\"keccak256\":\"0x7a6b6ee4848db6125d60425357ce1431162c8ad3a8540b9c9d546078d032aed9\",\"urls\":[\"bzz-raw://dff0d4bc5574ef47e89e364ffb711d5f4f2eea483fc92df20f77696b8b4f963d\",\"dweb:/ipfs/QmbTyL9FCYFtn4tCo7MzGjsJjhP4QbKySvbpkoGmUeFECt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 192,
								"contract": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol:IERC223Recipient",
								"label": "tkn",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(ERC223TransferInfo)189_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_struct(ERC223TransferInfo)189_storage": {
								"encoding": "inplace",
								"label": "struct IERC223Recipient.ERC223TransferInfo",
								"members": [
									{
										"astId": 182,
										"contract": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol:IERC223Recipient",
										"label": "token_contract",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 184,
										"contract": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol:IERC223Recipient",
										"label": "sender",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 186,
										"contract": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol:IERC223Recipient",
										"label": "value",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 188,
										"contract": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol:IERC223Recipient",
										"label": "data",
										"offset": 0,
										"slot": "3",
										"type": "t_bytes_storage"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"name": "AllowanceOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AllowanceUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPermit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Permit2AllowanceIsFixedAtInfinity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TotalSupplyOverflow",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)",
						"details": "Note: - The ERC20 standard allows minting and transferring to and from the zero address,   minting and transferring zero tokens, as well as self-approvals.   For performance, this implementation WILL NOT revert for such actions.   Please add any checks with overrides if desired. - The `permit` function uses the ecrecover precompile (0x1). If you are overriding: - NEVER violate the ERC20 invariant:   the total sum of all balances must be equal to `totalSupply()`. - Check that the overridden function is actually used in the function you want to   change the behavior of. Much of the code has been manually inlined for performance.",
						"errors": {
							"AllowanceOverflow()": [
								{
									"details": "The allowance has overflowed."
								}
							],
							"AllowanceUnderflow()": [
								{
									"details": "The allowance has underflowed."
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Insufficient allowance."
								}
							],
							"InsufficientBalance()": [
								{
									"details": "Insufficient balance."
								}
							],
							"InvalidPermit()": [
								{
									"details": "The permit is invalid."
								}
							],
							"Permit2AllowanceIsFixedAtInfinity()": [
								{
									"details": "The allowance of Permit2 is fixed at infinity."
								}
							],
							"PermitExpired()": [
								{
									"details": "The permit has expired."
								}
							],
							"TotalSupplyOverflow()": [
								{
									"details": "The total supply has overflowed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the EIP-712 domain separator for the EIP-2612 permit."
							},
							"allowance(address,address)": {
								"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `owner`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
							}
						},
						"stateVariables": {
							"_ALLOWANCE_SLOT_SEED": {
								"details": "The allowance slot of (`owner`, `spender`) is given by: ```     mstore(0x20, spender)     mstore(0x0c, _ALLOWANCE_SLOT_SEED)     mstore(0x00, owner)     let allowanceSlot := keccak256(0x0c, 0x34) ```"
							},
							"_APPROVAL_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Approval(address,address,uint256)\"))`."
							},
							"_BALANCE_SLOT_SEED": {
								"details": "The balance slot of `owner` is given by: ```     mstore(0x0c, _BALANCE_SLOT_SEED)     mstore(0x00, owner)     let balanceSlot := keccak256(0x0c, 0x20) ```"
							},
							"_DEFAULT_VERSION_HASH": {
								"details": "`keccak256(\"1\")`. If you need to use a different version, override `_versionHash`."
							},
							"_DOMAIN_TYPEHASH": {
								"details": "`keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`."
							},
							"_NONCES_SLOT_SEED": {
								"details": "The nonce slot of `owner` is given by: ```     mstore(0x0c, _NONCES_SLOT_SEED)     mstore(0x00, owner)     let nonceSlot := keccak256(0x0c, 0x20) ```"
							},
							"_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX": {
								"details": "`(_NONCES_SLOT_SEED << 16) | 0x1901`."
							},
							"_PERMIT2": {
								"details": "The canonical Permit2 address. For signature-based allowance granting for single transaction ERC20 `transferFrom`. To enable, override `_givePermit2InfiniteAllowance()`. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)"
							},
							"_PERMIT_TYPEHASH": {
								"details": "`keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`."
							},
							"_TOTAL_SUPPLY_SLOT": {
								"details": "The storage slot for the total supply."
							},
							"_TRANSFER_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Transfer(address,address,uint256)\"))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2AllowanceIsFixedAtInfinity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\",\"details\":\"Note: - The ERC20 standard allows minting and transferring to and from the zero address,   minting and transferring zero tokens, as well as self-approvals.   For performance, this implementation WILL NOT revert for such actions.   Please add any checks with overrides if desired. - The `permit` function uses the ecrecover precompile (0x1). If you are overriding: - NEVER violate the ERC20 invariant:   the total sum of all balances must be equal to `totalSupply()`. - Check that the overridden function is actually used in the function you want to   change the behavior of. Much of the code has been manually inlined for performance.\",\"errors\":{\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"Permit2AllowanceIsFixedAtInfinity()\":[{\"details\":\"The allowance of Permit2 is fixed at infinity.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-712 domain separator for the EIP-2612 permit.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"}},\"stateVariables\":{\"_ALLOWANCE_SLOT_SEED\":{\"details\":\"The allowance slot of (`owner`, `spender`) is given by: ```     mstore(0x20, spender)     mstore(0x0c, _ALLOWANCE_SLOT_SEED)     mstore(0x00, owner)     let allowanceSlot := keccak256(0x0c, 0x34) ```\"},\"_APPROVAL_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Approval(address,address,uint256)\\\"))`.\"},\"_BALANCE_SLOT_SEED\":{\"details\":\"The balance slot of `owner` is given by: ```     mstore(0x0c, _BALANCE_SLOT_SEED)     mstore(0x00, owner)     let balanceSlot := keccak256(0x0c, 0x20) ```\"},\"_DEFAULT_VERSION_HASH\":{\"details\":\"`keccak256(\\\"1\\\")`. If you need to use a different version, override `_versionHash`.\"},\"_DOMAIN_TYPEHASH\":{\"details\":\"`keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")`.\"},\"_NONCES_SLOT_SEED\":{\"details\":\"The nonce slot of `owner` is given by: ```     mstore(0x0c, _NONCES_SLOT_SEED)     mstore(0x00, owner)     let nonceSlot := keccak256(0x0c, 0x20) ```\"},\"_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX\":{\"details\":\"`(_NONCES_SLOT_SEED << 16) | 0x1901`.\"},\"_PERMIT2\":{\"details\":\"The canonical Permit2 address. For signature-based allowance granting for single transaction ERC20 `transferFrom`. To enable, override `_givePermit2InfiniteAllowance()`. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\"},\"_PERMIT_TYPEHASH\":{\"details\":\"`keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")`.\"},\"_TOTAL_SUPPLY_SLOT\":{\"details\":\"The storage slot for the total supply.\"},\"_TRANSFER_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Transfer(address,address,uint256)\\\"))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":{\"keccak256\":\"0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2\",\"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple ERC20 + EIP-2612 implementation.",
						"version": 1
					}
				}
			},
			"src/ERC223.sol": {
				"ERC223": {
					"abi": [
						{
							"inputs": [],
							"name": "AllowanceOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AllowanceUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPermit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Permit2AllowanceIsFixedAtInfinity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TotalSupplyOverflow",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AllowanceOverflow()": [
								{
									"details": "The allowance has overflowed."
								}
							],
							"AllowanceUnderflow()": [
								{
									"details": "The allowance has underflowed."
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Insufficient allowance."
								}
							],
							"InsufficientBalance()": [
								{
									"details": "Insufficient balance."
								}
							],
							"InvalidPermit()": [
								{
									"details": "The permit is invalid."
								}
							],
							"Permit2AllowanceIsFixedAtInfinity()": [
								{
									"details": "The allowance of Permit2 is fixed at infinity."
								}
							],
							"PermitExpired()": [
								{
									"details": "The permit has expired."
								}
							],
							"TotalSupplyOverflow()": [
								{
									"details": "The total supply has overflowed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the EIP-712 domain separator for the EIP-2612 permit."
							},
							"allowance(address,address)": {
								"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `owner`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transfer(address,uint256,bytes)": "be45fd62",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2AllowanceIsFixedAtInfinity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"Permit2AllowanceIsFixedAtInfinity()\":[{\"details\":\"The allowance of Permit2 is fixed at infinity.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-712 domain separator for the EIP-2612 permit.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC223.sol\":\"ERC223\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol\":{\"keccak256\":\"0x7a6b6ee4848db6125d60425357ce1431162c8ad3a8540b9c9d546078d032aed9\",\"urls\":[\"bzz-raw://dff0d4bc5574ef47e89e364ffb711d5f4f2eea483fc92df20f77696b8b4f963d\",\"dweb:/ipfs/QmbTyL9FCYFtn4tCo7MzGjsJjhP4QbKySvbpkoGmUeFECt\"]},\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":{\"keccak256\":\"0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2\",\"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV\"]},\"src/ERC223.sol\":{\"keccak256\":\"0x2479340fcf249ff8fc1ae63db370c5c3ad56adcd332b289e99b228e191b63d7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1828bc6ee9897e6d7175d3637d5604ac6584c933827ae9bd8b691e0ed2cca769\",\"dweb:/ipfs/QmbE2xHNwy8gwS3f9fDTGTcqNfC3W9kmXx9YqLa2jRXXiV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/ExchangeAbstract.sol": {
				"ExchangeAbstract": {
					"abi": [
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20BuyableRate",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20BuyableTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20SellInhibitor",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "erc20ToNativePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20sBuyable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativeBuyableRate",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativeSellInhibitor",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nativesSold",
									"type": "uint256"
								}
							],
							"name": "nativeToERC20Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativesBuyable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapERC223ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nativesSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "tokenReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"asset()": "38d52e0f",
							"erc20BuyableRate()": "f86329e1",
							"erc20BuyableTime()": "e46dbd07",
							"erc20SellInhibitor()": "82e3d8bd",
							"erc20ToNativePrice(uint256)": "4206abe9",
							"erc20sBuyable()": "f4d0bd72",
							"nativeBuyableRate()": "7cc27b40",
							"nativeSellInhibitor()": "058d1573",
							"nativeToERC20Price(uint256)": "7b383f18",
							"nativesBuyable()": "b3ca7f2a",
							"swapERC20ToNative(address,uint256,address)": "17b31167",
							"swapERC20ToNative(uint256)": "6032f600",
							"swapERC20ToNative(uint256,(uint256,uint8,bytes32,bytes32))": "6263913c",
							"swapERC20ToNative(uint256,address)": "b3841f26",
							"swapERC20ToNative(uint256,address,(uint256,uint8,bytes32,bytes32))": "94ef2103",
							"swapERC223ToNative(address,uint256,address)": "af4fc206",
							"swapNativeToERC20()": "223ecf7e",
							"swapNativeToERC20(address)": "12958a6b",
							"swapNativeToERC20(address,uint256,address)": "e5aca599",
							"tokenReceived(address,uint256,bytes)": "8943ec02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20BuyableRate\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20BuyableTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20SellInhibitor\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"erc20ToNativePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20sBuyable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeBuyableRate\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeSellInhibitor\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesSold\",\"type\":\"uint256\"}],\"name\":\"nativeToERC20Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativesBuyable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapERC223ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nativesSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ExchangeAbstract.sol\":\"ExchangeAbstract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol\":{\"keccak256\":\"0x7a6b6ee4848db6125d60425357ce1431162c8ad3a8540b9c9d546078d032aed9\",\"urls\":[\"bzz-raw://dff0d4bc5574ef47e89e364ffb711d5f4f2eea483fc92df20f77696b8b4f963d\",\"dweb:/ipfs/QmbTyL9FCYFtn4tCo7MzGjsJjhP4QbKySvbpkoGmUeFECt\"]},\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":{\"keccak256\":\"0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2\",\"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV\"]},\"src/ERC223.sol\":{\"keccak256\":\"0x2479340fcf249ff8fc1ae63db370c5c3ad56adcd332b289e99b228e191b63d7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1828bc6ee9897e6d7175d3637d5604ac6584c933827ae9bd8b691e0ed2cca769\",\"dweb:/ipfs/QmbE2xHNwy8gwS3f9fDTGTcqNfC3W9kmXx9YqLa2jRXXiV\"]},\"src/ExchangeAbstract.sol\":{\"keccak256\":\"0xfd2844061831c39e28cb691a7954bcd3c46ae0a37be990275cf7cb9fcb7a9aa9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c8899a2695debccc9f2d88c7e16896c01f1be40a486d48d89bd5c8cbe13c06e4\",\"dweb:/ipfs/QmUE4Y9xoCoZhVcJ9TKZHh1fFSyodxvsA6nzgw2wtj4FeL\"]},\"src/SwapAbstract.sol\":{\"keccak256\":\"0xed20183c4684321e543d4fbf76ed4182aba49cd1302713f240e9bceed5ff7dc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2946ed6c20f148219a532dc6c5399bf0bca89e93543e7b26c8d269475fdb71b\",\"dweb:/ipfs/QmbSxfnP7heAKfa3UFk8UoQ3ue28eVhfd8BpLC1DZBhBRp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 794,
								"contract": "src/ExchangeAbstract.sol:ExchangeAbstract",
								"label": "erc20BuyableTime",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 798,
								"contract": "src/ExchangeAbstract.sol:ExchangeAbstract",
								"label": "_nativeBuyableTime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/PinusVault2.sol": {
				"PinusVault2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AllowanceOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AllowanceUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPermit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Permit2AllowanceIsFixedAtInfinity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TotalSupplyOverflow",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "customCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "returnData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20BuyableRate",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20BuyableTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20SellInhibitor",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "erc20ToNativePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20sBuyable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nameHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativeBuyableRate",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativeSellInhibitor",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nativesSold",
									"type": "uint256"
								}
							],
							"name": "nativeToERC20Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativesBuyable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapERC223ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nativesSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "tokenReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AllowanceOverflow()": [
								{
									"details": "The allowance has overflowed."
								}
							],
							"AllowanceUnderflow()": [
								{
									"details": "The allowance has underflowed."
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Insufficient allowance."
								}
							],
							"InsufficientBalance()": [
								{
									"details": "Insufficient balance."
								}
							],
							"InvalidPermit()": [
								{
									"details": "The permit is invalid."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"Permit2AllowanceIsFixedAtInfinity()": [
								{
									"details": "The allowance of Permit2 is fixed at infinity."
								}
							],
							"PermitExpired()": [
								{
									"details": "The permit has expired."
								}
							],
							"TotalSupplyOverflow()": [
								{
									"details": "The total supply has overflowed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the EIP-712 domain separator for the EIP-2612 permit."
							},
							"allowance(address,address)": {
								"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `owner`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/PinusVault2.sol\":1822:3638  contract PinusVault2 ... */\n  mstore(0x40, 0x0180)\n    /* \"src/ExchangeAbstract.sol\":405:420  block.timestamp */\n  timestamp\n    /* \"src/ExchangeAbstract.sol\":374:420  uint public erc20BuyableTime = block.timestamp */\n  0x00\n  sstore\n    /* \"src/ExchangeAbstract.sol\":461:476  block.timestamp */\n  timestamp\n    /* \"src/ExchangeAbstract.sol\":427:476  uint private _nativeBuyableTime = block.timestamp */\n  0x01\n  sstore\n    /* \"src/PinusVault2.sol\":2106:2372  constructor(address owner, string memory name_, string memory symbol_) Ownable(owner) SwapAbstract(this) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/PinusVault2.sol\":2185:2190  owner */\n  dup3\n    /* \"src/PinusVault2.sol\":1617:1624  1 ether */\n  0x0de0b6b3a7640000\n    /* \"src/PinusVault2.sol\":1669:1696  1 ether / uint128(24 hours) */\n  tag_6\n    /* \"src/PinusVault2.sol\":1687:1695  24 hours */\n  0x015180\n    /* \"src/PinusVault2.sol\":1617:1624  1 ether */\n  dup3\n    /* \"src/PinusVault2.sol\":1669:1696  1 ether / uint128(24 hours) */\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"src/PinusVault2.sol\":1735:1743  .1 ether */\n  0x016345785d8a0000\n    /* \"src/PinusVault2.sol\":1789:1817  .1 ether / uint128(24 hours) */\n  tag_8\n    /* \"src/PinusVault2.sol\":1808:1816  24 hours */\n  0x015180\n    /* \"src/PinusVault2.sol\":1735:1743  .1 ether */\n  dup3\n    /* \"src/PinusVault2.sol\":1789:1817  .1 ether / uint128(24 hours) */\n  tag_7\n  jump\t// in\ntag_8:\n    /* \"src/PinusVault2.sol\":2205:2209  this */\n  address\n    /* \"src/SwapAbstract.sol\":442:456  asset = asset_ */\n  0x80\n  mstore\n  sub(shl(0x80, 0x01), 0x01)\n    /* \"src/ExchangeAbstract.sol\":666:706  erc20SellInhibitor = erc20SellInhibitor_ */\n  swap4\n  dup5\n  and\n  0xa0\n  mstore\n    /* \"src/ExchangeAbstract.sol\":717:753  erc20BuyableRate = erc20BuyableRate_ */\n  swap2\n  dup4\n  and\n  0xc0\n  mstore\n    /* \"src/ExchangeAbstract.sol\":764:806  nativeSellInhibitor = nativeSellInhibitor_ */\n  dup3\n  and\n  0xe0\n  mstore\n    /* \"src/ExchangeAbstract.sol\":817:855  nativeBuyableRate = nativeBuyableRate_ */\n  and\n  0x0100\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2048:2099   */\n  mstore\n    /* \"#utility.yul\":2021:2039   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"src/PinusVault2.sol\":2255:2260  name_ */\n  dup2\n    /* \"src/PinusVault2.sol\":2238:2261  abi.encodePacked(name_) */\n  add(0x20, mload(0x40))\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"src/PinusVault2.sol\":2230:2262  bytes32(abi.encodePacked(name_)) */\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"src/PinusVault2.sol\":2222:2262  _name = bytes32(abi.encodePacked(name_)) */\n  0x0120\n  mstore\n    /* \"src/PinusVault2.sol\":2284:2307  keccak256(bytes(name_)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"src/PinusVault2.sol\":2273:2307  nameHash = keccak256(bytes(name_)) */\n  0x0160\n  mstore\n    /* \"src/PinusVault2.sol\":2338:2363  abi.encodePacked(symbol_) */\n  mload(0x40)\n  tag_24\n  swap2\n    /* \"src/PinusVault2.sol\":2355:2362  symbol_ */\n  dup4\n  swap2\n    /* \"src/PinusVault2.sol\":2338:2363  abi.encodePacked(symbol_) */\n  add\n  tag_21\n  jump\t// in\ntag_24:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"src/PinusVault2.sol\":2330:2364  bytes32(abi.encodePacked(symbol_)) */\n  tag_25\n  swap1\n  tag_23\n  jump\t// in\ntag_25:\n    /* \"src/PinusVault2.sol\":2320:2364  _symbol = bytes32(abi.encodePacked(symbol_)) */\n  0x0140\n  mstore\n  pop\n    /* \"src/PinusVault2.sol\":1822:3638  contract PinusVault2 ... */\n  tag_30\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x02\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_28:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_29:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  0x00\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_33:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_35\n  tag_28\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_37\n  tag_28\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  0x00\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_38:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1598   */\ntag_3:\n    /* \"#utility.yul\":982:988   */\n  0x00\n    /* \"#utility.yul\":990:996   */\n  0x00\n    /* \"#utility.yul\":998:1004   */\n  0x00\n    /* \"#utility.yul\":1051:1053   */\n  0x60\n    /* \"#utility.yul\":1039:1048   */\n  dup5\n    /* \"#utility.yul\":1030:1037   */\n  dup7\n    /* \"#utility.yul\":1026:1049   */\n  sub\n    /* \"#utility.yul\":1022:1054   */\n  slt\n    /* \"#utility.yul\":1019:1071   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1067:1068   */\n  0x00\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1057:1069   */\n  revert\n    /* \"#utility.yul\":1019:1071   */\ntag_40:\n    /* \"#utility.yul\":1093:1109   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1138:1169   */\n  dup2\n  and\n    /* \"#utility.yul\":1128:1170   */\n  dup2\n  eq\n    /* \"#utility.yul\":1118:1188   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1184:1185   */\n  0x00\n    /* \"#utility.yul\":1181:1182   */\n  0x00\n    /* \"#utility.yul\":1174:1186   */\n  revert\n    /* \"#utility.yul\":1118:1188   */\ntag_41:\n    /* \"#utility.yul\":1256:1258   */\n  0x20\n    /* \"#utility.yul\":1241:1259   */\n  dup6\n  add\n    /* \"#utility.yul\":1235:1260   */\n  mload\n    /* \"#utility.yul\":1207:1212   */\n  swap1\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1272:1302   */\n  dup2\n  gt\n    /* \"#utility.yul\":1269:1319   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1315:1316   */\n  0x00\n    /* \"#utility.yul\":1312:1313   */\n  0x00\n    /* \"#utility.yul\":1305:1317   */\n  revert\n    /* \"#utility.yul\":1269:1319   */\ntag_42:\n    /* \"#utility.yul\":1338:1399   */\n  tag_43\n    /* \"#utility.yul\":1391:1398   */\n  dup7\n    /* \"#utility.yul\":1382:1388   */\n  dup3\n    /* \"#utility.yul\":1371:1380   */\n  dup8\n    /* \"#utility.yul\":1367:1389   */\n  add\n    /* \"#utility.yul\":1338:1399   */\n  tag_29\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1445:1447   */\n  0x40\n    /* \"#utility.yul\":1430:1448   */\n  dup7\n  add\n    /* \"#utility.yul\":1424:1449   */\n  mload\n    /* \"#utility.yul\":1328:1399   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1424:1449   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1461:1493   */\n  dup2\n  gt\n    /* \"#utility.yul\":1458:1510   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  0x00\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1458:1510   */\ntag_44:\n    /* \"#utility.yul\":1529:1592   */\n  tag_45\n    /* \"#utility.yul\":1584:1591   */\n  dup7\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup8\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_29\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":874:1598   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1603:1897   */\ntag_7:\n    /* \"#utility.yul\":1643:1644   */\n  0x00\n  sub(shl(0x80, 0x01), 0x01)\n    /* \"#utility.yul\":1670:1697   */\n  dup4\n  and\n  dup1\n    /* \"#utility.yul\":1706:1840   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1762:1772   */\n  0x4e487b71\n    /* \"#utility.yul\":1757:1760   */\n  0xe0\n    /* \"#utility.yul\":1753:1773   */\n  shl\n    /* \"#utility.yul\":1750:1751   */\n  0x00\n    /* \"#utility.yul\":1743:1774   */\n  mstore\n    /* \"#utility.yul\":1797:1801   */\n  0x12\n    /* \"#utility.yul\":1794:1795   */\n  0x04\n    /* \"#utility.yul\":1787:1802   */\n  mstore\n    /* \"#utility.yul\":1825:1829   */\n  0x24\n    /* \"#utility.yul\":1822:1823   */\n  0x00\n    /* \"#utility.yul\":1815:1830   */\n  revert\n    /* \"#utility.yul\":1706:1840   */\ntag_47:\n  sub(shl(0x80, 0x01), 0x01)\n    /* \"#utility.yul\":1858:1885   */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"#utility.yul\":1854:1891   */\n  swap2\n  swap1\n  swap2\n  div\n  swap3\n    /* \"#utility.yul\":1603:1897   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2110:2413   */\ntag_21:\n    /* \"#utility.yul\":2241:2244   */\n  0x00\n    /* \"#utility.yul\":2279:2285   */\n  dup3\n    /* \"#utility.yul\":2273:2286   */\n  mload\n    /* \"#utility.yul\":2325:2331   */\n  dup1\n    /* \"#utility.yul\":2318:2322   */\n  0x20\n    /* \"#utility.yul\":2310:2316   */\n  dup6\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2301:2304   */\n  dup5\n    /* \"#utility.yul\":2295:2332   */\n  mcopy\n    /* \"#utility.yul\":2387:2388   */\n  0x00\n    /* \"#utility.yul\":2351:2367   */\n  swap3\n  add\n    /* \"#utility.yul\":2376:2389   */\n  swap2\n  dup3\n  mstore\n  pop\n    /* \"#utility.yul\":2351:2367   */\n  swap2\n    /* \"#utility.yul\":2110:2413   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2418:2715   */\ntag_23:\n    /* \"#utility.yul\":2536:2548   */\n  dup1\n  mload\n    /* \"#utility.yul\":2583:2587   */\n  0x20\n    /* \"#utility.yul\":2572:2588   */\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":2566:2589   */\n  mload\n  swap2\n    /* \"#utility.yul\":2536:2548   */\n  swap1\n    /* \"#utility.yul\":2601:2617   */\n  dup2\n  lt\n    /* \"#utility.yul\":2598:2709   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2695:2696   */\n  0x00\n    /* \"#utility.yul\":2691:2697   */\n  not\n    /* \"#utility.yul\":2681:2687   */\n  dup2\n    /* \"#utility.yul\":2675:2679   */\n  0x20\n    /* \"#utility.yul\":2671:2688   */\n  sub\n    /* \"#utility.yul\":2668:2669   */\n  0x03\n    /* \"#utility.yul\":2664:2689   */\n  shl\n    /* \"#utility.yul\":2660:2698   */\n  shl\n    /* \"#utility.yul\":2653:2658   */\n  dup3\n    /* \"#utility.yul\":2649:2699   */\n  and\n    /* \"#utility.yul\":2640:2699   */\n  swap2\n  pop\n    /* \"#utility.yul\":2598:2709   */\ntag_51:\n  pop\n    /* \"#utility.yul\":2418:2715   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_30:\n    /* \"src/PinusVault2.sol\":1822:3638  contract PinusVault2 ... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  mload(0x0160)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n  0x00\n  assignImmutable(\"0x61c015546d5e44346798f1c6880464efac2cf5ed99e68a15f785eaa6fd93e7ec\")\n  0x00\n  assignImmutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n  0x00\n  assignImmutable(\"0x7751dd710c07ab49cc2c1853892b3f71f3ced69475463e7c975b4ac84ae5fa90\")\n  0x00\n  assignImmutable(\"0xadda5d3d116db89da9e084ab1b2cc501d795d98d1503f1026c7e065d5d1e5ce7\")\n  0x00\n  assignImmutable(\"0x808f739b0ff6f50ded0ff766b33bc9aee9c87ee99f1e55588f2719e55787021e\")\n  0x00\n  assignImmutable(\"0x3ef4406067f3f2b83779fd8c58e51154fe5e1675c0d17583dd1aac1409fbf9d7\")\n  0x00\n  assignImmutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/PinusVault2.sol\":1822:3638  contract PinusVault2 ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ecebe00\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xb3ca7f2a\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xe5aca599\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xe5aca599\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf172a4ce\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf4d0bd72\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf86329e1\n      eq\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      dup1\n      0xb3ca7f2a\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xbe45fd62\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe46dbd07\n      eq\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      dup1\n      0x94ef2103\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x94ef2103\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xaf4fc206\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb3841f26\n      eq\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      dup1\n      0x7ecebe00\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x82e3d8bd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8943ec02\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      dup1\n      0x313ce567\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x6263913c\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x6263913c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7b383f18\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7cc27b40\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x38d52e0f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4206abe9\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6032f600\n      eq\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      dup1\n      0x12958a6b\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x12958a6b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x17b31167\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x223ecf7e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_46:\n      dup1\n      0x058d1573\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10ab2d01\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"src/ExchangeAbstract.sol\":268:312  uint128 public immutable nativeSellInhibitor */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      immutable(\"0xadda5d3d116db89da9e084ab1b2cc501d795d98d1503f1026c7e065d5d1e5ce7\")\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":178:225   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:226   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/ExchangeAbstract.sol\":268:312  uint128 public immutable nativeSellInhibitor */\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/PinusVault2.sol\":2499:2616  function name() public view override returns (string memory){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8175:9204  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      revert(0x00, 0x00)\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":1429:1443   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1422:1444   */\n      iszero\n        /* \"#utility.yul\":1404:1445   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1392:1394   */\n      0x20\n        /* \"#utility.yul\":1377:1395   */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8175:9204  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n      tag_50\n        /* \"#utility.yul\":1264:1451   */\n      jump\n        /* \"src/PinusVault2.sol\":2757:2937  function customCall(address to,uint value,bytes calldata data) public onlyOwner returns (bool success, bytes memory returnData) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      revert(0x00, 0x00)\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":1137:1332  function swapNativeToERC20(address to) public payable returns (uint erc20sBought) {... */\n    tag_6:\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n        /* \"#utility.yul\":3004:3029   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2992:2994   */\n      0x20\n        /* \"#utility.yul\":2977:2995   */\n      add\n        /* \"src/SwapAbstract.sol\":1137:1332  function swapNativeToERC20(address to) public payable returns (uint erc20sBought) {... */\n      tag_50\n        /* \"#utility.yul\":2858:3035   */\n      jump\n        /* \"src/SwapAbstract.sol\":3295:3836  function swapERC20ToNative(SwapAbstract sa, uint erc20sSold, address to) external returns (uint erc20sEarned) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n      tag_71\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":6907:7102  function totalSupply() public view virtual returns (uint256 result) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7067:7085  _TOTAL_SUPPLY_SLOT */\n      0x05345cdf77eb68f44c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7061:7086  sload(_TOTAL_SUPPLY_SLOT) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":6907:7102  function totalSupply() public view virtual returns (uint256 result) {... */\n      jump(tag_71)\n        /* \"src/SwapAbstract.sol\":2253:2382  function swapNativeToERC20() external payable returns (uint erc20sBought) {... */\n    tag_9:\n      tag_71\n      tag_88\n      jump\t// in\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":11165:15918  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_58\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":6480:6562  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      mload(0x40)\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":6553:6555  18 */\n      0x12\n        /* \"#utility.yul\":4229:4265   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4217:4219   */\n      0x20\n        /* \"#utility.yul\":4202:4220   */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":6480:6562  function decimals() public view virtual returns (uint8) {... */\n      tag_50\n        /* \"#utility.yul\":4087:4271   */\n      jump\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21458:22195  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      revert(0x00, 0x00)\n    tag_101:\n      pop\n      tag_71\n      tag_103\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":369:397  ERC20 public immutable asset */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      revert(0x00, 0x00)\n    tag_106:\n      pop\n      tag_107\n      immutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n      dup2\n      jump\n    tag_107:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4635:4667   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4617:4668   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4605:4607   */\n      0x20\n        /* \"#utility.yul\":4590:4608   */\n      add\n        /* \"src/SwapAbstract.sol\":369:397  ERC20 public immutable asset */\n      tag_50\n        /* \"#utility.yul\":4458:4674   */\n      jump\n        /* \"src/ExchangeAbstract.sol\":1259:1570  function erc20ToNativePrice(uint erc20sSold) public override view returns (uint nativesBought) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      revert(0x00, 0x00)\n    tag_111:\n      pop\n      tag_71\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":2098:2245  function swapERC20ToNative(uint erc20sSold) public returns (uint nativesBought) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      revert(0x00, 0x00)\n    tag_117:\n      pop\n      tag_71\n      tag_119\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":2705:2882  function swapERC20ToNative(uint erc20sSold, Permit2Sig calldata sig) external returns (uint nativesBought) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      revert(0x00, 0x00)\n    tag_122:\n      pop\n      tag_71\n      tag_124\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7168:7454  function balanceOf(address owner) public view virtual returns (uint256 result) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      revert(0x00, 0x00)\n    tag_128:\n      pop\n      tag_71\n      tag_130\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_130:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7336:7354  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7330:7334  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7323:7355  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7231:7245  uint256 result */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7368:7387  mstore(0x00, owner) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7432:7436  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7416:7437  keccak256(0x0c, 0x20) */\n      swap1\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7410:7438  sload(keccak256(0x0c, 0x20)) */\n      sload\n      swap1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7168:7454  function balanceOf(address owner) public view virtual returns (uint256 result) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      revert(0x00, 0x00)\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      stop\n        /* \"src/PinusVault2.sol\":2945:3133  function nativeToERC20Price(uint nativesSold) public override view returns (uint erc20sBought) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      revert(0x00, 0x00)\n    tag_136:\n      pop\n      tag_71\n      tag_138\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n        /* \"src/ExchangeAbstract.sol\":319:361  uint128 public immutable nativeBuyableRate */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      revert(0x00, 0x00)\n    tag_141:\n      pop\n      tag_48\n      immutable(\"0x7751dd710c07ab49cc2c1853892b3f71f3ced69475463e7c975b4ac84ae5fa90\")\n      dup2\n      jump\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17137:17477  function nonces(address owner) public view virtual returns (uint256 result) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      revert(0x00, 0x00)\n    tag_145:\n      pop\n      tag_71\n      tag_147\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_147:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17360:17377  _NONCES_SLOT_SEED */\n      0x38377508\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17354:17358  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17347:17378  mstore(0x0c, _NONCES_SLOT_SEED) */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17197:17211  uint256 result */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17391:17410  mstore(0x00, owner) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17455:17459  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17439:17460  keccak256(0x0c, 0x20) */\n      swap1\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17433:17461  sload(keccak256(0x0c, 0x20)) */\n      sload\n      swap1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17137:17477  function nonces(address owner) public view virtual returns (uint256 result) {... */\n      jump\n        /* \"src/ExchangeAbstract.sol\":170:213  uint128 public immutable erc20SellInhibitor */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      revert(0x00, 0x00)\n    tag_150:\n      pop\n      tag_48\n      immutable(\"0x3ef4406067f3f2b83779fd8c58e51154fe5e1675c0d17583dd1aac1409fbf9d7\")\n      dup2\n      jump\n        /* \"src/SwapAbstract.sol\":1759:2060  function tokenReceived(address from, uint value, bytes calldata) external returns (bytes4) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      revert(0x00, 0x00)\n    tag_154:\n      pop\n      tag_155\n      tag_156\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":5600:5633   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5582:5634   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5570:5572   */\n      0x20\n        /* \"#utility.yul\":5555:5573   */\n      add\n        /* \"src/SwapAbstract.sol\":1759:2060  function tokenReceived(address from, uint value, bytes calldata) external returns (bytes4) {... */\n      tag_50\n        /* \"#utility.yul\":5438:5640   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      revert(0x00, 0x00)\n    tag_160:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_107)\n        /* \"src/SwapAbstract.sol\":2420:2693  function swapERC20ToNative(uint erc20sSold, address to, Permit2Sig calldata sig) public returns (uint nativesBought) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      revert(0x00, 0x00)\n    tag_165:\n      pop\n      tag_71\n      tag_167\n      calldatasize\n      0x04\n      tag_168\n      jump\t// in\n    tag_167:\n      tag_169\n      jump\t// in\n        /* \"src/PinusVault2.sol\":2628:2749  function symbol() public view override returns (string memory){... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      revert(0x00, 0x00)\n    tag_171:\n      pop\n      tag_53\n      tag_173\n      jump\t// in\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9391:10797  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      revert(0x00, 0x00)\n    tag_175:\n      pop\n      tag_58\n      tag_177\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_177:\n      tag_178\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":3974:4365  function swapERC223ToNative(SwapAbstract sa, uint erc20sSold, address to) external returns (uint erc20sEarned) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      revert(0x00, 0x00)\n    tag_180:\n      pop\n      tag_71\n      tag_182\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_182:\n      tag_183\n      jump\t// in\n        /* \"src/PinusVault2.sol\":3361:3631  function swapERC20ToNative(uint erc20sSold, address recipient) public override returns (uint nativesBought) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      revert(0x00, 0x00)\n    tag_185:\n      pop\n      tag_71\n      tag_187\n      calldatasize\n      0x04\n      tag_188\n      jump\t// in\n    tag_187:\n      tag_189\n      jump\t// in\n        /* \"src/ExchangeAbstract.sol\":973:1110  function nativesBuyable() public view returns (uint) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      revert(0x00, 0x00)\n    tag_191:\n      pop\n      tag_71\n      tag_193\n      jump\t// in\n        /* \"src/ERC223.sol\":309:549  function transfer(address _to, uint _value, bytes calldata _data) public returns (bool success)... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_195\n      jumpi\n      revert(0x00, 0x00)\n    tag_195:\n      pop\n      tag_58\n      tag_197\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_197:\n      tag_198\n      jump\t// in\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17661:21377  function permit(... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      revert(0x00, 0x00)\n    tag_200:\n      pop\n      tag_134\n      tag_202\n      calldatasize\n      0x04\n      tag_203\n      jump\t// in\n    tag_202:\n      tag_204\n      jump\t// in\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7549:8044  function allowance(address owner, address spender)... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_205\n      jumpi\n      revert(0x00, 0x00)\n    tag_205:\n      pop\n      tag_71\n      tag_207\n      calldatasize\n      0x04\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7884:7888  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7877:7898  mstore(0x20, spender) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7924:7944  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7918:7922  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7911:7945  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7965:7969  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7958:7977  mstore(0x00, owner) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8022:8026  0x34 */\n      0x34\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8006:8027  keccak256(0x0c, 0x34) */\n      swap1\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8000:8028  sload(keccak256(0x0c, 0x34)) */\n      sload\n      swap1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":7549:8044  function allowance(address owner, address spender)... */\n      jump\n        /* \"src/ExchangeAbstract.sol\":374:420  uint public erc20BuyableTime = block.timestamp */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_211\n      jumpi\n      revert(0x00, 0x00)\n    tag_211:\n      pop\n      tag_71\n      sload(0x00)\n      dup2\n      jump\n        /* \"src/SwapAbstract.sol\":2890:3287  function swapNativeToERC20(SwapAbstract sa, uint nativesSold, address to) external returns (uint nativesEarned) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_215\n      jumpi\n      revert(0x00, 0x00)\n    tag_215:\n      pop\n      tag_71\n      tag_217\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_217:\n      tag_218\n      jump\t// in\n        /* \"src/PinusVault2.sol\":2060:2093  bytes32 public immutable nameHash */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_220\n      jumpi\n      revert(0x00, 0x00)\n    tag_220:\n      pop\n      tag_71\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_224\n      jumpi\n      revert(0x00, 0x00)\n    tag_224:\n      pop\n      tag_134\n      tag_226\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_226:\n      tag_227\n      jump\t// in\n        /* \"src/ExchangeAbstract.sol\":1118:1251  function erc20sBuyable() public view returns (uint) {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_228\n      jumpi\n      revert(0x00, 0x00)\n    tag_228:\n      pop\n      tag_71\n      tag_230\n      jump\t// in\n        /* \"src/ExchangeAbstract.sol\":220:261  uint128 public immutable erc20BuyableRate */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_232\n      jumpi\n      revert(0x00, 0x00)\n    tag_232:\n      pop\n      tag_48\n      immutable(\"0x808f739b0ff6f50ded0ff766b33bc9aee9c87ee99f1e55588f2719e55787021e\")\n      dup2\n      jump\n        /* \"src/PinusVault2.sol\":2499:2616  function name() public view override returns (string memory){... */\n    tag_54:\n        /* \"src/PinusVault2.sol\":2584:2607  abi.encodePacked(_name) */\n      0x40\n      dup1\n      mload\n        /* \"src/PinusVault2.sol\":2601:2606  _name */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"src/PinusVault2.sol\":2584:2607  abi.encodePacked(_name) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":8360:8379   */\n      mstore\n        /* \"src/PinusVault2.sol\":2545:2558  string memory */\n      0x60\n      swap2\n        /* \"#utility.yul\":8395:8407   */\n      add\n        /* \"src/PinusVault2.sol\":2584:2607  abi.encodePacked(_name) */\n    tag_237:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/PinusVault2.sol\":2570:2608  return string(abi.encodePacked(_name)) */\n      swap1\n      pop\n        /* \"src/PinusVault2.sol\":2499:2616  function name() public view override returns (string memory){... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8175:9204  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_61:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8249:8253  bool */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8864:8871  spender */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8858:8862  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8851:8872  mstore(0x20, spender) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8898:8918  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8892:8896  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8885:8919  mstore(0x0c, _ALLOWANCE_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8945:8953  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8939:8943  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8932:8954  mstore(0x00, caller()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8997:9003  amount */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8990:8994  0x34 */\n      0x34\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8984:8988  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8974:8995  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8967:9004  sstore(keccak256(0x0c, 0x34), amount) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9072:9078  amount */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9066:9070  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9059:9079  mstore(0x00, amount) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9160:9164  0x2c */\n      0x2c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9154:9165  mload(0x2c) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9150:9152  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9146:9166  shr(96, mload(0x2c)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9136:9144  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9109:9134  _APPROVAL_EVENT_SIGNATURE */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9103:9107  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9097:9101  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9092:9167  log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c))) */\n      log3\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9193:9197  true */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":8175:9204  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_239:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/PinusVault2.sol\":2757:2937  function customCall(address to,uint value,bytes calldata data) public onlyOwner returns (bool success, bytes memory returnData) {... */\n    tag_68:\n        /* \"src/PinusVault2.sol\":2846:2858  bool success */\n      0x00\n        /* \"src/PinusVault2.sol\":2860:2883  bytes memory returnData */\n      0x60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_245:\n        /* \"src/PinusVault2.sol\":2903:2905  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/PinusVault2.sol\":2903:2910  to.call */\n      and\n        /* \"src/PinusVault2.sol\":2917:2922  value */\n      dup6\n        /* \"src/PinusVault2.sol\":2924:2928  data */\n      dup6\n      dup6\n        /* \"src/PinusVault2.sol\":2903:2929  to.call{value:value}(data) */\n      mload(0x40)\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_252\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_251)\n    tag_252:\n      0x60\n      swap2\n      pop\n    tag_251:\n      pop\n        /* \"src/PinusVault2.sol\":2896:2929  return to.call{value:value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/PinusVault2.sol\":2757:2937  function customCall(address to,uint value,bytes calldata data) public onlyOwner returns (bool success, bytes memory returnData) {... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/SwapAbstract.sol\":1137:1332  function swapNativeToERC20(address to) public payable returns (uint erc20sBought) {... */\n    tag_74:\n        /* \"src/SwapAbstract.sol\":1200:1217  uint erc20sBought */\n      0x00\n        /* \"src/SwapAbstract.sol\":1245:1274  nativeToERC20Price(msg.value) */\n      tag_254\n        /* \"src/SwapAbstract.sol\":1264:1273  msg.value */\n      callvalue\n        /* \"src/SwapAbstract.sol\":1245:1263  nativeToERC20Price */\n      tag_139\n        /* \"src/SwapAbstract.sol\":1245:1274  nativeToERC20Price(msg.value) */\n      jump\t// in\n    tag_254:\n        /* \"src/SwapAbstract.sol\":1230:1274  erc20sBought = nativeToERC20Price(msg.value) */\n      swap1\n      pop\n        /* \"src/SwapAbstract.sol\":1285:1324  _transferERC20sBought(to, erc20sBought) */\n      tag_255\n        /* \"src/SwapAbstract.sol\":1307:1309  to */\n      dup3\n        /* \"src/SwapAbstract.sol\":1311:1323  erc20sBought */\n      dup3\n        /* \"src/SwapAbstract.sol\":1285:1306  _transferERC20sBought */\n      tag_256\n        /* \"src/SwapAbstract.sol\":1285:1324  _transferERC20sBought(to, erc20sBought) */\n      jump\t// in\n    tag_255:\n        /* \"src/SwapAbstract.sol\":1137:1332  function swapNativeToERC20(address to) public payable returns (uint erc20sBought) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/SwapAbstract.sol\":3295:3836  function swapERC20ToNative(SwapAbstract sa, uint erc20sSold, address to) external returns (uint erc20sEarned) {... */\n    tag_81:\n        /* \"src/SwapAbstract.sol\":3386:3403  uint erc20sEarned */\n      0x00\n        /* \"src/SwapAbstract.sol\":3416:3433  uint startBalance */\n      0x00\n        /* \"src/SwapAbstract.sol\":3436:3457  address(this).balance */\n      selfbalance\n        /* \"src/SwapAbstract.sol\":3416:3457  uint startBalance = address(this).balance */\n      swap1\n      pop\n        /* \"src/SwapAbstract.sol\":3496:3501  asset */\n      immutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":3473:3502  address(sa) != address(asset) */\n      and\n        /* \"src/SwapAbstract.sol\":3481:3483  sa */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":3473:3502  address(sa) != address(asset) */\n      and\n      eq\n        /* \"src/SwapAbstract.sol\":3470:3635  if(address(sa) != address(asset)) { //If the token is from the same contract, it doesn't need approval... */\n      tag_258\n      jumpi\n        /* \"src/SwapAbstract.sol\":3586:3623  asset.approve(address(sa),erc20sSold) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8886:8918   */\n      dup7\n      dup2\n      and\n        /* \"src/SwapAbstract.sol\":3586:3623  asset.approve(address(sa),erc20sSold) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8868:8919   */\n      mstore\n        /* \"#utility.yul\":8935:8953   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8928:8962   */\n      dup7\n      swap1\n      mstore\n        /* \"src/SwapAbstract.sol\":3586:3591  asset */\n      immutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n        /* \"src/SwapAbstract.sol\":3586:3599  asset.approve */\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":8841:8859   */\n      0x44\n      add\n        /* \"src/SwapAbstract.sol\":3586:3623  asset.approve(address(sa),erc20sSold) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_263\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      pop\n        /* \"src/SwapAbstract.sol\":3470:3635  if(address(sa) != address(asset)) { //If the token is from the same contract, it doesn't need approval... */\n    tag_258:\n        /* \"src/SwapAbstract.sol\":3647:3679  sa.swapERC20ToNative(erc20sSold) */\n      mload(0x40)\n      shl(0xe9, 0x30197b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3004:3029   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":3647:3667  sa.swapERC20ToNative */\n      dup7\n      and\n      swap1\n      0x6032f600\n      swap1\n        /* \"#utility.yul\":2977:2995   */\n      0x24\n      add\n        /* \"src/SwapAbstract.sol\":3647:3679  sa.swapERC20ToNative(erc20sSold) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      pop\n        /* \"src/SwapAbstract.sol\":3766:3776  erc20sSold */\n      dup4\n        /* \"src/SwapAbstract.sol\":3707:3763  nativeToERC20Price(address(this).balance - startBalance) */\n      tag_270\n        /* \"src/SwapAbstract.sol\":3726:3762  address(this).balance - startBalance */\n      tag_138\n        /* \"src/SwapAbstract.sol\":3750:3762  startBalance */\n      dup4\n        /* \"src/SwapAbstract.sol\":3726:3747  address(this).balance */\n      selfbalance\n        /* \"src/SwapAbstract.sol\":3726:3762  address(this).balance - startBalance */\n      tag_272\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":3707:3763  nativeToERC20Price(address(this).balance - startBalance) */\n    tag_270:\n        /* \"src/SwapAbstract.sol\":3707:3776  nativeToERC20Price(address(this).balance - startBalance) - erc20sSold */\n      tag_273\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_273:\n        /* \"src/SwapAbstract.sol\":3692:3776  erc20sEarned = nativeToERC20Price(address(this).balance - startBalance) - erc20sSold */\n      swap2\n      pop\n        /* \"src/SwapAbstract.sol\":3789:3828  _transferERC20sBought(to, erc20sEarned) */\n      tag_274\n        /* \"src/SwapAbstract.sol\":3811:3813  to */\n      dup4\n        /* \"src/SwapAbstract.sol\":3815:3827  erc20sEarned */\n      dup4\n        /* \"src/SwapAbstract.sol\":3789:3810  _transferERC20sBought */\n      tag_256\n        /* \"src/SwapAbstract.sol\":3789:3828  _transferERC20sBought(to, erc20sEarned) */\n      jump\t// in\n    tag_274:\n        /* \"src/SwapAbstract.sol\":3405:3836  {... */\n      pop\n        /* \"src/SwapAbstract.sol\":3295:3836  function swapERC20ToNative(SwapAbstract sa, uint erc20sSold, address to) external returns (uint erc20sEarned) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/SwapAbstract.sol\":2253:2382  function swapNativeToERC20() external payable returns (uint erc20sBought) {... */\n    tag_88:\n        /* \"src/SwapAbstract.sol\":2308:2325  uint erc20sBought */\n      0x00\n        /* \"src/SwapAbstract.sol\":2345:2374  swapNativeToERC20(msg.sender) */\n      tag_277\n        /* \"src/SwapAbstract.sol\":2363:2373  msg.sender */\n      caller\n        /* \"src/SwapAbstract.sol\":2345:2362  swapNativeToERC20 */\n      tag_74\n        /* \"src/SwapAbstract.sol\":2345:2374  swapNativeToERC20(msg.sender) */\n      jump\t// in\n    tag_277:\n        /* \"src/SwapAbstract.sol\":2338:2374  return swapNativeToERC20(msg.sender) */\n      swap1\n      pop\n        /* \"src/SwapAbstract.sol\":2253:2382  function swapNativeToERC20() external payable returns (uint erc20sBought) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":11165:15918  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n    tag_94:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":11253:11257  bool */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13811:13815  from */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13807:13809  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13803:13816  shl(96, from) */\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13912:13920  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13906:13910  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13899:13921  mstore(0x20, caller()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13961:13981  _ALLOWANCE_SLOT_SEED */\n      0x7f5e9f20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13954:13959  from_ */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13951:13982  or(from_, _ALLOWANCE_SLOT_SEED) */\n      or\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13945:13949  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":13938:13983  mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14037:14041  0x34 */\n      0x34\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14031:14035  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14021:14042  keccak256(0x0c, 0x34) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14083:14096  allowanceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14077:14097  sload(allowanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14191:14201  allowance_ */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14187:14202  not(allowance_) */\n      not\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14184:14631  if not(allowance_) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14324:14334  allowance_ */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14316:14322  amount */\n      dup6\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14313:14335  gt(amount, allowance_) */\n      gt\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14310:14481  if gt(amount, allowance_) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14375:14385  0x13be252b */\n      0x13be252b\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14369:14373  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14362:14386  mstore(0x00, 0x13be252b) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14454:14458  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14448:14452  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14441:14459  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14310:14481  if gt(amount, allowance_) {... */\n    tag_289:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14605:14611  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14593:14603  allowance_ */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14589:14612  sub(allowance_, amount) */\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14574:14587  allowanceSlot */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14567:14613  sstore(allowanceSlot, sub(allowance_, amount)) */\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14184:14631  if not(allowance_) {... */\n    tag_288:\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14735:14753  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14728:14733  from_ */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14725:14754  or(from_, _BALANCE_SLOT_SEED) */\n      or\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14719:14723  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14712:14755  mstore(0x0c, or(from_, _BALANCE_SLOT_SEED)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14811:14815  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14805:14809  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14795:14816  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14858:14873  fromBalanceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14852:14874  sload(fromBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14956:14967  fromBalance */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14948:14954  amount */\n      dup6\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14945:14968  gt(amount, fromBalance) */\n      gt\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14942:15100  if gt(amount, fromBalance) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15004:15014  0xf4d678b8 */\n      0xf4d678b8\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14998:15002  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14991:15015  mstore(0x00, 0xf4d678b8) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15077:15081  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15071:15075  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15064:15082  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":14942:15100  if gt(amount, fromBalance) {... */\n    tag_290:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15217:15223  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15204:15215  fromBalance */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15200:15224  sub(fromBalance, amount) */\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15183:15198  fromBalanceSlot */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15176:15225  sstore(fromBalanceSlot, sub(fromBalance, amount)) */\n      sstore\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15308:15310  to */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15302:15306  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15295:15311  mstore(0x00, to) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15365:15369  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15359:15363  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15349:15370  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15631:15637  amount */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15615:15628  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15609:15629  sload(toBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15605:15638  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15590:15603  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15583:15639  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15715:15721  amount */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15709:15713  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15702:15722  mstore(0x20, amount) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15813:15817  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15807:15818  mload(0x0c) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15803:15805  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15799:15819  shr(96, mload(0x0c)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15791:15796  from_ */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15787:15789  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15783:15797  shr(96, from_) */\n      shr\n      mload(0x00)\n      codecopy(0x00, data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15750:15754  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15744:15748  0x20 */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15739:15820  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c))) */\n      log3\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":15907:15911  true */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":11165:15918  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21458:22195  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n    tag_103:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21515:21529  bytes32 result */\n      0x00\n        /* \"src/PinusVault2.sol\":2475:2483  nameHash */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21683:21746  if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name())) */\n      tag_297\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21738:21744  name() */\n      tag_298\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21738:21742  name */\n      tag_54\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21738:21744  name() */\n      jump\t// in\n    tag_298:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21722:21746  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21711:21746  nameHash = keccak256(bytes(name())) */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21683:21746  if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name())) */\n    tag_297:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21883:21887  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21877:21888  mload(0x40) */\n      dup1\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21944:21960  _DOMAIN_TYPEHASH */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21934:21961  mstore(m, _DOMAIN_TYPEHASH) */\n      dup2\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21988:21992  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21981:21993  add(m, 0x20) */\n      dup2\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21974:22004  mstore(add(m, 0x20), nameHash) */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":5177:5243  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6 */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22024:22036  add(m, 0x40) */\n      swap1\n      dup3\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22017:22050  mstore(add(m, 0x40), versionHash) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22084:22093  chainid() */\n      chainid\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22077:22081  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22070:22082  add(m, 0x60) */\n      dup3\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22063:22094  mstore(add(m, 0x60), chainid()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22128:22137  address() */\n      address\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22121:22125  0x80 */\n      0x80\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22114:22126  add(m, 0x80) */\n      dup3\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22107:22138  mstore(add(m, 0x80), address()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22174:22178  0xa0 */\n      0xa0\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22161:22179  keccak256(m, 0xa0) */\n      swap1\n      keccak256\n      swap2\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21458:22195  function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {... */\n      jump\t// out\n        /* \"src/ExchangeAbstract.sol\":1259:1570  function erc20ToNativePrice(uint erc20sSold) public override view returns (uint nativesBought) {... */\n    tag_115:\n        /* \"src/ExchangeAbstract.sol\":1334:1352  uint nativesBought */\n      0x00\n        /* \"src/ExchangeAbstract.sol\":1414:1445  erc20SellInhibitor + erc20sSold */\n      tag_302\n        /* \"src/ExchangeAbstract.sol\":1435:1445  erc20sSold */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/ExchangeAbstract.sol\":1414:1432  erc20SellInhibitor */\n      immutable(\"0x3ef4406067f3f2b83779fd8c58e51154fe5e1675c0d17583dd1aac1409fbf9d7\")\n        /* \"src/ExchangeAbstract.sol\":1414:1445  erc20SellInhibitor + erc20sSold */\n      and\n      tag_303\n      jump\t// in\n    tag_302:\n        /* \"src/ExchangeAbstract.sol\":1400:1410  erc20sSold */\n      dup3\n        /* \"src/ExchangeAbstract.sol\":1381:1397  nativesBuyable() */\n      tag_304\n        /* \"src/ExchangeAbstract.sol\":1381:1395  nativesBuyable */\n      tag_193\n        /* \"src/ExchangeAbstract.sol\":1381:1397  nativesBuyable() */\n      jump\t// in\n    tag_304:\n        /* \"src/ExchangeAbstract.sol\":1381:1410  nativesBuyable() * erc20sSold */\n      tag_305\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"src/ExchangeAbstract.sol\":1381:1446  nativesBuyable() * erc20sSold / (erc20SellInhibitor + erc20sSold) */\n      tag_307\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"src/ExchangeAbstract.sol\":1365:1446  nativesBought = nativesBuyable() * erc20sSold / (erc20SellInhibitor + erc20sSold) */\n      swap1\n      pop\n        /* \"src/ExchangeAbstract.sol\":1484:1497  nativesBought */\n      dup1\n        /* \"src/ExchangeAbstract.sol\":1460:1481  address(this).balance */\n      selfbalance\n        /* \"src/ExchangeAbstract.sol\":1460:1497  address(this).balance < nativesBought */\n      lt\n        /* \"src/ExchangeAbstract.sol\":1457:1563  if(address(this).balance < nativesBought) {... */\n      iszero\n      tag_255\n      jumpi\n      pop\n        /* \"src/ExchangeAbstract.sol\":1530:1551  address(this).balance */\n      selfbalance\n        /* \"src/ExchangeAbstract.sol\":1259:1570  function erc20ToNativePrice(uint erc20sSold) public override view returns (uint nativesBought) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/SwapAbstract.sol\":2098:2245  function swapERC20ToNative(uint erc20sSold) public returns (uint nativesBought) {... */\n    tag_120:\n        /* \"src/SwapAbstract.sol\":2158:2176  uint nativesBought */\n      0x00\n        /* \"src/SwapAbstract.sol\":2196:2237  swapERC20ToNative(erc20sSold, msg.sender) */\n      tag_239\n        /* \"src/SwapAbstract.sol\":2214:2224  erc20sSold */\n      dup3\n        /* \"src/SwapAbstract.sol\":2226:2236  msg.sender */\n      caller\n        /* \"src/SwapAbstract.sol\":2196:2213  swapERC20ToNative */\n      tag_189\n        /* \"src/SwapAbstract.sol\":2196:2237  swapERC20ToNative(erc20sSold, msg.sender) */\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":2705:2882  function swapERC20ToNative(uint erc20sSold, Permit2Sig calldata sig) external returns (uint nativesBought) {... */\n    tag_126:\n        /* \"src/SwapAbstract.sol\":2792:2810  uint nativesBought */\n      0x00\n        /* \"src/SwapAbstract.sol\":2830:2874  swapERC20ToNative(erc20sSold,msg.sender,sig) */\n      tag_313\n        /* \"src/SwapAbstract.sol\":2848:2858  erc20sSold */\n      dup4\n        /* \"src/SwapAbstract.sol\":2859:2869  msg.sender */\n      caller\n        /* \"src/SwapAbstract.sol\":2870:2873  sig */\n      dup5\n        /* \"src/SwapAbstract.sol\":2830:2847  swapERC20ToNative */\n      tag_169\n        /* \"src/SwapAbstract.sol\":2830:2874  swapERC20ToNative(erc20sSold,msg.sender,sig) */\n      jump\t// in\n    tag_313:\n        /* \"src/SwapAbstract.sol\":2823:2874  return swapERC20ToNative(erc20sSold,msg.sender,sig) */\n      swap4\n        /* \"src/SwapAbstract.sol\":2705:2882  function swapERC20ToNative(uint erc20sSold, Permit2Sig calldata sig) external returns (uint nativesBought) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_316\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_318\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_319\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/PinusVault2.sol\":2945:3133  function nativeToERC20Price(uint nativesSold) public override view returns (uint erc20sBought) {... */\n    tag_139:\n        /* \"src/PinusVault2.sol\":3021:3038  uint erc20sBought */\n      0x00\n        /* \"src/PinusVault2.sol\":3091:3124  nativeSellInhibitor + nativesSold */\n      tag_321\n        /* \"src/PinusVault2.sol\":3113:3124  nativesSold */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/PinusVault2.sol\":3091:3110  nativeSellInhibitor */\n      immutable(\"0xadda5d3d116db89da9e084ab1b2cc501d795d98d1503f1026c7e065d5d1e5ce7\")\n        /* \"src/PinusVault2.sol\":3091:3124  nativeSellInhibitor + nativesSold */\n      and\n      tag_303\n      jump\t// in\n    tag_321:\n        /* \"src/PinusVault2.sol\":3076:3087  nativesSold */\n      dup3\n        /* \"src/PinusVault2.sol\":3058:3073  erc20sBuyable() */\n      tag_322\n        /* \"src/PinusVault2.sol\":3058:3071  erc20sBuyable */\n      tag_230\n        /* \"src/PinusVault2.sol\":3058:3073  erc20sBuyable() */\n      jump\t// in\n    tag_322:\n        /* \"src/PinusVault2.sol\":3058:3087  erc20sBuyable() * nativesSold */\n      tag_323\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_323:\n        /* \"src/PinusVault2.sol\":3058:3125  erc20sBuyable() * nativesSold / (nativeSellInhibitor + nativesSold) */\n      tag_239\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":1759:2060  function tokenReceived(address from, uint value, bytes calldata) external returns (bytes4) {... */\n    tag_157:\n        /* \"src/SwapAbstract.sol\":1842:1848  bytes4 */\n      0x00\n        /* \"src/SwapAbstract.sol\":1888:1898  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":1910:1915  asset */\n      immutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n        /* \"src/SwapAbstract.sol\":1888:1916  msg.sender == address(asset) */\n      and\n      eq\n        /* \"src/SwapAbstract.sol\":1880:1917  require(msg.sender == address(asset)) */\n      tag_327\n      jumpi\n      revert(0x00, 0x00)\n    tag_327:\n        /* \"src/SwapAbstract.sol\":1967:2022  _transferNativesBought(from, erc20ToNativePrice(value)) */\n      tag_328\n        /* \"src/SwapAbstract.sol\":1990:1994  from */\n      dup6\n        /* \"src/SwapAbstract.sol\":1996:2021  erc20ToNativePrice(value) */\n      tag_329\n        /* \"src/SwapAbstract.sol\":2015:2020  value */\n      dup7\n        /* \"src/SwapAbstract.sol\":1996:2014  erc20ToNativePrice */\n      tag_115\n        /* \"src/SwapAbstract.sol\":1996:2021  erc20ToNativePrice(value) */\n      jump\t// in\n    tag_329:\n        /* \"src/SwapAbstract.sol\":1967:1989  _transferNativesBought */\n      tag_330\n        /* \"src/SwapAbstract.sol\":1967:2022  _transferNativesBought(from, erc20ToNativePrice(value)) */\n      jump\t// in\n    tag_328:\n      pop\n      shl(0xe1, 0x44a1f601)\n        /* \"src/SwapAbstract.sol\":1759:2060  function tokenReceived(address from, uint value, bytes calldata) external returns (bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/SwapAbstract.sol\":2420:2693  function swapERC20ToNative(uint erc20sSold, address to, Permit2Sig calldata sig) public returns (uint nativesBought) {... */\n    tag_169:\n        /* \"src/SwapAbstract.sol\":2517:2535  uint nativesBought */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":2548:2553  asset */\n      immutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n        /* \"src/SwapAbstract.sol\":2548:2560  asset.permit */\n      and\n      0xd505accf\n        /* \"src/SwapAbstract.sol\":2561:2571  msg.sender */\n      caller\n        /* \"src/SwapAbstract.sol\":2581:2585  this */\n      address\n        /* \"src/SwapAbstract.sol\":2588:2598  erc20sSold */\n      dup8\n        /* \"src/SwapAbstract.sol\":2600:2612  sig.deadline */\n      dup7\n      calldataload\n        /* \"src/SwapAbstract.sol\":2614:2619  sig.v */\n      tag_333\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"src/SwapAbstract.sol\":2621:2626  sig.r */\n      0x40\n        /* \"src/SwapAbstract.sol\":2548:2634  asset.permit(msg.sender, address(this), erc20sSold, sig.deadline, sig.v, sig.r, sig.s) */\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup10\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10750:10782   */\n      swap7\n      dup8\n      and\n        /* \"src/SwapAbstract.sol\":2548:2634  asset.permit(msg.sender, address(this), erc20sSold, sig.deadline, sig.v, sig.r, sig.s) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10732:10783   */\n      mstore\n        /* \"#utility.yul\":10819:10851   */\n      swap6\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":10799:10817   */\n      0x24\n      dup7\n      add\n        /* \"#utility.yul\":10792:10852   */\n      mstore\n        /* \"#utility.yul\":10868:10886   */\n      0x44\n      dup6\n      add\n        /* \"#utility.yul\":10861:10895   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10911:10929   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":10904:10938   */\n      mstore\n        /* \"#utility.yul\":10987:10991   */\n      0xff\n        /* \"#utility.yul\":10975:10992   */\n      and\n        /* \"#utility.yul\":10954:10973   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":10947:10993   */\n      mstore\n        /* \"src/SwapAbstract.sol\":2621:2626  sig.r */\n      dup6\n      add\n      calldataload\n        /* \"#utility.yul\":11009:11028   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":11002:11037   */\n      mstore\n        /* \"src/SwapAbstract.sol\":2628:2633  sig.s */\n      0x60\n      dup6\n      add\n      calldataload\n        /* \"#utility.yul\":11053:11072   */\n      0xc4\n      dup3\n      add\n        /* \"#utility.yul\":11046:11081   */\n      mstore\n        /* \"#utility.yul\":10704:10723   */\n      0xe4\n      add\n        /* \"src/SwapAbstract.sol\":2548:2634  asset.permit(msg.sender, address(this), erc20sSold, sig.deadline, sig.v, sig.r, sig.s) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_337\n      jumpi\n      revert(0x00, 0x00)\n    tag_337:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_339\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_339:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/SwapAbstract.sol\":2652:2685  swapERC20ToNative(erc20sSold, to) */\n      tag_340\n        /* \"src/SwapAbstract.sol\":2670:2680  erc20sSold */\n      dup5\n        /* \"src/SwapAbstract.sol\":2682:2684  to */\n      dup5\n        /* \"src/SwapAbstract.sol\":2652:2669  swapERC20ToNative */\n      tag_189\n        /* \"src/SwapAbstract.sol\":2652:2685  swapERC20ToNative(erc20sSold, to) */\n      jump\t// in\n    tag_340:\n        /* \"src/SwapAbstract.sol\":2645:2685  return swapERC20ToNative(erc20sSold, to) */\n      swap5\n        /* \"src/SwapAbstract.sol\":2420:2693  function swapERC20ToNative(uint erc20sSold, address to, Permit2Sig calldata sig) public returns (uint nativesBought) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/PinusVault2.sol\":2628:2749  function symbol() public view override returns (string memory){... */\n    tag_173:\n        /* \"src/PinusVault2.sol\":2715:2740  abi.encodePacked(_symbol) */\n      0x40\n      dup1\n      mload\n        /* \"src/PinusVault2.sol\":2732:2739  _symbol */\n      immutable(\"0x61c015546d5e44346798f1c6880464efac2cf5ed99e68a15f785eaa6fd93e7ec\")\n        /* \"src/PinusVault2.sol\":2715:2740  abi.encodePacked(_symbol) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":8360:8379   */\n      mstore\n        /* \"src/PinusVault2.sol\":2676:2689  string memory */\n      0x60\n      swap2\n        /* \"#utility.yul\":8395:8407   */\n      add\n        /* \"src/PinusVault2.sol\":2715:2740  abi.encodePacked(_symbol) */\n      tag_237\n        /* \"#utility.yul\":8231:8413   */\n      jump\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9391:10797  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_178:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9461:9465  bool */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9670:9688  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9664:9668  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9657:9689  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9715:9723  caller() */\n      caller\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9709:9713  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9702:9724  mstore(0x00, caller()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9776:9780  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9770:9774  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9760:9781  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9819:9834  fromBalanceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9813:9835  sload(fromBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9909:9920  fromBalance */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9901:9907  amount */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9898:9921  gt(amount, fromBalance) */\n      gt\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9895:10041  if gt(amount, fromBalance) {... */\n      iszero\n      tag_345\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9953:9963  0xf4d678b8 */\n      0xf4d678b8\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9947:9951  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9940:9964  mstore(0x00, 0xf4d678b8) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10022:10026  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10016:10020  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10009:10027  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9895:10041  if gt(amount, fromBalance) {... */\n    tag_345:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10150:10156  amount */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10137:10148  fromBalance */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10133:10157  sub(fromBalance, amount) */\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10116:10131  fromBalanceSlot */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10109:10158  sstore(fromBalanceSlot, sub(fromBalance, amount)) */\n      sstore\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10233:10235  to */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10227:10231  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10220:10236  mstore(0x00, to) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10286:10290  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10280:10284  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10270:10291  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10536:10542  amount */\n      dup3\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10520:10533  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10514:10534  sload(toBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10510:10543  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10495:10508  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10488:10544  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10612:10618  amount */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10606:10610  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10599:10619  mstore(0x20, amount) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10700:10704  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10694:10705  mload(0x0c) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10690:10692  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10686:10706  shr(96, mload(0x0c)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10676:10684  caller() */\n      caller\n      mload(0x00)\n      codecopy(0x00, data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10643:10647  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10637:10641  0x20 */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10632:10707  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, caller(), shr(96, mload(0x0c))) */\n      log3\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":10786:10790  true */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":9391:10797  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/SwapAbstract.sol\":3974:4365  function swapERC223ToNative(SwapAbstract sa, uint erc20sSold, address to) external returns (uint erc20sEarned) {... */\n    tag_183:\n        /* \"src/SwapAbstract.sol\":4150:4208  ERC223(address(asset)).transfer(address(sa),erc20sSold,\"\") */\n      mload(0x40)\n      shl(0xe1, 0x5f22feb1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11349:11381   */\n      dup5\n      dup2\n      and\n        /* \"src/SwapAbstract.sol\":4150:4208  ERC223(address(asset)).transfer(address(sa),erc20sSold,\"\") */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":11331:11382   */\n      mstore\n        /* \"#utility.yul\":11398:11416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11391:11425   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":11461:11463   */\n      0x60\n        /* \"#utility.yul\":11441:11459   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":11434:11464   */\n      mstore\n        /* \"src/SwapAbstract.sol\":4066:4083  uint erc20sEarned */\n      0x00\n        /* \"#utility.yul\":11480:11498   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":11473:11502   */\n      dup2\n      swap1\n      mstore\n        /* \"src/SwapAbstract.sol\":4066:4083  uint erc20sEarned */\n      swap2\n        /* \"src/SwapAbstract.sol\":4116:4137  address(this).balance */\n      selfbalance\n      swap2\n        /* \"src/SwapAbstract.sol\":4165:4170  asset */\n      immutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n        /* \"src/SwapAbstract.sol\":4150:4181  ERC223(address(asset)).transfer */\n      and\n      swap1\n      0xbe45fd62\n      swap1\n        /* \"#utility.yul\":11519:11538   */\n      0x84\n      add\n        /* \"src/SwapAbstract.sol\":4150:4208  ERC223(address(asset)).transfer(address(sa),erc20sSold,\"\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_351:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_268\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n        /* \"src/PinusVault2.sol\":3361:3631  function swapERC20ToNative(uint erc20sSold, address recipient) public override returns (uint nativesBought) {... */\n    tag_189:\n        /* \"src/PinusVault2.sol\":3449:3467  uint nativesBought */\n      0x00\n        /* \"src/PinusVault2.sol\":3496:3526  erc20ToNativePrice(erc20sSold) */\n      tag_358\n        /* \"src/PinusVault2.sol\":3515:3525  erc20sSold */\n      dup4\n        /* \"src/PinusVault2.sol\":3496:3514  erc20ToNativePrice */\n      tag_115\n        /* \"src/PinusVault2.sol\":3496:3526  erc20ToNativePrice(erc20sSold) */\n      jump\t// in\n    tag_358:\n        /* \"src/PinusVault2.sol\":3480:3526  nativesBought = erc20ToNativePrice(erc20sSold) */\n      swap1\n      pop\n        /* \"src/PinusVault2.sol\":3537:3565  _burn(msg.sender,erc20sSold) */\n      tag_359\n        /* \"src/PinusVault2.sol\":3543:3553  msg.sender */\n      caller\n        /* \"src/PinusVault2.sol\":3554:3564  erc20sSold */\n      dup5\n        /* \"src/PinusVault2.sol\":3537:3542  _burn */\n      tag_360\n        /* \"src/PinusVault2.sol\":3537:3565  _burn(msg.sender,erc20sSold) */\n      jump\t// in\n    tag_359:\n        /* \"src/PinusVault2.sol\":3576:3623  _transferNativesBought(recipient,nativesBought) */\n      tag_239\n        /* \"src/PinusVault2.sol\":3599:3608  recipient */\n      dup3\n        /* \"src/PinusVault2.sol\":3609:3622  nativesBought */\n      dup3\n        /* \"src/PinusVault2.sol\":3576:3598  _transferNativesBought */\n      tag_330\n        /* \"src/PinusVault2.sol\":3576:3623  _transferNativesBought(recipient,nativesBought) */\n      jump\t// in\n        /* \"src/ExchangeAbstract.sol\":973:1110  function nativesBuyable() public view returns (uint) {... */\n    tag_193:\n        /* \"src/ExchangeAbstract.sol\":1020:1024  uint */\n      0x00\n        /* \"src/ExchangeAbstract.sol\":1085:1102  nativeBuyableRate */\n      immutable(\"0x7751dd710c07ab49cc2c1853892b3f71f3ced69475463e7c975b4ac84ae5fa90\")\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/ExchangeAbstract.sol\":1044:1102  (block.timestamp - _nativeBuyableTime) * nativeBuyableRate */\n      and\n        /* \"src/ExchangeAbstract.sol\":1063:1081  _nativeBuyableTime */\n      sload(0x01)\n        /* \"src/ExchangeAbstract.sol\":1045:1060  block.timestamp */\n      timestamp\n        /* \"src/ExchangeAbstract.sol\":1045:1081  block.timestamp - _nativeBuyableTime */\n      tag_363\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_363:\n        /* \"src/ExchangeAbstract.sol\":1044:1102  (block.timestamp - _nativeBuyableTime) * nativeBuyableRate */\n      tag_277\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n        /* \"src/ERC223.sol\":309:549  function transfer(address _to, uint _value, bytes calldata _data) public returns (bool success)... */\n    tag_198:\n        /* \"src/ERC223.sol\":391:403  bool success */\n      0x00\n        /* \"src/ERC223.sol\":421:442  transfer(_to, _value) */\n      tag_366\n        /* \"src/ERC223.sol\":430:433  _to */\n      dup6\n        /* \"src/ERC223.sol\":435:441  _value */\n      dup6\n        /* \"src/ERC223.sol\":421:429  transfer */\n      tag_178\n        /* \"src/ERC223.sol\":421:442  transfer(_to, _value) */\n      jump\t// in\n    tag_366:\n      pop\n        /* \"src/ERC223.sol\":455:517  IERC223Recipient(_to).tokenReceived(msg.sender, _value, _data) */\n      mload(0x40)\n      shl(0xe1, 0x44a1f601)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC223.sol\":455:490  IERC223Recipient(_to).tokenReceived */\n      dup7\n      and\n      swap1\n      0x8943ec02\n      swap1\n        /* \"src/ERC223.sol\":455:517  IERC223Recipient(_to).tokenReceived(msg.sender, _value, _data) */\n      tag_367\n      swap1\n        /* \"src/ERC223.sol\":491:501  msg.sender */\n      caller\n      swap1\n        /* \"src/ERC223.sol\":503:509  _value */\n      dup9\n      swap1\n        /* \"src/ERC223.sol\":511:516  _data */\n      dup9\n      swap1\n      dup9\n      swap1\n        /* \"src/ERC223.sol\":455:517  IERC223Recipient(_to).tokenReceived(msg.sender, _value, _data) */\n      0x04\n      add\n      tag_368\n      jump\t// in\n    tag_367:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_370\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_370:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_371\n      swap2\n      swap1\n      tag_372\n      jump\t// in\n    tag_371:\n      pop\n        /* \"src/ERC223.sol\":537:541  true */\n      0x01\n      swap6\n        /* \"src/ERC223.sol\":309:549  function transfer(address _to, uint _value, bytes calldata _data) public returns (bool success)... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17661:21377  function permit(... */\n    tag_204:\n        /* \"src/PinusVault2.sol\":2475:2483  nameHash */\n      immutable(\"0x44986917507edc118e82cff103288e6e452145dcea4c0554fb5180f3e053ae11\")\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18456:18519  if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name())) */\n      tag_378\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18511:18517  name() */\n      tag_379\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18511:18515  name */\n      tag_54\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18511:18517  name() */\n      jump\t// in\n    tag_379:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18495:18519  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18484:18519  nameHash = keccak256(bytes(name())) */\n      swap1\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18456:18519  if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name())) */\n    tag_378:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":5177:5243  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6 */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18720:18731  timestamp() */\n      timestamp\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18717:18742  gt(timestamp(), deadline) */\n      dup7\n      lt\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18714:18856  if gt(timestamp(), deadline) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18774:18784  0x1a15a3cc */\n      0x1a15a3cc\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18768:18772  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18761:18785  mstore(0x00, 0x1a15a3cc) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18837:18841  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18831:18835  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18824:18842  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18714:18856  if gt(timestamp(), deadline) {... */\n    tag_381:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18884:18888  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18878:18889  mload(0x40) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19000:19005  owner */\n      dup10\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18996:18998  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18992:19006  shl(96, owner) */\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18988:18990  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18984:19007  shr(96, shl(96, owner)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":18975:19007  owner := shr(96, shl(96, owner)) */\n      swap10\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19047:19054  spender */\n      dup9\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19043:19045  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19039:19055  shl(96, spender) */\n      shl\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19035:19037  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19031:19056  shr(96, shl(96, spender)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19020:19056  spender := shr(96, shl(96, spender)) */\n      swap9\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19140:19179  _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX */\n      0x383775081901\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19134:19138  0x0e */\n      0x0e\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19127:19180  mstore(0x0e, _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19206:19211  owner */\n      dup10\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19200:19204  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19193:19212  mstore(0x00, owner) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19258:19262  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19252:19256  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19242:19263  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19300:19309  nonceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19294:19310  sload(nonceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19378:19394  _DOMAIN_TYPEHASH */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19375:19376  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19368:19395  mstore(m, _DOMAIN_TYPEHASH) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19429:19437  nameHash */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19422:19426  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19419:19420  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19415:19427  add(m, 0x20) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19408:19438  mstore(add(m, 0x20), nameHash) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19472:19483  versionHash */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19465:19469  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19462:19463  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19458:19470  add(m, 0x40) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19451:19484  mstore(add(m, 0x40), versionHash) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19518:19527  chainid() */\n      chainid\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19511:19515  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19508:19509  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19504:19516  add(m, 0x60) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19497:19528  mstore(add(m, 0x60), chainid()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19562:19571  address() */\n      address\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19555:19559  0x80 */\n      0x80\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19552:19553  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19548:19560  add(m, 0x80) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19541:19572  mstore(add(m, 0x80), address()) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19611:19615  0xa0 */\n      0xa0\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19608:19609  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19598:19616  keccak256(m, 0xa0) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19592:19596  0x2e */\n      0x2e\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19585:19617  mstore(0x2e, keccak256(m, 0xa0)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19680:19696  _PERMIT_TYPEHASH */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19677:19678  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19670:19697  mstore(m, _PERMIT_TYPEHASH) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19731:19736  owner */\n      dup12\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19724:19728  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19721:19722  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19717:19729  add(m, 0x20) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19710:19737  mstore(add(m, 0x20), owner) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19771:19778  spender */\n      dup11\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19764:19768  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19761:19762  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19757:19769  add(m, 0x40) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19750:19779  mstore(add(m, 0x40), spender) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19813:19818  value */\n      dup10\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19806:19810  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19803:19804  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19799:19811  add(m, 0x60) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19792:19819  mstore(add(m, 0x60), value) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19853:19863  nonceValue */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19846:19850  0x80 */\n      0x80\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19843:19844  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19839:19851  add(m, 0x80) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19832:19864  mstore(add(m, 0x80), nonceValue) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19898:19906  deadline */\n      dup9\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19891:19895  0xa0 */\n      0xa0\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19888:19889  m */\n      dup5\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19884:19896  add(m, 0xa0) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19877:19907  mstore(add(m, 0xa0), deadline) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19946:19950  0xc0 */\n      0xc0\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19943:19944  m */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19933:19951  keccak256(m, 0xc0) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19927:19931  0x4e */\n      0x4e\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":19920:19952  mstore(0x4e, keccak256(m, 0xc0)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20041:20045  0x42 */\n      0x42\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20035:20039  0x2c */\n      0x2c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20025:20046  keccak256(0x2c, 0x42) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20019:20023  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20012:20047  mstore(0x00, keccak256(0x2c, 0x42)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20083:20084  v */\n      dup8\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20077:20081  0xff */\n      0xff\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20073:20085  and(0xff, v) */\n      and\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20067:20071  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20060:20086  mstore(0x20, and(0xff, v)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20112:20113  r */\n      dup7\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20106:20110  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20099:20114  mstore(0x40, r) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20140:20141  s */\n      dup6\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20134:20138  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20127:20142  mstore(0x60, s) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20203:20207  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20197:20201  0x20 */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20191:20195  0x80 */\n      0x80\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20185:20189  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20182:20183  1 */\n      0x01\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20175:20180  gas() */\n      gas\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20164:20208  staticcall(gas(), 1, 0x00, 0x80, 0x20, 0x20) */\n      staticcall\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20624:20629  owner */\n      dup13\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20605:20621  returndatasize() */\n      returndatasize\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20599:20622  mload(returndatasize()) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20596:20630  eq(mload(returndatasize()), owner) */\n      eq\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20586:20745  if iszero(eq(mload(returndatasize()), owner)) {... */\n      tag_382\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20663:20673  0xddafbaef */\n      0xddafbaef\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20657:20661  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20650:20674  mstore(0x00, 0xddafbaef) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20726:20730  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20720:20724  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20713:20731  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20586:20745  if iszero(eq(mload(returndatasize()), owner)) {... */\n    tag_382:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20830:20848  add(nonceValue, t) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":20812:20849  sstore(nonceSlot, add(nonceValue, t)) */\n      swap1\n      sstore\n      shl(0xa5, 0x03faf4f9)\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21025:21068  or(shl(160, _ALLOWANCE_SLOT_SEED), spender) */\n      dup10\n      or\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21019:21023  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21012:21069  mstore(0x40, or(shl(160, _ALLOWANCE_SLOT_SEED), spender)) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21105:21109  0x34 */\n      0x34\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21099:21103  0x2c */\n      0x2c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21089:21110  keccak256(0x2c, 0x34) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21082:21118  sstore(keccak256(0x2c, 0x34), value) */\n      dup9\n      swap1\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21060:21067  spender */\n      dup9\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21225:21230  owner */\n      dup11\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21198:21223  _APPROVAL_EVENT_SIGNATURE */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21185:21189  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21178:21190  add(m, 0x60) */\n      dup6\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21173:21240  log3(add(m, 0x60), 0x20, _APPROVAL_EVENT_SIGNATURE, owner, spender) */\n      log3\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21260:21264  0x40 */\n      0x40\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21253:21268  mstore(0x40, m) */\n      mstore\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21330:21331  0 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21324:21328  0x60 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":21317:21332  mstore(0x60, 0) */\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":17661:21377  function permit(... */\n      jump\t// out\n        /* \"src/SwapAbstract.sol\":2890:3287  function swapNativeToERC20(SwapAbstract sa, uint nativesSold, address to) external returns (uint nativesEarned) {... */\n    tag_218:\n        /* \"src/SwapAbstract.sol\":3033:3063  asset.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/SwapAbstract.sol\":3057:3061  this */\n      address\n        /* \"src/SwapAbstract.sol\":3033:3063  asset.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4617:4668   */\n      mstore\n        /* \"src/SwapAbstract.sol\":2982:3000  uint nativesEarned */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":3033:3038  asset */\n      immutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n        /* \"src/SwapAbstract.sol\":3033:3048  asset.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4590:4608   */\n      0x24\n      add\n        /* \"src/SwapAbstract.sol\":3033:3063  asset.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_390\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_390:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_391\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_391:\n        /* \"src/SwapAbstract.sol\":3013:3063  uint startBalance = asset.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/SwapAbstract.sol\":3076:3078  sa */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":3076:3096  sa.swapNativeToERC20 */\n      and\n      0x223ecf7e\n        /* \"src/SwapAbstract.sol\":3103:3114  nativesSold */\n      dup6\n        /* \"src/SwapAbstract.sol\":3076:3117  sa.swapNativeToERC20{value:nativesSold}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_394\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_394:\n      pop\n        /* \"src/SwapAbstract.sol\":3165:3195  asset.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/SwapAbstract.sol\":3189:3193  this */\n      address\n        /* \"src/SwapAbstract.sol\":3165:3195  asset.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4617:4668   */\n      mstore\n        /* \"src/SwapAbstract.sol\":3214:3225  nativesSold */\n      dup5\n      swap1\n        /* \"src/SwapAbstract.sol\":3146:3211  erc20ToNativePrice(asset.balanceOf(address(this)) - startBalance) */\n      tag_395\n      swap1\n        /* \"src/SwapAbstract.sol\":3198:3210  startBalance */\n      dup4\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":3165:3170  asset */\n      immutable(\"0xf0e2cc3949b3f2ba23d7d5db31264ca6ec3d5789369d57b2dafef6557c5a1f\")\n        /* \"src/SwapAbstract.sol\":3165:3180  asset.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4590:4608   */\n      0x24\n      add\n        /* \"src/SwapAbstract.sol\":3165:3195  asset.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_398\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_398:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_399\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_399:\n        /* \"src/SwapAbstract.sol\":3165:3210  asset.balanceOf(address(this)) - startBalance */\n      tag_113\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":3146:3211  erc20ToNativePrice(asset.balanceOf(address(this)) - startBalance) */\n    tag_395:\n        /* \"src/SwapAbstract.sol\":3146:3225  erc20ToNativePrice(asset.balanceOf(address(this)) - startBalance) - nativesSold */\n      tag_401\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_401:\n        /* \"src/SwapAbstract.sol\":3130:3225  nativesEarned = erc20ToNativePrice(asset.balanceOf(address(this)) - startBalance) - nativesSold */\n      swap2\n      pop\n        /* \"src/SwapAbstract.sol\":3238:3279  _transferNativesBought(to, nativesEarned) */\n      tag_274\n        /* \"src/SwapAbstract.sol\":3261:3263  to */\n      dup4\n        /* \"src/SwapAbstract.sol\":3265:3278  nativesEarned */\n      dup4\n        /* \"src/SwapAbstract.sol\":3238:3260  _transferNativesBought */\n      tag_330\n        /* \"src/SwapAbstract.sol\":3238:3279  _transferNativesBought(to, nativesEarned) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_404\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_404:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_406\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4617:4668   */\n      mstore\n        /* \"#utility.yul\":4590:4608   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_407:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_406:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_408\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_319\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/ExchangeAbstract.sol\":1118:1251  function erc20sBuyable() public view returns (uint) {... */\n    tag_230:\n        /* \"src/ExchangeAbstract.sol\":1164:1168  uint */\n      0x00\n        /* \"src/ExchangeAbstract.sol\":1227:1243  erc20BuyableRate */\n      immutable(\"0x808f739b0ff6f50ded0ff766b33bc9aee9c87ee99f1e55588f2719e55787021e\")\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/ExchangeAbstract.sol\":1188:1243  (block.timestamp - erc20BuyableTime) * erc20BuyableRate */\n      and\n        /* \"src/ExchangeAbstract.sol\":1207:1223  erc20BuyableTime */\n      sload(0x00)\n        /* \"src/ExchangeAbstract.sol\":1189:1204  block.timestamp */\n      timestamp\n        /* \"src/ExchangeAbstract.sol\":1189:1223  block.timestamp - erc20BuyableTime */\n      tag_363\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4617:4668   */\n      mstore\n        /* \"#utility.yul\":4590:4608   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_407\n        /* \"#utility.yul\":4458:4674   */\n      jump\n        /* \"src/PinusVault2.sol\":3141:3353  function _transferERC20sBought(address to, uint amount) internal override {... */\n    tag_256:\n        /* \"src/PinusVault2.sol\":3266:3291  amount / erc20BuyableRate */\n      tag_421\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/PinusVault2.sol\":3275:3291  erc20BuyableRate */\n      immutable(\"0x808f739b0ff6f50ded0ff766b33bc9aee9c87ee99f1e55588f2719e55787021e\")\n        /* \"src/PinusVault2.sol\":3266:3291  amount / erc20BuyableRate */\n      and\n        /* \"src/PinusVault2.sol\":3266:3272  amount */\n      dup3\n        /* \"src/PinusVault2.sol\":3266:3291  amount / erc20BuyableRate */\n      tag_308\n      jump\t// in\n    tag_421:\n        /* \"src/PinusVault2.sol\":3246:3262  erc20BuyableTime */\n      0x00\n      0x00\n        /* \"src/PinusVault2.sol\":3246:3291  erc20BuyableTime += amount / erc20BuyableRate */\n      dup3\n      dup3\n      sload\n      tag_422\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_422:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/PinusVault2.sol\":3329:3345  _mint(to,amount) */\n      tag_423\n      swap1\n      pop\n        /* \"src/PinusVault2.sol\":3335:3337  to */\n      dup3\n        /* \"src/PinusVault2.sol\":3338:3344  amount */\n      dup3\n        /* \"src/PinusVault2.sol\":3329:3334  _mint */\n      tag_424\n        /* \"src/PinusVault2.sol\":3329:3345  _mint(to,amount) */\n      jump\t// in\n    tag_423:\n        /* \"src/PinusVault2.sol\":3141:3353  function _transferERC20sBought(address to, uint amount) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":30066:30157  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_280:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"src/ExchangeAbstract.sol\":1578:1856  function _transferNativesBought(address to, uint amount) internal override {... */\n    tag_330:\n        /* \"src/ExchangeAbstract.sol\":1706:1732  amount / nativeBuyableRate */\n      tag_431\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/ExchangeAbstract.sol\":1715:1732  nativeBuyableRate */\n      immutable(\"0x7751dd710c07ab49cc2c1853892b3f71f3ced69475463e7c975b4ac84ae5fa90\")\n        /* \"src/ExchangeAbstract.sol\":1706:1732  amount / nativeBuyableRate */\n      and\n        /* \"src/ExchangeAbstract.sol\":1706:1712  amount */\n      dup3\n        /* \"src/ExchangeAbstract.sol\":1706:1732  amount / nativeBuyableRate */\n      tag_308\n      jump\t// in\n    tag_431:\n        /* \"src/ExchangeAbstract.sol\":1684:1702  _nativeBuyableTime */\n      0x01\n      0x00\n        /* \"src/ExchangeAbstract.sol\":1684:1732  _nativeBuyableTime += amount / nativeBuyableRate */\n      dup3\n      dup3\n      sload\n      tag_432\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_432:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/ExchangeAbstract.sol\":1796:1821  to.call{value:amount}(\"\") */\n      mload(0x40)\n        /* \"src/ExchangeAbstract.sol\":1779:1791  bool success */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ExchangeAbstract.sol\":1796:1803  to.call */\n      dup5\n      and\n      swap1\n        /* \"src/ExchangeAbstract.sol\":1810:1816  amount */\n      dup4\n      swap1\n        /* \"src/ExchangeAbstract.sol\":1779:1791  bool success */\n      dup4\n        /* \"src/ExchangeAbstract.sol\":1796:1821  to.call{value:amount}(\"\") */\n      dup2\n        /* \"src/ExchangeAbstract.sol\":1779:1791  bool success */\n      dup2\n        /* \"src/ExchangeAbstract.sol\":1796:1821  to.call{value:amount}(\"\") */\n      dup2\n        /* \"src/ExchangeAbstract.sol\":1810:1816  amount */\n      dup6\n        /* \"src/ExchangeAbstract.sol\":1796:1803  to.call */\n      dup8\n        /* \"src/ExchangeAbstract.sol\":1796:1821  to.call{value:amount}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_437\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_436)\n    tag_437:\n      0x60\n      swap2\n      pop\n    tag_436:\n      pop\n        /* \"src/ExchangeAbstract.sol\":1778:1821  (bool success,) = to.call{value:amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/ExchangeAbstract.sol\":1840:1847  success */\n      dup1\n        /* \"src/ExchangeAbstract.sol\":1832:1848  require(success) */\n      tag_280\n      jumpi\n      revert(0x00, 0x00)\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24177:25296  function _burn(address from, uint256 amount) internal virtual {... */\n    tag_360:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24444:24462  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24438:24442  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24431:24463  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24489:24493  from */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24483:24487  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24476:24494  mstore(0x00, from) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24546:24550  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24540:24544  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24530:24551  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24589:24604  fromBalanceSlot */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24583:24605  sload(fromBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24679:24690  fromBalance */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24671:24677  amount */\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24668:24691  gt(amount, fromBalance) */\n      gt\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24665:24811  if gt(amount, fromBalance) {... */\n      iszero\n      tag_441\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24723:24733  0xf4d678b8 */\n      0xf4d678b8\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24717:24721  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24710:24734  mstore(0x00, 0xf4d678b8) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24792:24796  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24786:24790  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24779:24797  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24665:24811  if gt(amount, fromBalance) {... */\n    tag_441:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24903:24927  sub(fromBalance, amount) */\n      dup3\n      swap1\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":24879:24928  sstore(fromBalanceSlot, sub(fromBalance, amount)) */\n      swap1\n      sstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":25038:25056  _TOTAL_SUPPLY_SLOT */\n      0x05345cdf77eb68f44c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":25032:25057  sload(_TOTAL_SUPPLY_SLOT) */\n      dup1\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":25028:25066  sub(sload(_TOTAL_SUPPLY_SLOT), amount) */\n      dup3\n      swap1\n      sub\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":25001:25067  sstore(_TOTAL_SUPPLY_SLOT, sub(sload(_TOTAL_SUPPLY_SLOT), amount)) */\n      swap1\n      sstore\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":25122:25142  mstore(0x00, amount) */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":25199:25221  shr(96, shl(96, from)) */\n      dup4\n      and\n      mload(0x00)\n      codecopy(0x00, data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":25166:25170  0x20 */\n      0x20\n      dup4\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":25155:25225  log3(0x00, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, shl(96, from)), 0) */\n      log3\n        /* \"src/PinusVault2.sol\":3141:3353  function _transferERC20sBought(address to, uint amount) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22599:23771  function _mint(address to, uint256 amount) internal virtual {... */\n    tag_424:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22820:22838  _TOTAL_SUPPLY_SLOT */\n      0x05345cdf77eb68f44c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22814:22839  sload(_TOTAL_SUPPLY_SLOT) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22899:22905  amount */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22880:22897  totalSupplyBefore */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22876:22906  add(totalSupplyBefore, amount) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22996:23013  totalSupplyBefore */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22978:22994  totalSupplyAfter */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22975:23014  lt(totalSupplyAfter, totalSupplyBefore) */\n      lt\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22972:23134  if lt(totalSupplyAfter, totalSupplyBefore) {... */\n      iszero\n      tag_446\n      jumpi\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23046:23056  0xe5cfe957 */\n      0xe5cfe957\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23040:23044  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23033:23057  mstore(0x00, 0xe5cfe957) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23115:23119  0x04 */\n      0x04\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23109:23113  0x1c */\n      0x1c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23102:23120  revert(0x1c, 0x04) */\n      revert\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":22972:23134  if lt(totalSupplyAfter, totalSupplyBefore) {... */\n    tag_446:\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23221:23237  totalSupplyAfter */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23201:23219  _TOTAL_SUPPLY_SLOT */\n      0x05345cdf77eb68f44c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23194:23238  sstore(_TOTAL_SUPPLY_SLOT, totalSupplyAfter) */\n      sstore\n      pop\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23324:23342  _BALANCE_SLOT_SEED */\n      0x87a211a2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23318:23322  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23311:23343  mstore(0x0c, _BALANCE_SLOT_SEED) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23369:23371  to */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23363:23367  0x00 */\n      0x00\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23356:23372  mstore(0x00, to) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23422:23426  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23416:23420  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23406:23427  keccak256(0x0c, 0x20) */\n      keccak256\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23538:23544  amount */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23522:23535  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23516:23536  sload(toBalanceSlot) */\n      sload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23512:23545  add(sload(toBalanceSlot), amount) */\n      add\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23497:23510  toBalanceSlot */\n      dup2\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23490:23546  sstore(toBalanceSlot, add(sload(toBalanceSlot), amount)) */\n      sstore\n      pop\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23614:23620  amount */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23608:23612  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23601:23621  mstore(0x20, amount) */\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23695:23699  0x0c */\n      0x0c\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23689:23700  mload(0x0c) */\n      mload\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23685:23687  96 */\n      0x60\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23681:23701  shr(96, mload(0x0c)) */\n      shr\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23678:23679  0 */\n      0x00\n      mload(0x00)\n      codecopy(0x00, data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23645:23649  0x20 */\n      0x20\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23639:23643  0x20 */\n      dup1\n        /* \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":23634:23702  log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, 0, shr(96, mload(0x0c))) */\n      log3\n        /* \"src/PinusVault2.sol\":3141:3353  function _transferERC20sBought(address to, uint amount) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":237:526   */\n    tag_448:\n        /* \"#utility.yul\":279:282   */\n      0x00\n        /* \"#utility.yul\":317:322   */\n      dup2\n        /* \"#utility.yul\":311:323   */\n      mload\n        /* \"#utility.yul\":344:350   */\n      dup1\n        /* \"#utility.yul\":339:342   */\n      dup5\n        /* \"#utility.yul\":332:351   */\n      mstore\n        /* \"#utility.yul\":400:406   */\n      dup1\n        /* \"#utility.yul\":393:397   */\n      0x20\n        /* \"#utility.yul\":386:391   */\n      dup5\n        /* \"#utility.yul\":382:398   */\n      add\n        /* \"#utility.yul\":375:379   */\n      0x20\n        /* \"#utility.yul\":370:373   */\n      dup7\n        /* \"#utility.yul\":366:380   */\n      add\n        /* \"#utility.yul\":360:407   */\n      mcopy\n        /* \"#utility.yul\":452:453   */\n      0x00\n        /* \"#utility.yul\":445:449   */\n      0x20\n        /* \"#utility.yul\":436:442   */\n      dup3\n        /* \"#utility.yul\":431:434   */\n      dup7\n        /* \"#utility.yul\":427:443   */\n      add\n        /* \"#utility.yul\":423:450   */\n      add\n        /* \"#utility.yul\":416:454   */\n      mstore\n        /* \"#utility.yul\":515:519   */\n      0x20\n        /* \"#utility.yul\":508:510   */\n      0x1f\n        /* \"#utility.yul\":504:511   */\n      not\n        /* \"#utility.yul\":499:501   */\n      0x1f\n        /* \"#utility.yul\":491:497   */\n      dup4\n        /* \"#utility.yul\":487:502   */\n      add\n        /* \"#utility.yul\":483:512   */\n      and\n        /* \"#utility.yul\":478:481   */\n      dup6\n        /* \"#utility.yul\":474:513   */\n      add\n        /* \"#utility.yul\":470:520   */\n      add\n        /* \"#utility.yul\":463:520   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":237:526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":531:751   */\n    tag_56:\n        /* \"#utility.yul\":680:682   */\n      0x20\n        /* \"#utility.yul\":669:678   */\n      dup2\n        /* \"#utility.yul\":662:683   */\n      mstore\n        /* \"#utility.yul\":643:647   */\n      0x00\n        /* \"#utility.yul\":700:745   */\n      tag_313\n        /* \"#utility.yul\":741:743   */\n      0x20\n        /* \"#utility.yul\":730:739   */\n      dup4\n        /* \"#utility.yul\":726:744   */\n      add\n        /* \"#utility.yul\":718:724   */\n      dup5\n        /* \"#utility.yul\":700:745   */\n      tag_448\n      jump\t// in\n        /* \"#utility.yul\":756:887   */\n    tag_449:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":831:862   */\n      dup2\n      and\n        /* \"#utility.yul\":821:863   */\n      dup2\n      eq\n        /* \"#utility.yul\":811:881   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":877:878   */\n      0x00\n        /* \"#utility.yul\":874:875   */\n      0x00\n        /* \"#utility.yul\":867:879   */\n      revert\n        /* \"#utility.yul\":892:1259   */\n    tag_60:\n        /* \"#utility.yul\":960:966   */\n      0x00\n        /* \"#utility.yul\":968:974   */\n      0x00\n        /* \"#utility.yul\":1021:1023   */\n      0x40\n        /* \"#utility.yul\":1009:1018   */\n      dup4\n        /* \"#utility.yul\":1000:1007   */\n      dup6\n        /* \"#utility.yul\":996:1019   */\n      sub\n        /* \"#utility.yul\":992:1024   */\n      slt\n        /* \"#utility.yul\":989:1041   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":1037:1038   */\n      0x00\n        /* \"#utility.yul\":1034:1035   */\n      0x00\n        /* \"#utility.yul\":1027:1039   */\n      revert\n        /* \"#utility.yul\":989:1041   */\n    tag_461:\n        /* \"#utility.yul\":1076:1085   */\n      dup3\n        /* \"#utility.yul\":1063:1086   */\n      calldataload\n        /* \"#utility.yul\":1095:1126   */\n      tag_462\n        /* \"#utility.yul\":1120:1125   */\n      dup2\n        /* \"#utility.yul\":1095:1126   */\n      tag_449\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1145:1150   */\n      swap5\n        /* \"#utility.yul\":1223:1225   */\n      0x20\n        /* \"#utility.yul\":1208:1226   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1195:1227   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":892:1259   */\n      jump\t// out\n        /* \"#utility.yul\":1456:2297   */\n    tag_67:\n        /* \"#utility.yul\":1544:1550   */\n      0x00\n        /* \"#utility.yul\":1552:1558   */\n      0x00\n        /* \"#utility.yul\":1560:1566   */\n      0x00\n        /* \"#utility.yul\":1568:1574   */\n      0x00\n        /* \"#utility.yul\":1621:1623   */\n      0x60\n        /* \"#utility.yul\":1609:1618   */\n      dup6\n        /* \"#utility.yul\":1600:1607   */\n      dup8\n        /* \"#utility.yul\":1596:1619   */\n      sub\n        /* \"#utility.yul\":1592:1624   */\n      slt\n        /* \"#utility.yul\":1589:1641   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":1637:1638   */\n      0x00\n        /* \"#utility.yul\":1634:1635   */\n      0x00\n        /* \"#utility.yul\":1627:1639   */\n      revert\n        /* \"#utility.yul\":1589:1641   */\n    tag_465:\n        /* \"#utility.yul\":1676:1685   */\n      dup5\n        /* \"#utility.yul\":1663:1686   */\n      calldataload\n        /* \"#utility.yul\":1695:1726   */\n      tag_466\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1695:1726   */\n      tag_449\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":1745:1750   */\n      swap4\n      pop\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1808:1826   */\n      dup6\n      add\n        /* \"#utility.yul\":1795:1827   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1904:1906   */\n      0x40\n        /* \"#utility.yul\":1889:1907   */\n      dup6\n      add\n        /* \"#utility.yul\":1876:1908   */\n      calldataload\n        /* \"#utility.yul\":1931:1949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1920:1950   */\n      dup2\n      gt\n        /* \"#utility.yul\":1917:1967   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1960:1961   */\n      0x00\n        /* \"#utility.yul\":1953:1965   */\n      revert\n        /* \"#utility.yul\":1917:1967   */\n    tag_467:\n        /* \"#utility.yul\":1986:2008   */\n      dup6\n      add\n        /* \"#utility.yul\":2039:2043   */\n      0x1f\n        /* \"#utility.yul\":2031:2044   */\n      dup2\n      add\n        /* \"#utility.yul\":2027:2054   */\n      dup8\n      sgt\n        /* \"#utility.yul\":2017:2072   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":2068:2069   */\n      0x00\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2058:2070   */\n      revert\n        /* \"#utility.yul\":2017:2072   */\n    tag_468:\n        /* \"#utility.yul\":2108:2110   */\n      dup1\n        /* \"#utility.yul\":2095:2111   */\n      calldataload\n        /* \"#utility.yul\":2134:2152   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2126:2132   */\n      dup2\n        /* \"#utility.yul\":2123:2153   */\n      gt\n        /* \"#utility.yul\":2120:2170   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":2166:2167   */\n      0x00\n        /* \"#utility.yul\":2163:2164   */\n      0x00\n        /* \"#utility.yul\":2156:2168   */\n      revert\n        /* \"#utility.yul\":2120:2170   */\n    tag_469:\n        /* \"#utility.yul\":2211:2218   */\n      dup8\n        /* \"#utility.yul\":2206:2208   */\n      0x20\n        /* \"#utility.yul\":2197:2203   */\n      dup3\n        /* \"#utility.yul\":2193:2195   */\n      dup5\n        /* \"#utility.yul\":2189:2204   */\n      add\n        /* \"#utility.yul\":2185:2209   */\n      add\n        /* \"#utility.yul\":2182:2219   */\n      gt\n        /* \"#utility.yul\":2179:2236   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":2232:2233   */\n      0x00\n        /* \"#utility.yul\":2229:2230   */\n      0x00\n        /* \"#utility.yul\":2222:2234   */\n      revert\n        /* \"#utility.yul\":2179:2236   */\n    tag_470:\n        /* \"#utility.yul\":1456:2297   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":2263:2265   */\n      0x20\n        /* \"#utility.yul\":2255:2266   */\n      add\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1456:2297   */\n      jump\t// out\n        /* \"#utility.yul\":2302:2601   */\n    tag_70:\n        /* \"#utility.yul\":2485:2491   */\n      dup3\n        /* \"#utility.yul\":2478:2492   */\n      iszero\n        /* \"#utility.yul\":2471:2493   */\n      iszero\n        /* \"#utility.yul\":2460:2469   */\n      dup2\n        /* \"#utility.yul\":2453:2494   */\n      mstore\n        /* \"#utility.yul\":2530:2532   */\n      0x40\n        /* \"#utility.yul\":2525:2527   */\n      0x20\n        /* \"#utility.yul\":2514:2523   */\n      dup3\n        /* \"#utility.yul\":2510:2528   */\n      add\n        /* \"#utility.yul\":2503:2533   */\n      mstore\n        /* \"#utility.yul\":2434:2438   */\n      0x00\n        /* \"#utility.yul\":2550:2595   */\n      tag_340\n        /* \"#utility.yul\":2591:2593   */\n      0x40\n        /* \"#utility.yul\":2580:2589   */\n      dup4\n        /* \"#utility.yul\":2576:2594   */\n      add\n        /* \"#utility.yul\":2568:2574   */\n      dup5\n        /* \"#utility.yul\":2550:2595   */\n      tag_448\n      jump\t// in\n        /* \"#utility.yul\":2606:2853   */\n    tag_73:\n        /* \"#utility.yul\":2665:2671   */\n      0x00\n        /* \"#utility.yul\":2718:2720   */\n      0x20\n        /* \"#utility.yul\":2706:2715   */\n      dup3\n        /* \"#utility.yul\":2697:2704   */\n      dup5\n        /* \"#utility.yul\":2693:2716   */\n      sub\n        /* \"#utility.yul\":2689:2721   */\n      slt\n        /* \"#utility.yul\":2686:2738   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":2734:2735   */\n      0x00\n        /* \"#utility.yul\":2731:2732   */\n      0x00\n        /* \"#utility.yul\":2724:2736   */\n      revert\n        /* \"#utility.yul\":2686:2738   */\n    tag_474:\n        /* \"#utility.yul\":2773:2782   */\n      dup2\n        /* \"#utility.yul\":2760:2783   */\n      calldataload\n        /* \"#utility.yul\":2792:2823   */\n      tag_313\n        /* \"#utility.yul\":2817:2822   */\n      dup2\n        /* \"#utility.yul\":2792:2823   */\n      tag_449\n      jump\t// in\n        /* \"#utility.yul\":3040:3569   */\n    tag_80:\n        /* \"#utility.yul\":3138:3144   */\n      0x00\n        /* \"#utility.yul\":3146:3152   */\n      0x00\n        /* \"#utility.yul\":3154:3160   */\n      0x00\n        /* \"#utility.yul\":3207:3209   */\n      0x60\n        /* \"#utility.yul\":3195:3204   */\n      dup5\n        /* \"#utility.yul\":3186:3193   */\n      dup7\n        /* \"#utility.yul\":3182:3205   */\n      sub\n        /* \"#utility.yul\":3178:3210   */\n      slt\n        /* \"#utility.yul\":3175:3227   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":3223:3224   */\n      0x00\n        /* \"#utility.yul\":3220:3221   */\n      0x00\n        /* \"#utility.yul\":3213:3225   */\n      revert\n        /* \"#utility.yul\":3175:3227   */\n    tag_478:\n        /* \"#utility.yul\":3262:3271   */\n      dup4\n        /* \"#utility.yul\":3249:3272   */\n      calldataload\n        /* \"#utility.yul\":3281:3312   */\n      tag_479\n        /* \"#utility.yul\":3306:3311   */\n      dup2\n        /* \"#utility.yul\":3281:3312   */\n      tag_449\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":3331:3336   */\n      swap3\n      pop\n        /* \"#utility.yul\":3409:3411   */\n      0x20\n        /* \"#utility.yul\":3394:3412   */\n      dup5\n      add\n        /* \"#utility.yul\":3381:3413   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3491:3493   */\n      0x40\n        /* \"#utility.yul\":3476:3494   */\n      dup5\n      add\n        /* \"#utility.yul\":3463:3495   */\n      calldataload\n        /* \"#utility.yul\":3504:3537   */\n      tag_480\n        /* \"#utility.yul\":3463:3495   */\n      dup2\n        /* \"#utility.yul\":3504:3537   */\n      tag_449\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3556:3563   */\n      dup1\n        /* \"#utility.yul\":3546:3563   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3040:3569   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3574:4082   */\n    tag_93:\n        /* \"#utility.yul\":3651:3657   */\n      0x00\n        /* \"#utility.yul\":3659:3665   */\n      0x00\n        /* \"#utility.yul\":3667:3673   */\n      0x00\n        /* \"#utility.yul\":3720:3722   */\n      0x60\n        /* \"#utility.yul\":3708:3717   */\n      dup5\n        /* \"#utility.yul\":3699:3706   */\n      dup7\n        /* \"#utility.yul\":3695:3718   */\n      sub\n        /* \"#utility.yul\":3691:3723   */\n      slt\n        /* \"#utility.yul\":3688:3740   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":3736:3737   */\n      0x00\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3738   */\n      revert\n        /* \"#utility.yul\":3688:3740   */\n    tag_482:\n        /* \"#utility.yul\":3775:3784   */\n      dup4\n        /* \"#utility.yul\":3762:3785   */\n      calldataload\n        /* \"#utility.yul\":3794:3825   */\n      tag_483\n        /* \"#utility.yul\":3819:3824   */\n      dup2\n        /* \"#utility.yul\":3794:3825   */\n      tag_449\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":3844:3849   */\n      swap3\n      pop\n        /* \"#utility.yul\":3901:3903   */\n      0x20\n        /* \"#utility.yul\":3886:3904   */\n      dup5\n      add\n        /* \"#utility.yul\":3873:3905   */\n      calldataload\n        /* \"#utility.yul\":3914:3947   */\n      tag_484\n        /* \"#utility.yul\":3873:3905   */\n      dup2\n        /* \"#utility.yul\":3914:3947   */\n      tag_449\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3574:4082   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3966:3973   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4046:4048   */\n      0x40\n        /* \"#utility.yul\":4031:4049   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4018:4050   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3574:4082   */\n      jump\t// out\n        /* \"#utility.yul\":4679:4905   */\n    tag_114:\n        /* \"#utility.yul\":4738:4744   */\n      0x00\n        /* \"#utility.yul\":4791:4793   */\n      0x20\n        /* \"#utility.yul\":4779:4788   */\n      dup3\n        /* \"#utility.yul\":4770:4777   */\n      dup5\n        /* \"#utility.yul\":4766:4789   */\n      sub\n        /* \"#utility.yul\":4762:4794   */\n      slt\n        /* \"#utility.yul\":4759:4811   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":4807:4808   */\n      0x00\n        /* \"#utility.yul\":4804:4805   */\n      0x00\n        /* \"#utility.yul\":4797:4809   */\n      revert\n        /* \"#utility.yul\":4759:4811   */\n    tag_489:\n      pop\n        /* \"#utility.yul\":4852:4875   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4679:4905   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4910:5069   */\n    tag_450:\n        /* \"#utility.yul\":4973:4978   */\n      0x00\n        /* \"#utility.yul\":5018:5021   */\n      0x80\n        /* \"#utility.yul\":5009:5015   */\n      dup3\n        /* \"#utility.yul\":5004:5007   */\n      dup5\n        /* \"#utility.yul\":5000:5016   */\n      sub\n        /* \"#utility.yul\":4996:5022   */\n      slt\n        /* \"#utility.yul\":4993:5039   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":5035:5036   */\n      0x00\n        /* \"#utility.yul\":5032:5033   */\n      0x00\n        /* \"#utility.yul\":5025:5037   */\n      revert\n        /* \"#utility.yul\":4993:5039   */\n    tag_491:\n      pop\n        /* \"#utility.yul\":5057:5063   */\n      swap2\n        /* \"#utility.yul\":4910:5069   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5074:5433   */\n    tag_125:\n        /* \"#utility.yul\":5172:5178   */\n      0x00\n        /* \"#utility.yul\":5180:5186   */\n      0x00\n        /* \"#utility.yul\":5233:5236   */\n      0xa0\n        /* \"#utility.yul\":5221:5230   */\n      dup4\n        /* \"#utility.yul\":5212:5219   */\n      dup6\n        /* \"#utility.yul\":5208:5231   */\n      sub\n        /* \"#utility.yul\":5204:5237   */\n      slt\n        /* \"#utility.yul\":5201:5254   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":5250:5251   */\n      0x00\n        /* \"#utility.yul\":5247:5248   */\n      0x00\n        /* \"#utility.yul\":5240:5252   */\n      revert\n        /* \"#utility.yul\":5201:5254   */\n    tag_493:\n        /* \"#utility.yul\":5295:5318   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5361:5427   */\n      tag_494\n        /* \"#utility.yul\":5419:5426   */\n      dup5\n        /* \"#utility.yul\":5414:5416   */\n      0x20\n        /* \"#utility.yul\":5399:5417   */\n      dup6\n      add\n        /* \"#utility.yul\":5361:5427   */\n      tag_450\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5351:5427   */\n      swap1\n      pop\n        /* \"#utility.yul\":5074:5433   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5853:6353   */\n    tag_168:\n        /* \"#utility.yul\":5960:5966   */\n      0x00\n        /* \"#utility.yul\":5968:5974   */\n      0x00\n        /* \"#utility.yul\":5976:5982   */\n      0x00\n        /* \"#utility.yul\":6029:6032   */\n      0xc0\n        /* \"#utility.yul\":6017:6026   */\n      dup5\n        /* \"#utility.yul\":6008:6015   */\n      dup7\n        /* \"#utility.yul\":6004:6027   */\n      sub\n        /* \"#utility.yul\":6000:6033   */\n      slt\n        /* \"#utility.yul\":5997:6050   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":6046:6047   */\n      0x00\n        /* \"#utility.yul\":6043:6044   */\n      0x00\n        /* \"#utility.yul\":6036:6048   */\n      revert\n        /* \"#utility.yul\":5997:6050   */\n    tag_498:\n        /* \"#utility.yul\":6091:6114   */\n      dup4\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":6190:6192   */\n      0x20\n        /* \"#utility.yul\":6175:6193   */\n      dup5\n      add\n        /* \"#utility.yul\":6162:6194   */\n      calldataload\n        /* \"#utility.yul\":6203:6236   */\n      tag_499\n        /* \"#utility.yul\":6162:6194   */\n      dup2\n        /* \"#utility.yul\":6203:6236   */\n      tag_449\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6255:6262   */\n      swap2\n      pop\n        /* \"#utility.yul\":6281:6347   */\n      tag_500\n        /* \"#utility.yul\":6339:6346   */\n      dup6\n        /* \"#utility.yul\":6334:6336   */\n      0x40\n        /* \"#utility.yul\":6319:6337   */\n      dup7\n      add\n        /* \"#utility.yul\":6281:6347   */\n      tag_450\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":6271:6347   */\n      swap1\n      pop\n        /* \"#utility.yul\":5853:6353   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6358:6725   */\n    tag_188:\n        /* \"#utility.yul\":6426:6432   */\n      0x00\n        /* \"#utility.yul\":6434:6440   */\n      0x00\n        /* \"#utility.yul\":6487:6489   */\n      0x40\n        /* \"#utility.yul\":6475:6484   */\n      dup4\n        /* \"#utility.yul\":6466:6473   */\n      dup6\n        /* \"#utility.yul\":6462:6485   */\n      sub\n        /* \"#utility.yul\":6458:6490   */\n      slt\n        /* \"#utility.yul\":6455:6507   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":6503:6504   */\n      0x00\n        /* \"#utility.yul\":6500:6501   */\n      0x00\n        /* \"#utility.yul\":6493:6505   */\n      revert\n        /* \"#utility.yul\":6455:6507   */\n    tag_502:\n        /* \"#utility.yul\":6548:6571   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":6647:6649   */\n      0x20\n        /* \"#utility.yul\":6632:6650   */\n      dup4\n      add\n        /* \"#utility.yul\":6619:6651   */\n      calldataload\n        /* \"#utility.yul\":6660:6693   */\n      tag_503\n        /* \"#utility.yul\":6619:6651   */\n      dup2\n        /* \"#utility.yul\":6660:6693   */\n      tag_449\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":6712:6719   */\n      dup1\n        /* \"#utility.yul\":6702:6719   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6358:6725   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:6886   */\n    tag_451:\n        /* \"#utility.yul\":6796:6816   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":6856:6860   */\n      0xff\n        /* \"#utility.yul\":6845:6861   */\n      dup2\n      and\n        /* \"#utility.yul\":6835:6862   */\n      dup2\n      eq\n        /* \"#utility.yul\":6825:6880   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":6876:6877   */\n      0x00\n        /* \"#utility.yul\":6873:6874   */\n      0x00\n        /* \"#utility.yul\":6866:6878   */\n      revert\n        /* \"#utility.yul\":6891:7833   */\n    tag_203:\n        /* \"#utility.yul\":7002:7008   */\n      0x00\n        /* \"#utility.yul\":7010:7016   */\n      0x00\n        /* \"#utility.yul\":7018:7024   */\n      0x00\n        /* \"#utility.yul\":7026:7032   */\n      0x00\n        /* \"#utility.yul\":7034:7040   */\n      0x00\n        /* \"#utility.yul\":7042:7048   */\n      0x00\n        /* \"#utility.yul\":7050:7056   */\n      0x00\n        /* \"#utility.yul\":7103:7106   */\n      0xe0\n        /* \"#utility.yul\":7091:7100   */\n      dup9\n        /* \"#utility.yul\":7082:7089   */\n      dup11\n        /* \"#utility.yul\":7078:7101   */\n      sub\n        /* \"#utility.yul\":7074:7107   */\n      slt\n        /* \"#utility.yul\":7071:7124   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":7120:7121   */\n      0x00\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7110:7122   */\n      revert\n        /* \"#utility.yul\":7071:7124   */\n    tag_507:\n        /* \"#utility.yul\":7159:7168   */\n      dup8\n        /* \"#utility.yul\":7146:7169   */\n      calldataload\n        /* \"#utility.yul\":7178:7209   */\n      tag_508\n        /* \"#utility.yul\":7203:7208   */\n      dup2\n        /* \"#utility.yul\":7178:7209   */\n      tag_449\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":7228:7233   */\n      swap7\n      pop\n        /* \"#utility.yul\":7285:7287   */\n      0x20\n        /* \"#utility.yul\":7270:7288   */\n      dup9\n      add\n        /* \"#utility.yul\":7257:7289   */\n      calldataload\n        /* \"#utility.yul\":7298:7331   */\n      tag_509\n        /* \"#utility.yul\":7257:7289   */\n      dup2\n        /* \"#utility.yul\":7298:7331   */\n      tag_449\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":7350:7357   */\n      swap6\n      pop\n        /* \"#utility.yul\":7430:7432   */\n      0x40\n        /* \"#utility.yul\":7415:7433   */\n      dup9\n      add\n        /* \"#utility.yul\":7402:7434   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":7533:7535   */\n      0x60\n        /* \"#utility.yul\":7518:7536   */\n      dup9\n      add\n        /* \"#utility.yul\":7505:7537   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":7582:7619   */\n      tag_510\n        /* \"#utility.yul\":7614:7617   */\n      0x80\n        /* \"#utility.yul\":7599:7618   */\n      dup10\n      add\n        /* \"#utility.yul\":7582:7619   */\n      tag_451\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":6891:7833   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":7572:7619   */\n      swap5\n        /* \"#utility.yul\":7692:7695   */\n      0xa0\n        /* \"#utility.yul\":7677:7696   */\n      dup5\n      add\n        /* \"#utility.yul\":7664:7697   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":7796:7799   */\n      0xc0\n        /* \"#utility.yul\":7781:7800   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":7768:7801   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":6891:7833   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7838:8226   */\n    tag_208:\n        /* \"#utility.yul\":7906:7912   */\n      0x00\n        /* \"#utility.yul\":7914:7920   */\n      0x00\n        /* \"#utility.yul\":7967:7969   */\n      0x40\n        /* \"#utility.yul\":7955:7964   */\n      dup4\n        /* \"#utility.yul\":7946:7953   */\n      dup6\n        /* \"#utility.yul\":7942:7965   */\n      sub\n        /* \"#utility.yul\":7938:7970   */\n      slt\n        /* \"#utility.yul\":7935:7987   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":7983:7984   */\n      0x00\n        /* \"#utility.yul\":7980:7981   */\n      0x00\n        /* \"#utility.yul\":7973:7985   */\n      revert\n        /* \"#utility.yul\":7935:7987   */\n    tag_512:\n        /* \"#utility.yul\":8022:8031   */\n      dup3\n        /* \"#utility.yul\":8009:8032   */\n      calldataload\n        /* \"#utility.yul\":8041:8072   */\n      tag_513\n        /* \"#utility.yul\":8066:8071   */\n      dup2\n        /* \"#utility.yul\":8041:8072   */\n      tag_449\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":8091:8096   */\n      swap2\n      pop\n        /* \"#utility.yul\":8148:8150   */\n      0x20\n        /* \"#utility.yul\":8133:8151   */\n      dup4\n      add\n        /* \"#utility.yul\":8120:8152   */\n      calldataload\n        /* \"#utility.yul\":8161:8194   */\n      tag_503\n        /* \"#utility.yul\":8120:8152   */\n      dup2\n        /* \"#utility.yul\":8161:8194   */\n      tag_449\n      jump\t// in\n        /* \"#utility.yul\":8418:8689   */\n    tag_249:\n        /* \"#utility.yul\":8601:8607   */\n      dup2\n        /* \"#utility.yul\":8593:8599   */\n      dup4\n        /* \"#utility.yul\":8588:8591   */\n      dup3\n        /* \"#utility.yul\":8575:8608   */\n      calldatacopy\n        /* \"#utility.yul\":8557:8560   */\n      0x00\n        /* \"#utility.yul\":8627:8643   */\n      swap2\n      add\n        /* \"#utility.yul\":8652:8665   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8627:8643   */\n      swap2\n        /* \"#utility.yul\":8418:8689   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8973:9250   */\n    tag_264:\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9081:9090   */\n      dup3\n        /* \"#utility.yul\":9072:9079   */\n      dup5\n        /* \"#utility.yul\":9068:9091   */\n      sub\n        /* \"#utility.yul\":9064:9096   */\n      slt\n        /* \"#utility.yul\":9061:9113   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":9109:9110   */\n      0x00\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9099:9111   */\n      revert\n        /* \"#utility.yul\":9061:9113   */\n    tag_519:\n        /* \"#utility.yul\":9141:9150   */\n      dup2\n        /* \"#utility.yul\":9135:9151   */\n      mload\n        /* \"#utility.yul\":9194:9199   */\n      dup1\n        /* \"#utility.yul\":9187:9200   */\n      iszero\n        /* \"#utility.yul\":9180:9201   */\n      iszero\n        /* \"#utility.yul\":9173:9178   */\n      dup2\n        /* \"#utility.yul\":9170:9202   */\n      eq\n        /* \"#utility.yul\":9160:9220   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":9216:9217   */\n      0x00\n        /* \"#utility.yul\":9213:9214   */\n      0x00\n        /* \"#utility.yul\":9206:9218   */\n      revert\n        /* \"#utility.yul\":9255:9439   */\n    tag_269:\n        /* \"#utility.yul\":9325:9331   */\n      0x00\n        /* \"#utility.yul\":9378:9380   */\n      0x20\n        /* \"#utility.yul\":9366:9375   */\n      dup3\n        /* \"#utility.yul\":9357:9364   */\n      dup5\n        /* \"#utility.yul\":9353:9376   */\n      sub\n        /* \"#utility.yul\":9349:9381   */\n      slt\n        /* \"#utility.yul\":9346:9398   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":9394:9395   */\n      0x00\n        /* \"#utility.yul\":9391:9392   */\n      0x00\n        /* \"#utility.yul\":9384:9396   */\n      revert\n        /* \"#utility.yul\":9346:9398   */\n    tag_522:\n      pop\n        /* \"#utility.yul\":9417:9433   */\n      mload\n      swap2\n        /* \"#utility.yul\":9255:9439   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9444:9571   */\n    tag_452:\n        /* \"#utility.yul\":9505:9515   */\n      0x4e487b71\n        /* \"#utility.yul\":9500:9503   */\n      0xe0\n        /* \"#utility.yul\":9496:9516   */\n      shl\n        /* \"#utility.yul\":9493:9494   */\n      0x00\n        /* \"#utility.yul\":9486:9517   */\n      mstore\n        /* \"#utility.yul\":9536:9540   */\n      0x11\n        /* \"#utility.yul\":9533:9534   */\n      0x04\n        /* \"#utility.yul\":9526:9541   */\n      mstore\n        /* \"#utility.yul\":9560:9564   */\n      0x24\n        /* \"#utility.yul\":9557:9558   */\n      0x00\n        /* \"#utility.yul\":9550:9565   */\n      revert\n        /* \"#utility.yul\":9576:9704   */\n    tag_272:\n        /* \"#utility.yul\":9643:9652   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9664:9675   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9661:9698   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":9678:9696   */\n      tag_239\n      tag_452\n      jump\t// in\n        /* \"#utility.yul\":9709:9834   */\n    tag_303:\n        /* \"#utility.yul\":9774:9783   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9795:9805   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9792:9828   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":9808:9826   */\n      tag_239\n      tag_452\n      jump\t// in\n        /* \"#utility.yul\":9839:10007   */\n    tag_306:\n        /* \"#utility.yul\":9912:9921   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9943:9952   */\n      dup2\n      iszero\n        /* \"#utility.yul\":9960:9975   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":9954:9976   */\n      dup5\n      eq\n        /* \"#utility.yul\":9940:9977   */\n      or\n        /* \"#utility.yul\":9930:10001   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":9981:9999   */\n      tag_239\n      tag_452\n      jump\t// in\n        /* \"#utility.yul\":10012:10229   */\n    tag_308:\n        /* \"#utility.yul\":10052:10053   */\n      0x00\n        /* \"#utility.yul\":10078:10079   */\n      dup3\n        /* \"#utility.yul\":10068:10200   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":10122:10132   */\n      0x4e487b71\n        /* \"#utility.yul\":10117:10120   */\n      0xe0\n        /* \"#utility.yul\":10113:10133   */\n      shl\n        /* \"#utility.yul\":10110:10111   */\n      0x00\n        /* \"#utility.yul\":10103:10134   */\n      mstore\n        /* \"#utility.yul\":10157:10161   */\n      0x12\n        /* \"#utility.yul\":10154:10155   */\n      0x04\n        /* \"#utility.yul\":10147:10162   */\n      mstore\n        /* \"#utility.yul\":10185:10189   */\n      0x24\n        /* \"#utility.yul\":10182:10183   */\n      0x00\n        /* \"#utility.yul\":10175:10190   */\n      revert\n        /* \"#utility.yul\":10068:10200   */\n    tag_534:\n      pop\n        /* \"#utility.yul\":10214:10223   */\n      div\n      swap1\n        /* \"#utility.yul\":10012:10229   */\n      jump\t// out\n        /* \"#utility.yul\":10234:10416   */\n    tag_334:\n        /* \"#utility.yul\":10291:10297   */\n      0x00\n        /* \"#utility.yul\":10344:10346   */\n      0x20\n        /* \"#utility.yul\":10332:10341   */\n      dup3\n        /* \"#utility.yul\":10323:10330   */\n      dup5\n        /* \"#utility.yul\":10319:10342   */\n      sub\n        /* \"#utility.yul\":10315:10347   */\n      slt\n        /* \"#utility.yul\":10312:10364   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":10360:10361   */\n      0x00\n        /* \"#utility.yul\":10357:10358   */\n      0x00\n        /* \"#utility.yul\":10350:10362   */\n      revert\n        /* \"#utility.yul\":10312:10364   */\n    tag_536:\n        /* \"#utility.yul\":10383:10410   */\n      tag_313\n        /* \"#utility.yul\":10400:10409   */\n      dup3\n        /* \"#utility.yul\":10383:10410   */\n      tag_451\n      jump\t// in\n        /* \"#utility.yul\":11549:12108   */\n    tag_368:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11762:11794   */\n      dup6\n      and\n        /* \"#utility.yul\":11744:11795   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11826:11828   */\n      0x20\n        /* \"#utility.yul\":11811:11829   */\n      dup2\n      add\n        /* \"#utility.yul\":11804:11838   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":11874:11876   */\n      0x60\n        /* \"#utility.yul\":11869:11871   */\n      0x40\n        /* \"#utility.yul\":11854:11872   */\n      dup3\n      add\n        /* \"#utility.yul\":11847:11877   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11893:11911   */\n      dup2\n      add\n        /* \"#utility.yul\":11886:11920   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":11913:11919   */\n      dup2\n        /* \"#utility.yul\":11963:11969   */\n      dup4\n        /* \"#utility.yul\":11957:11960   */\n      0x80\n        /* \"#utility.yul\":11942:11961   */\n      dup4\n      add\n        /* \"#utility.yul\":11929:11978   */\n      calldatacopy\n        /* \"#utility.yul\":12028:12029   */\n      0x00\n        /* \"#utility.yul\":11998:12020   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":12022:12025   */\n      0x80\n        /* \"#utility.yul\":11994:12026   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11987:12030   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12091:12093   */\n      0x1f\n        /* \"#utility.yul\":12070:12085   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":12066:12095   */\n      and\n        /* \"#utility.yul\":12051:12096   */\n      add\n        /* \"#utility.yul\":12047:12102   */\n      add\n      swap4\n        /* \"#utility.yul\":11549:12108   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12113:12403   */\n    tag_372:\n        /* \"#utility.yul\":12182:12188   */\n      0x00\n        /* \"#utility.yul\":12235:12237   */\n      0x20\n        /* \"#utility.yul\":12223:12232   */\n      dup3\n        /* \"#utility.yul\":12214:12221   */\n      dup5\n        /* \"#utility.yul\":12210:12233   */\n      sub\n        /* \"#utility.yul\":12206:12238   */\n      slt\n        /* \"#utility.yul\":12203:12255   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":12251:12252   */\n      0x00\n        /* \"#utility.yul\":12248:12249   */\n      0x00\n        /* \"#utility.yul\":12241:12253   */\n      revert\n        /* \"#utility.yul\":12203:12255   */\n    tag_542:\n        /* \"#utility.yul\":12277:12293   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":12322:12354   */\n      dup2\n      and\n        /* \"#utility.yul\":12312:12355   */\n      dup2\n      eq\n        /* \"#utility.yul\":12302:12373   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":12369:12370   */\n      0x00\n        /* \"#utility.yul\":12366:12367   */\n      0x00\n        /* \"#utility.yul\":12359:12371   */\n      revert\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa264697066735822122078fbabb9203af5204125aa17e7f23569188d6f71eaf067a5ee3ce7d06434200d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1009": {
									"entryPoint": null,
									"id": 1009,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_1166": {
									"entryPoint": null,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_826": {
									"entryPoint": null,
									"id": 826,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 300,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint128": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2717:8",
										"nodeType": "YulBlock",
										"src": "0:2717:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "210:659:8",
													"nodeType": "YulBlock",
													"src": "210:659:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:8",
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nativeSrc": "261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nativeSrc": "261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:8",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nativeSrc": "234:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nativeSrc": "230:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nativeSrc": "223:35:8",
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nativeSrc": "220:55:8",
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nativeSrc": "284:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:8"
																},
																"nativeSrc": "298:13:8",
																"nodeType": "YulFunctionCall",
																"src": "298:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:8",
																	"nodeType": "YulTypedName",
																	"src": "288:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:8",
																"nodeType": "YulBlock",
																"src": "354:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:8"
																			},
																			"nativeSrc": "356:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:8"
																		},
																		"nativeSrc": "356:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:8",
																						"nodeType": "YulLiteral",
																						"src": "342:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:8",
																						"nodeType": "YulLiteral",
																						"src": "346:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:8"
																				},
																				"nativeSrc": "338:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:8",
																				"nodeType": "YulLiteral",
																				"src": "350:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:8"
																		},
																		"nativeSrc": "334:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:8"
																},
																"nativeSrc": "323:30:8",
																"nodeType": "YulFunctionCall",
																"src": "323:30:8"
															},
															"nativeSrc": "320:56:8",
															"nodeType": "YulIf",
															"src": "320:56:8"
														},
														{
															"nativeSrc": "385:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:8",
																		"nodeType": "YulLiteral",
																		"src": "405:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:8"
																},
																"nativeSrc": "399:9:8",
																"nodeType": "YulFunctionCall",
																"src": "399:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:8",
																	"nodeType": "YulTypedName",
																	"src": "389:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:8",
																										"nodeType": "YulLiteral",
																										"src": "471:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:8"
																								},
																								"nativeSrc": "459:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:8",
																										"nodeType": "YulLiteral",
																										"src": "482:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:8"
																								},
																								"nativeSrc": "478:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:8"
																						},
																						"nativeSrc": "455:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:8",
																						"nodeType": "YulLiteral",
																						"src": "488:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:8"
																				},
																				"nativeSrc": "451:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:8",
																						"nodeType": "YulLiteral",
																						"src": "497:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:8"
																				},
																				"nativeSrc": "493:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:8"
																		},
																		"nativeSrc": "447:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:8"
																},
																"nativeSrc": "435:67:8",
																"nodeType": "YulFunctionCall",
																"src": "435:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:8",
																	"nodeType": "YulTypedName",
																	"src": "421:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:8",
																"nodeType": "YulBlock",
																"src": "577:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:8"
																			},
																			"nativeSrc": "579:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:8"
																		},
																		"nativeSrc": "579:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:8",
																								"nodeType": "YulLiteral",
																								"src": "540:2:8",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:8",
																								"nodeType": "YulLiteral",
																								"src": "544:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:8"
																						},
																						"nativeSrc": "536:10:8",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:8",
																						"nodeType": "YulLiteral",
																						"src": "548:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:8"
																				},
																				"nativeSrc": "532:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:8"
																		},
																		"nativeSrc": "517:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:8"
																		},
																		"nativeSrc": "553:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:8"
																},
																"nativeSrc": "514:62:8",
																"nodeType": "YulFunctionCall",
																"src": "514:62:8"
															},
															"nativeSrc": "511:88:8",
															"nodeType": "YulIf",
															"src": "511:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:8",
																		"nodeType": "YulLiteral",
																		"src": "615:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:8"
																},
																"nativeSrc": "608:22:8",
																"nodeType": "YulFunctionCall",
																"src": "608:22:8"
															},
															"nativeSrc": "608:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:8"
																},
																"nativeSrc": "639:22:8",
																"nodeType": "YulFunctionCall",
																"src": "639:22:8"
															},
															"nativeSrc": "639:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:8"
														},
														{
															"body": {
																"nativeSrc": "713:16:8",
																"nodeType": "YulBlock",
																"src": "713:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:8",
																					"nodeType": "YulLiteral",
																					"src": "722:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:8",
																					"nodeType": "YulLiteral",
																					"src": "725:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:8"
																			},
																			"nativeSrc": "715:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:8"
																		},
																		"nativeSrc": "715:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:8"
																				},
																				"nativeSrc": "680:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:8",
																				"nodeType": "YulLiteral",
																				"src": "701:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:8"
																		},
																		"nativeSrc": "676:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:8"
																},
																"nativeSrc": "673:39:8",
																"nodeType": "YulFunctionCall",
																"src": "673:39:8"
															},
															"nativeSrc": "670:59:8",
															"nodeType": "YulIf",
															"src": "670:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:8",
																				"nodeType": "YulLiteral",
																				"src": "756:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:8"
																		},
																		"nativeSrc": "744:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:8",
																				"nodeType": "YulLiteral",
																				"src": "775:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:8"
																		},
																		"nativeSrc": "763:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:8"
																},
																"nativeSrc": "738:51:8",
																"nodeType": "YulFunctionCall",
																"src": "738:51:8"
															},
															"nativeSrc": "738:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:8"
																				},
																				"nativeSrc": "809:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:8",
																				"nodeType": "YulLiteral",
																				"src": "830:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:8"
																		},
																		"nativeSrc": "805:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:8",
																		"nodeType": "YulLiteral",
																		"src": "837:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:8"
																},
																"nativeSrc": "798:41:8",
																"nodeType": "YulFunctionCall",
																"src": "798:41:8"
															},
															"nativeSrc": "798:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:8"
														},
														{
															"nativeSrc": "848:15:8",
															"nodeType": "YulAssignment",
															"src": "848:15:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:8",
																"nodeType": "YulIdentifier",
																"src": "857:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:8",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:8",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:8",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:723:8"
											},
											{
												"body": {
													"nativeSrc": "1009:589:8",
													"nodeType": "YulBlock",
													"src": "1009:589:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1055:16:8",
																"nodeType": "YulBlock",
																"src": "1055:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1067:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1067:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1057:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1057:6:8"
																			},
																			"nativeSrc": "1057:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1057:12:8"
																		},
																		"nativeSrc": "1057:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1057:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1030:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1039:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1026:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:8"
																		},
																		"nativeSrc": "1026:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1051:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1022:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1022:3:8"
																},
																"nativeSrc": "1022:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1022:32:8"
															},
															"nativeSrc": "1019:52:8",
															"nodeType": "YulIf",
															"src": "1019:52:8"
														},
														{
															"nativeSrc": "1080:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1080:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1099:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1093:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1093:5:8"
																},
																"nativeSrc": "1093:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1093:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1084:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1084:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1172:16:8",
																"nodeType": "YulBlock",
																"src": "1172:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1181:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1181:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1184:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1174:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1174:6:8"
																			},
																			"nativeSrc": "1174:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:8"
																		},
																		"nativeSrc": "1174:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1174:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1131:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1131:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1142:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1142:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1157:3:8",
																										"nodeType": "YulLiteral",
																										"src": "1157:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1162:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1162:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1153:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1153:3:8"
																								},
																								"nativeSrc": "1153:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1153:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1166:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1166:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1149:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1149:3:8"
																						},
																						"nativeSrc": "1149:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1149:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1138:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:8"
																				},
																				"nativeSrc": "1138:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1138:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1128:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1128:2:8"
																		},
																		"nativeSrc": "1128:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1128:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1121:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:8"
																},
																"nativeSrc": "1121:50:8",
																"nodeType": "YulFunctionCall",
																"src": "1121:50:8"
															},
															"nativeSrc": "1118:70:8",
															"nodeType": "YulIf",
															"src": "1118:70:8"
														},
														{
															"nativeSrc": "1197:15:8",
															"nodeType": "YulAssignment",
															"src": "1197:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1207:5:8",
																"nodeType": "YulIdentifier",
																"src": "1207:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1197:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:8"
																}
															]
														},
														{
															"nativeSrc": "1221:39:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1221:39:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1245:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1245:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1256:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1256:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1241:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1241:3:8"
																		},
																		"nativeSrc": "1241:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1241:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1235:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1235:5:8"
																},
																"nativeSrc": "1235:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1235:25:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1225:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1225:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1303:16:8",
																"nodeType": "YulBlock",
																"src": "1303:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1312:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1312:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1315:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1315:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1305:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1305:6:8"
																			},
																			"nativeSrc": "1305:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1305:12:8"
																		},
																		"nativeSrc": "1305:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1305:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1275:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1275:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1291:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1291:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1295:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1295:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1287:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1287:3:8"
																				},
																				"nativeSrc": "1287:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1287:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1299:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1299:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1283:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1283:3:8"
																		},
																		"nativeSrc": "1283:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1283:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1272:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:2:8"
																},
																"nativeSrc": "1272:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1272:30:8"
															},
															"nativeSrc": "1269:50:8",
															"nodeType": "YulIf",
															"src": "1269:50:8"
														},
														{
															"nativeSrc": "1328:71:8",
															"nodeType": "YulAssignment",
															"src": "1328:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1371:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1382:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1367:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:8"
																		},
																		"nativeSrc": "1367:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1391:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1391:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1338:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1338:28:8"
																},
																"nativeSrc": "1338:61:8",
																"nodeType": "YulFunctionCall",
																"src": "1338:61:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1328:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:8"
																}
															]
														},
														{
															"nativeSrc": "1408:41:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1408:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1434:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1434:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1445:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1445:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1430:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:8"
																		},
																		"nativeSrc": "1430:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1430:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1424:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1424:5:8"
																},
																"nativeSrc": "1424:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1424:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1412:8:8",
																	"nodeType": "YulTypedName",
																	"src": "1412:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1494:16:8",
																"nodeType": "YulBlock",
																"src": "1494:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1503:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1506:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1496:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:8"
																			},
																			"nativeSrc": "1496:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:8"
																		},
																		"nativeSrc": "1496:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1464:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1464:8:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1482:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1482:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1486:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1486:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1478:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1478:3:8"
																				},
																				"nativeSrc": "1478:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1478:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1490:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1490:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:8"
																		},
																		"nativeSrc": "1474:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1474:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1461:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1461:2:8"
																},
																"nativeSrc": "1461:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1461:32:8"
															},
															"nativeSrc": "1458:52:8",
															"nodeType": "YulIf",
															"src": "1458:52:8"
														},
														{
															"nativeSrc": "1519:73:8",
															"nodeType": "YulAssignment",
															"src": "1519:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1562:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1573:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1558:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:8"
																		},
																		"nativeSrc": "1558:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1584:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1529:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:8"
																},
																"nativeSrc": "1529:63:8",
																"nodeType": "YulFunctionCall",
																"src": "1529:63:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1519:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "874:724:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "959:9:8",
														"nodeType": "YulTypedName",
														"src": "959:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "970:7:8",
														"nodeType": "YulTypedName",
														"src": "970:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "982:6:8",
														"nodeType": "YulTypedName",
														"src": "982:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "990:6:8",
														"nodeType": "YulTypedName",
														"src": "990:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "998:6:8",
														"nodeType": "YulTypedName",
														"src": "998:6:8",
														"type": ""
													}
												],
												"src": "874:724:8"
											},
											{
												"body": {
													"nativeSrc": "1649:248:8",
													"nodeType": "YulBlock",
													"src": "1649:248:8",
													"statements": [
														{
															"nativeSrc": "1659:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1659:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1674:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1674:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1685:3:8",
																						"nodeType": "YulLiteral",
																						"src": "1685:3:8",
																						"type": "",
																						"value": "128"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1690:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1690:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1681:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1681:3:8"
																				},
																				"nativeSrc": "1681:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1681:11:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1677:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1677:3:8"
																		},
																		"nativeSrc": "1677:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1677:19:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1670:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1670:3:8"
																},
																"nativeSrc": "1670:27:8",
																"nodeType": "YulFunctionCall",
																"src": "1670:27:8"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nativeSrc": "1663:3:8",
																	"nodeType": "YulTypedName",
																	"src": "1663:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1729:111:8",
																"nodeType": "YulBlock",
																"src": "1729:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1750:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1750:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1757:3:8",
																							"nodeType": "YulLiteral",
																							"src": "1757:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1762:10:8",
																							"nodeType": "YulLiteral",
																							"src": "1762:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1753:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1753:3:8"
																					},
																					"nativeSrc": "1753:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1753:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1743:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:8"
																			},
																			"nativeSrc": "1743:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1743:31:8"
																		},
																		"nativeSrc": "1743:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1743:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1794:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1794:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1797:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1797:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1787:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:8"
																			},
																			"nativeSrc": "1787:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1787:15:8"
																		},
																		"nativeSrc": "1787:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1787:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1822:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1822:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1825:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1825:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1815:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1815:6:8"
																			},
																			"nativeSrc": "1815:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1815:15:8"
																		},
																		"nativeSrc": "1815:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1815:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nativeSrc": "1716:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1716:3:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1709:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:8"
																},
																"nativeSrc": "1709:11:8",
																"nodeType": "YulFunctionCall",
																"src": "1709:11:8"
															},
															"nativeSrc": "1706:134:8",
															"nodeType": "YulIf",
															"src": "1706:134:8"
														},
														{
															"nativeSrc": "1849:42:8",
															"nodeType": "YulAssignment",
															"src": "1849:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1862:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1862:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1873:3:8",
																								"nodeType": "YulLiteral",
																								"src": "1873:3:8",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1878:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1878:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1869:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:8"
																						},
																						"nativeSrc": "1869:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1869:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1882:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1882:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1865:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1865:3:8"
																				},
																				"nativeSrc": "1865:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1865:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1858:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1858:3:8"
																		},
																		"nativeSrc": "1858:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1858:27:8"
																	},
																	{
																		"name": "y_1",
																		"nativeSrc": "1887:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1887:3:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1854:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1854:3:8"
																},
																"nativeSrc": "1854:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1854:37:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1849:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "1849:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint128",
												"nativeSrc": "1603:294:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1634:1:8",
														"nodeType": "YulTypedName",
														"src": "1634:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1637:1:8",
														"nodeType": "YulTypedName",
														"src": "1637:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "1643:1:8",
														"nodeType": "YulTypedName",
														"src": "1643:1:8",
														"type": ""
													}
												],
												"src": "1603:294:8"
											},
											{
												"body": {
													"nativeSrc": "2003:102:8",
													"nodeType": "YulBlock",
													"src": "2003:102:8",
													"statements": [
														{
															"nativeSrc": "2013:26:8",
															"nodeType": "YulAssignment",
															"src": "2013:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2025:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2025:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2036:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2021:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2021:3:8"
																},
																"nativeSrc": "2021:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2021:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2013:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2013:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2055:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2070:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2070:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2086:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2086:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2091:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2091:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2082:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2082:3:8"
																						},
																						"nativeSrc": "2082:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2082:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2095:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2095:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2078:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2078:3:8"
																				},
																				"nativeSrc": "2078:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2078:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2066:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2066:3:8"
																		},
																		"nativeSrc": "2066:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2066:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2048:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:8"
																},
																"nativeSrc": "2048:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2048:51:8"
															},
															"nativeSrc": "2048:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2048:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1902:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1972:9:8",
														"nodeType": "YulTypedName",
														"src": "1972:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1983:6:8",
														"nodeType": "YulTypedName",
														"src": "1983:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1994:4:8",
														"nodeType": "YulTypedName",
														"src": "1994:4:8",
														"type": ""
													}
												],
												"src": "1902:203:8"
											},
											{
												"body": {
													"nativeSrc": "2249:164:8",
													"nodeType": "YulBlock",
													"src": "2249:164:8",
													"statements": [
														{
															"nativeSrc": "2259:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2259:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2279:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2279:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2273:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2273:5:8"
																},
																"nativeSrc": "2273:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2273:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2263:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2263:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2301:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2310:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2310:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2318:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2318:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2306:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2306:3:8"
																		},
																		"nativeSrc": "2306:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2325:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2325:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2295:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2295:5:8"
																},
																"nativeSrc": "2295:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2295:37:8"
															},
															"nativeSrc": "2295:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2295:37:8"
														},
														{
															"nativeSrc": "2341:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2341:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2351:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2351:3:8"
																},
																"nativeSrc": "2351:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2351:16:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2345:2:8",
																	"nodeType": "YulTypedName",
																	"src": "2345:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2383:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "2383:2:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2387:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2387:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2376:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2376:6:8"
																},
																"nativeSrc": "2376:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2376:13:8"
															},
															"nativeSrc": "2376:13:8",
															"nodeType": "YulExpressionStatement",
															"src": "2376:13:8"
														},
														{
															"nativeSrc": "2398:9:8",
															"nodeType": "YulAssignment",
															"src": "2398:9:8",
															"value": {
																"name": "_1",
																"nativeSrc": "2405:2:8",
																"nodeType": "YulIdentifier",
																"src": "2405:2:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2398:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2110:303:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2225:3:8",
														"nodeType": "YulTypedName",
														"src": "2225:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2230:6:8",
														"nodeType": "YulTypedName",
														"src": "2230:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2241:3:8",
														"nodeType": "YulTypedName",
														"src": "2241:3:8",
														"type": ""
													}
												],
												"src": "2110:303:8"
											},
											{
												"body": {
													"nativeSrc": "2512:203:8",
													"nodeType": "YulBlock",
													"src": "2512:203:8",
													"statements": [
														{
															"nativeSrc": "2522:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2522:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2542:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2542:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2536:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2536:5:8"
																},
																"nativeSrc": "2536:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2536:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2526:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2526:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2557:32:8",
															"nodeType": "YulAssignment",
															"src": "2557:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "2576:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2576:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2583:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2583:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2572:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:8"
																		},
																		"nativeSrc": "2572:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:16:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2566:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:8"
																},
																"nativeSrc": "2566:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2566:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2557:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2557:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2626:83:8",
																"nodeType": "YulBlock",
																"src": "2626:83:8",
																"statements": [
																	{
																		"nativeSrc": "2640:59:8",
																		"nodeType": "YulAssignment",
																		"src": "2640:59:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "2653:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2653:5:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2668:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2668:1:8",
																									"type": "",
																									"value": "3"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2675:4:8",
																											"nodeType": "YulLiteral",
																											"src": "2675:4:8",
																											"type": "",
																											"value": "0x20"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "2681:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "2681:6:8"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "2671:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2671:3:8"
																									},
																									"nativeSrc": "2671:17:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2671:17:8"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nativeSrc": "2664:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2664:3:8"
																							},
																							"nativeSrc": "2664:25:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2664:25:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2695:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2695:1:8",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2691:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2691:3:8"
																							},
																							"nativeSrc": "2691:6:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2691:6:8"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2660:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2660:3:8"
																					},
																					"nativeSrc": "2660:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2660:38:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2649:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2649:3:8"
																			},
																			"nativeSrc": "2649:50:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2649:50:8"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "2640:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2640:5:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2604:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2604:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2612:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2612:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2601:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2601:2:8"
																},
																"nativeSrc": "2601:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2601:16:8"
															},
															"nativeSrc": "2598:111:8",
															"nodeType": "YulIf",
															"src": "2598:111:8"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "2418:297:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2492:5:8",
														"nodeType": "YulTypedName",
														"src": "2492:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2502:5:8",
														"nodeType": "YulTypedName",
														"src": "2502:5:8",
														"type": ""
													}
												],
												"src": "2418:297:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function checked_div_t_uint128(x, y) -> r\n    {\n        let y_1 := and(y, sub(shl(128, 1), 1))\n        if iszero(y_1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(and(x, sub(shl(128, 1), 1)), y_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610180604052425f5542600155348015610017575f5ffd5b50604051611e21380380611e218339810160408190526100369161021a565b82670de0b6b3a764000061004d620151808261029c565b67016345785d8a0000610063620151808261029c565b306080526001600160801b0393841660a05291831660c052821660e05216610100526001600160a01b0381166100b257604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100bb8161012c565b50816040516020016100cd91906102d6565b6040516020818303038152906040526100e5906102ec565b61012052815160208084019190912061016052604051610107918391016102d6565b60405160208183030381529060405261011f906102ec565b6101405250610312915050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126101a0575f5ffd5b81516001600160401b038111156101b9576101b961017d565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101e7576101e761017d565b6040528181528382016020018510156101fe575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f6060848603121561022c575f5ffd5b83516001600160a01b0381168114610242575f5ffd5b60208501519093506001600160401b0381111561025d575f5ffd5b61026986828701610191565b604086015190935090506001600160401b03811115610286575f5ffd5b61029286828701610191565b9150509250925092565b5f6001600160801b038316806102c057634e487b7160e01b5f52601260045260245ffd5b6001600160801b03929092169190910492915050565b5f82518060208501845e5f920191825250919050565b8051602080830151919081101561030c575f198160200360031b1b821691505b50919050565b60805160a05160c05160e05161010051610120516101405161016051611a4b6103d65f395f81816106f401528181610ab80152610f9701525f610d7501525f61078201525f81816104bf01528181610ecb015261143d01525f81816102320152610bf901525f818161075a01528181611322015261139101525f81816105230152610b6601525f81816103b1015281816108a40152818161090101528181610c4701528181610c9e01528181610e3e0152818161116001526112540152611a4b5ff3fe60806040526004361061021d575f3560e01c80637ecebe001161011e578063b3ca7f2a116100a8578063e5aca5991161006d578063e5aca599146106c4578063f172a4ce146106e3578063f2fde38b14610716578063f4d0bd7214610735578063f86329e114610749575f5ffd5b8063b3ca7f2a1461062a578063be45fd621461063e578063d505accf1461065d578063dd62ed3e1461067c578063e46dbd07146106b0575f5ffd5b806394ef2103116100ee57806394ef21031461059a57806395d89b41146105b9578063a9059cbb146105cd578063af4fc206146105ec578063b3841f261461060b575f5ffd5b80637ecebe00146104e157806382e3d8bd146105125780638943ec02146105455780638da5cb5b1461057d575f5ffd5b8063313ce567116101aa5780636263913c1161016f5780636263913c1461042957806370a0823114610448578063715018a6146104795780637b383f181461048f5780637cc27b40146104ae575f5ffd5b8063313ce567146103715780633644e5151461038c57806338d52e0f146103a05780634206abe9146103eb5780636032f6001461040a575f5ffd5b806312958a6b116101f057806312958a6b146102ee57806317b311671461030f57806318160ddd1461032e578063223ecf7e1461034a57806323b872dd14610352575f5ffd5b8063058d15731461022157806306fdde0314610271578063095ea7b31461029257806310ab2d01146102c1575b5f5ffd5b34801561022c575f5ffd5b506102547f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b0390911681526020015b60405180910390f35b34801561027c575f5ffd5b5061028561077c565b60405161026891906115ca565b34801561029d575f5ffd5b506102b16102ac3660046115f0565b6107bf565b6040519015158152602001610268565b3480156102cc575f5ffd5b506102e06102db36600461161a565b61080f565b60405161026892919061169f565b6103016102fc3660046116b9565b610882565b604051908152602001610268565b34801561031a575f5ffd5b506103016103293660046116d4565b61089d565b348015610339575f5ffd5b506805345cdf77eb68f44c54610301565b610301610a01565b34801561035d575f5ffd5b506102b161036c366004611713565b610a10565b34801561037c575f5ffd5b5060405160128152602001610268565b348015610397575f5ffd5b50610301610ab5565b3480156103ab575f5ffd5b506103d37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610268565b3480156103f6575f5ffd5b50610301610405366004611751565b610b57565b348015610415575f5ffd5b50610301610424366004611751565b610bb9565b348015610434575f5ffd5b5061030161044336600461177e565b610bc4565b348015610453575f5ffd5b506103016104623660046116b9565b6387a211a2600c9081525f91909152602090205490565b348015610484575f5ffd5b5061048d610bd7565b005b34801561049a575f5ffd5b506103016104a9366004611751565b610bea565b3480156104b9575f5ffd5b506102547f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ec575f5ffd5b506103016104fb3660046116b9565b6338377508600c9081525f91909152602090205490565b34801561051d575f5ffd5b506102547f000000000000000000000000000000000000000000000000000000000000000081565b348015610550575f5ffd5b5061056461055f36600461161a565b610c3b565b6040516001600160e01b03199091168152602001610268565b348015610588575f5ffd5b506002546001600160a01b03166103d3565b3480156105a5575f5ffd5b506103016105b43660046117a9565b610c93565b3480156105c4575f5ffd5b50610285610d6f565b3480156105d8575f5ffd5b506102b16105e73660046115f0565b610da2565b3480156105f7575f5ffd5b506103016106063660046116d4565b610e06565b348015610616575f5ffd5b506103016106253660046117e5565b610ea8565b348015610635575f5ffd5b50610301610ec8565b348015610649575f5ffd5b506102b161065836600461161a565b610f0b565b348015610668575f5ffd5b5061048d610677366004611823565b610f95565b348015610687575f5ffd5b5061030161069636600461188d565b602052637f5e9f20600c9081525f91909152603490205490565b3480156106bb575f5ffd5b506103015f5481565b3480156106cf575f5ffd5b506103016106de3660046116d4565b61113f565b3480156106ee575f5ffd5b506103017f000000000000000000000000000000000000000000000000000000000000000081565b348015610721575f5ffd5b5061048d6107303660046116b9565b6112dd565b348015610740575f5ffd5b5061030161131f565b348015610754575f5ffd5b506102547f000000000000000000000000000000000000000000000000000000000000000081565b604080517f00000000000000000000000000000000000000000000000000000000000000006020820152606091015b604051602081830303815290604052905090565b5f82602052637f5e9f20600c52335f52816034600c2055815f52602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560205fa35060015b92915050565b5f606061081a611357565b856001600160a01b03168585856040516108359291906118b9565b5f6040518083038185875af1925050503d805f811461086f576040519150601f19603f3d011682016040523d82523d5f602084013e610874565b606091505b509150915094509492505050565b5f61088c34610bea565b90506108988282611384565b919050565b5f5f4790507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b03161461096d5760405163095ea7b360e01b81526001600160a01b038681166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303815f875af1158015610947573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061096b91906118c8565b505b6040516230197b60e91b8152600481018590526001600160a01b03861690636032f600906024016020604051808303815f875af11580156109b0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d491906118e7565b50836109e36104a98347611912565b6109ed9190611912565b91506109f98383611384565b509392505050565b5f610a0b33610882565b905090565b5f8360601b33602052637f5e9f208117600c526034600c208054801915610a4c5780851115610a46576313be252b5f526004601cfd5b84810382555b50506387a211a28117600c526020600c20805480851115610a745763f4d678b85f526004601cfd5b84810382555050835f526020600c208381540181555082602052600c5160601c8160601c5f5160206119f65f395f51905f52602080a3505060019392505050565b5f7f000000000000000000000000000000000000000000000000000000000000000080610aee57610ae461077c565b8051906020012090505b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815260208101929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69082015246606082015230608082015260a09020919050565b5f610b8b826001600160801b037f000000000000000000000000000000000000000000000000000000000000000016611925565b82610b94610ec8565b610b9e9190611938565b610ba8919061194f565b905080471015610898575047919050565b5f6108098233610ea8565b5f610bd0833384610c93565b9392505050565b610bdf611357565b610be85f6113df565b565b5f610c1e826001600160801b037f000000000000000000000000000000000000000000000000000000000000000016611925565b82610c2761131f565b610c319190611938565b610809919061194f565b5f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c70575f5ffd5b610c8285610c7d86610b57565b611430565b506344a1f60160e11b949350505050565b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d505accf3330878635610cd86040890160208a0161196e565b604080516001600160e01b031960e089901b1681526001600160a01b0396871660048201529590941660248601526044850192909252606484015260ff16608483015285013560a4820152606085013560c482015260e4015f604051808303815f87803b158015610d47575f5ffd5b505af1158015610d59573d5f5f3e3d5ffd5b50505050610d678484610ea8565b949350505050565b604080517f00000000000000000000000000000000000000000000000000000000000000006020820152606091016107ab565b5f6387a211a2600c52335f526020600c20805480841115610dca5763f4d678b85f526004601cfd5b83810382555050825f526020600c208281540181555081602052600c5160601c335f5160206119f65f395f51905f52602080a350600192915050565b604051635f22feb160e11b81526001600160a01b03848116600483015260248201849052606060448301525f606483018190529147917f0000000000000000000000000000000000000000000000000000000000000000169063be45fd62906084016020604051808303815f875af1158015610e84573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d491906118c8565b5f610eb283610b57565b9050610ebe33846114d2565b6108098282611430565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160801b031660015442610f019190611912565b610a0b9190611938565b5f610f168585610da2565b506040516344a1f60160e11b81526001600160a01b03861690638943ec0290610f49903390889088908890600401611987565b6020604051808303815f875af1158015610f65573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f8991906119ce565b50600195945050505050565b7f000000000000000000000000000000000000000000000000000000000000000080610fcd57610fc361077c565b8051906020012090505b7fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64286101561100357631a15a3cc5f526004601cfd5b6040518960601b60601c99508860601b60601c985065383775081901600e52895f526020600c2080547f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835284602084015283604084015246606084015230608084015260a08320602e527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528b60208401528a60408401528960608401528060808401528860a084015260c08320604e526042602c205f528760ff16602052866040528560605260208060805f60015afa8c3d51146110eb5763ddafbaef5f526004601cfd5b0190556303faf4f960a51b89176040526034602c20889055888a7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060608501a360405250505f60605250505050505050565b6040516370a0823160e01b81523060048201525f9081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156111a5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111c991906118e7565b9050846001600160a01b031663223ecf7e856040518263ffffffff1660e01b815260040160206040518083038185885af1158015611209573d5f5f3e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061122e91906118e7565b506040516370a0823160e01b815230600482015284906112c79083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611299573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112bd91906118e7565b6104059190611912565b6112d19190611912565b91506109f98383611430565b6112e5611357565b6001600160a01b03811661131357604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61131c816113df565b50565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160801b03165f5442610f019190611912565b6002546001600160a01b03163314610be85760405163118cdaa760e01b815233600482015260240161130a565b6113b76001600160801b037f0000000000000000000000000000000000000000000000000000000000000000168261194f565b5f5f8282546113c69190611925565b909155506113d690508282611533565b5050565b505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6114636001600160801b037f0000000000000000000000000000000000000000000000000000000000000000168261194f565b60015f8282546114739190611925565b90915550506040515f906001600160a01b0384169083908381818185875af1925050503d805f81146114c0576040519150601f19603f3d011682016040523d82523d5f602084013e6114c5565b606091505b50509050806113da575f5ffd5b6387a211a2600c52815f526020600c208054808311156114f95763f4d678b85f526004601cfd5b82900390556805345cdf77eb68f44c805482900390555f8181526001600160a01b0383165f5160206119f65f395f51905f52602083a35050565b6805345cdf77eb68f44c54818101818110156115565763e5cfe9575f526004601cfd5b806805345cdf77eb68f44c5550506387a211a2600c52815f526020600c208181540181555080602052600c5160601c5f5f5160206119f65f395f51905f52602080a35050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610bd0602083018461159c565b6001600160a01b038116811461131c575f5ffd5b5f5f60408385031215611601575f5ffd5b823561160c816115dc565b946020939093013593505050565b5f5f5f5f6060858703121561162d575f5ffd5b8435611638816115dc565b935060208501359250604085013567ffffffffffffffff81111561165a575f5ffd5b8501601f8101871361166a575f5ffd5b803567ffffffffffffffff811115611680575f5ffd5b876020828401011115611691575f5ffd5b949793965060200194505050565b8215158152604060208201525f610d67604083018461159c565b5f602082840312156116c9575f5ffd5b8135610bd0816115dc565b5f5f5f606084860312156116e6575f5ffd5b83356116f1816115dc565b9250602084013591506040840135611708816115dc565b809150509250925092565b5f5f5f60608486031215611725575f5ffd5b8335611730816115dc565b92506020840135611740816115dc565b929592945050506040919091013590565b5f60208284031215611761575f5ffd5b5035919050565b5f60808284031215611778575f5ffd5b50919050565b5f5f60a0838503121561178f575f5ffd5b823591506117a08460208501611768565b90509250929050565b5f5f5f60c084860312156117bb575f5ffd5b8335925060208401356117cd816115dc565b91506117dc8560408601611768565b90509250925092565b5f5f604083850312156117f6575f5ffd5b823591506020830135611808816115dc565b809150509250929050565b803560ff81168114610898575f5ffd5b5f5f5f5f5f5f5f60e0888a031215611839575f5ffd5b8735611844816115dc565b96506020880135611854816115dc565b9550604088013594506060880135935061187060808901611813565b9699959850939692959460a0840135945060c09093013592915050565b5f5f6040838503121561189e575f5ffd5b82356118a9816115dc565b91506020830135611808816115dc565b818382375f9101908152919050565b5f602082840312156118d8575f5ffd5b81518015158114610bd0575f5ffd5b5f602082840312156118f7575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610809576108096118fe565b80820180821115610809576108096118fe565b8082028115828204841417610809576108096118fe565b5f8261196957634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561197e575f5ffd5b610bd082611813565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301375f818301608090810191909152601f909201601f191601019392505050565b5f602082840312156119de575f5ffd5b81516001600160e01b031981168114610bd0575f5ffdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122078fbabb9203af5204125aa17e7f23569188d6f71eaf067a5ee3ce7d06434200d64736f6c634300081c0033",
							"opcodes": "PUSH2 0x180 PUSH1 0x40 MSTORE TIMESTAMP PUSH0 SSTORE TIMESTAMP PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x17 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1E21 CODESIZE SUB DUP1 PUSH2 0x1E21 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x36 SWAP2 PUSH2 0x21A JUMP JUMPDEST DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4D PUSH3 0x15180 DUP3 PUSH2 0x29C JUMP JUMPDEST PUSH8 0x16345785D8A0000 PUSH2 0x63 PUSH3 0x15180 DUP3 PUSH2 0x29C JUMP JUMPDEST ADDRESS PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND PUSH1 0xA0 MSTORE SWAP2 DUP4 AND PUSH1 0xC0 MSTORE DUP3 AND PUSH1 0xE0 MSTORE AND PUSH2 0x100 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB DUP2 PUSH2 0x12C JUMP JUMPDEST POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xE5 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x120 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x160 MSTORE PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 DUP4 SWAP2 ADD PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x11F SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x140 MSTORE POP PUSH2 0x312 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B9 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E7 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x242 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x269 DUP7 DUP3 DUP8 ADD PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x286 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x292 DUP7 DUP3 DUP8 ADD PUSH2 0x191 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP1 PUSH2 0x2C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH0 NOT DUP2 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL DUP3 AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x1A4B PUSH2 0x3D6 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x6F4 ADD MSTORE DUP2 DUP2 PUSH2 0xAB8 ADD MSTORE PUSH2 0xF97 ADD MSTORE PUSH0 PUSH2 0xD75 ADD MSTORE PUSH0 PUSH2 0x782 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x4BF ADD MSTORE DUP2 DUP2 PUSH2 0xECB ADD MSTORE PUSH2 0x143D ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x232 ADD MSTORE PUSH2 0xBF9 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x75A ADD MSTORE DUP2 DUP2 PUSH2 0x1322 ADD MSTORE PUSH2 0x1391 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x523 ADD MSTORE PUSH2 0xB66 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x3B1 ADD MSTORE DUP2 DUP2 PUSH2 0x8A4 ADD MSTORE DUP2 DUP2 PUSH2 0x901 ADD MSTORE DUP2 DUP2 PUSH2 0xC47 ADD MSTORE DUP2 DUP2 PUSH2 0xC9E ADD MSTORE DUP2 DUP2 PUSH2 0xE3E ADD MSTORE DUP2 DUP2 PUSH2 0x1160 ADD MSTORE PUSH2 0x1254 ADD MSTORE PUSH2 0x1A4B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x11E JUMPI DUP1 PUSH4 0xB3CA7F2A GT PUSH2 0xA8 JUMPI DUP1 PUSH4 0xE5ACA599 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xE5ACA599 EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xF172A4CE EQ PUSH2 0x6E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xF4D0BD72 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0xF86329E1 EQ PUSH2 0x749 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB3CA7F2A EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xBE45FD62 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0xE46DBD07 EQ PUSH2 0x6B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x94EF2103 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x94EF2103 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xAF4FC206 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xB3841F26 EQ PUSH2 0x60B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x82E3D8BD EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x8943EC02 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x57D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1AA JUMPI DUP1 PUSH4 0x6263913C GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x6263913C EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x7B383F18 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x7CC27B40 EQ PUSH2 0x4AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x4206ABE9 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x6032F600 EQ PUSH2 0x40A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x12958A6B GT PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x12958A6B EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x17B31167 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x223ECF7E EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x352 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x58D1573 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x10AB2D01 EQ PUSH2 0x2C1 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x254 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP3 SWAP2 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH2 0x301 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH9 0x5345CDF77EB68F44C SLOAD PUSH2 0x301 JUMP JUMPDEST PUSH2 0x301 PUSH2 0xA01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1713 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0xAB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x177E JUMP JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH4 0x87A211A2 PUSH1 0xC SWAP1 DUP2 MSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48D PUSH2 0xBD7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x254 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH4 0x38377508 PUSH1 0xC SWAP1 DUP2 MSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x254 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x564 PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0xD6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0xDA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x606 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0xEA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x635 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0xEC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48D PUSH2 0x677 CALLDATASIZE PUSH1 0x4 PUSH2 0x1823 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC SWAP1 DUP2 MSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x6DE CALLDATASIZE PUSH1 0x4 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x113F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48D PUSH2 0x730 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x12DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x131F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x254 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH0 MSTORE DUP2 PUSH1 0x34 PUSH1 0xC KECCAK256 SSTORE DUP2 PUSH0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH0 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x81A PUSH2 0x1357 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x835 SWAP3 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88C CALLVALUE PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP PUSH2 0x898 DUP3 DUP3 PUSH2 0x1384 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SELFBALANCE SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x30197B PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x6032F600 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D4 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST POP DUP4 PUSH2 0x9E3 PUSH2 0x4A9 DUP4 SELFBALANCE PUSH2 0x1912 JUMP JUMPDEST PUSH2 0x9ED SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F9 DUP4 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA0B CALLER PUSH2 0x882 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x60 SHL CALLER PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 NOT ISZERO PUSH2 0xA4C JUMPI DUP1 DUP6 GT ISZERO PUSH2 0xA46 JUMPI PUSH4 0x13BE252B PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP5 DUP2 SUB DUP3 SSTORE JUMPDEST POP POP PUSH4 0x87A211A2 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP6 GT ISZERO PUSH2 0xA74 JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP5 DUP2 SUB DUP3 SSTORE POP POP DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP4 DUP2 SLOAD ADD DUP2 SSTORE POP DUP3 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR DUP2 PUSH1 0x60 SHR PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F6 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 DUP1 LOG3 POP POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 DUP1 PUSH2 0xAEE JUMPI PUSH2 0xAE4 PUSH2 0x77C JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP1 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 SWAP1 KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB8B DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH32 0x0 AND PUSH2 0x1925 JUMP JUMPDEST DUP3 PUSH2 0xB94 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0xB9E SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x898 JUMPI POP SELFBALANCE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x809 DUP3 CALLER PUSH2 0xEA8 JUMP JUMPDEST PUSH0 PUSH2 0xBD0 DUP4 CALLER DUP5 PUSH2 0xC93 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBDF PUSH2 0x1357 JUMP JUMPDEST PUSH2 0xBE8 PUSH0 PUSH2 0x13DF JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xC1E DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH32 0x0 AND PUSH2 0x1925 JUMP JUMPDEST DUP3 PUSH2 0xC27 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC70 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC82 DUP6 PUSH2 0xC7D DUP7 PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST POP PUSH4 0x44A1F601 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD505ACCF CALLER ADDRESS DUP8 DUP7 CALLDATALOAD PUSH2 0xCD8 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x196E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP10 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0x84 DUP4 ADD MSTORE DUP6 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD47 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD59 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD67 DUP5 DUP5 PUSH2 0xEA8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 ADD PUSH2 0x7AB JUMP JUMPDEST PUSH0 PUSH4 0x87A211A2 PUSH1 0xC MSTORE CALLER PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0xDCA JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP3 SSTORE POP POP DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP3 DUP2 SLOAD ADD DUP2 SSTORE POP DUP2 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR CALLER PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F6 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 DUP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5F22FEB1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH0 PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SELFBALANCE SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xBE45FD62 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE84 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D4 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST PUSH0 PUSH2 0xEB2 DUP4 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP PUSH2 0xEBE CALLER DUP5 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x809 DUP3 DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0xF01 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH0 PUSH2 0xF16 DUP6 DUP6 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x44A1F601 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x8943EC02 SWAP1 PUSH2 0xF49 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF65 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x19CE JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP1 PUSH2 0xFCD JUMPI PUSH2 0xFC3 PUSH2 0x77C JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 TIMESTAMP DUP7 LT ISZERO PUSH2 0x1003 JUMPI PUSH4 0x1A15A3CC PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x40 MLOAD DUP10 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP10 POP DUP9 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP9 POP PUSH6 0x383775081901 PUSH1 0xE MSTORE DUP10 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP4 MSTORE DUP5 PUSH1 0x20 DUP5 ADD MSTORE DUP4 PUSH1 0x40 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP5 ADD MSTORE ADDRESS PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 KECCAK256 PUSH1 0x2E MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP4 MSTORE DUP12 PUSH1 0x20 DUP5 ADD MSTORE DUP11 PUSH1 0x40 DUP5 ADD MSTORE DUP10 PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MSTORE DUP9 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 KECCAK256 PUSH1 0x4E MSTORE PUSH1 0x42 PUSH1 0x2C KECCAK256 PUSH0 MSTORE DUP8 PUSH1 0xFF AND PUSH1 0x20 MSTORE DUP7 PUSH1 0x40 MSTORE DUP6 PUSH1 0x60 MSTORE PUSH1 0x20 DUP1 PUSH1 0x80 PUSH0 PUSH1 0x1 GAS STATICCALL DUP13 RETURNDATASIZE MLOAD EQ PUSH2 0x10EB JUMPI PUSH4 0xDDAFBAEF PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST ADD SWAP1 SSTORE PUSH4 0x3FAF4F9 PUSH1 0xA5 SHL DUP10 OR PUSH1 0x40 MSTORE PUSH1 0x34 PUSH1 0x2C KECCAK256 DUP9 SWAP1 SSTORE DUP9 DUP11 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x60 DUP6 ADD LOG3 PUSH1 0x40 MSTORE POP POP PUSH0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C9 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x223ECF7E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1209 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP1 PUSH2 0x12C7 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1299 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12BD SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0x12D1 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F9 DUP4 DUP4 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x12E5 PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1313 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x13DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH0 SLOAD TIMESTAMP PUSH2 0xF01 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x130A JUMP JUMPDEST PUSH2 0x13B7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH32 0x0 AND DUP3 PUSH2 0x194F JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13C6 SWAP2 SWAP1 PUSH2 0x1925 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x13D6 SWAP1 POP DUP3 DUP3 PUSH2 0x1533 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1463 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH32 0x0 AND DUP3 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1473 SWAP2 SWAP1 PUSH2 0x1925 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP4 GT ISZERO PUSH2 0x14F9 JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP3 SWAP1 SUB SWAP1 SSTORE PUSH9 0x5345CDF77EB68F44C DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F6 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 DUP4 LOG3 POP POP JUMP JUMPDEST PUSH9 0x5345CDF77EB68F44C SLOAD DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0x1556 JUMPI PUSH4 0xE5CFE957 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP1 PUSH9 0x5345CDF77EB68F44C SSTORE POP POP PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP2 DUP2 SLOAD ADD DUP2 SSTORE POP DUP1 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F6 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 DUP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xBD0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x131C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1601 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x160C DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x162D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1638 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x166A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1680 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1691 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xD67 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBD0 DUP2 PUSH2 0x15DC JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x16F1 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1708 DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1725 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1730 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1740 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1778 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xA0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x17A0 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x17CD DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP2 POP PUSH2 0x17DC DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1808 DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x898 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1839 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1844 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1854 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1870 PUSH1 0x80 DUP10 ADD PUSH2 0x1813 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x189E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18A9 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1808 DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBD0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x18FE JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x18FE JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x18FE JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1969 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBD0 DUP3 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBD0 JUMPI PUSH0 PUSH0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xFBABB9203AF5204125AA17E7F23569188D6F71EAF067A5EE3C 0xE7 0xD0 PUSH5 0x34200D6473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "1822:1816:6:-:0;;;405:15:5;374:46;;461:15;427:49;;2106:266:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2185:5;1617:7;1669:27;1687:8;1617:7;1669:27;:::i;:::-;1735:8;1789:28;1808:8;1735;1789:28;:::i;:::-;2205:4;442:14:7;;-1:-1:-1;;;;;666:40:5;;;;;717:36;;;;;764:42;;;;817:38;;;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2048:51:8;2021:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;2255:5:6::2;2238:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;2230:32;;;:::i;:::-;2222:40;::::0;2284:23;;::::2;::::0;;::::2;::::0;;;;2273:34:::2;::::0;2338:25:::2;::::0;::::2;::::0;2355:7;;2338:25:::2;;:::i;:::-;;;;;;;;;;;;;2330:34;;;:::i;:::-;2320:44;::::0;-1:-1:-1;1822:1816:6;;-1:-1:-1;;1822:1816:6;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:8;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:8;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:8;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:8;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:8:o;874:724::-;982:6;990;998;1051:2;1039:9;1030:7;1026:23;1022:32;1019:52;;;1067:1;1064;1057:12;1019:52;1093:16;;-1:-1:-1;;;;;1138:31:8;;1128:42;;1118:70;;1184:1;1181;1174:12;1118:70;1256:2;1241:18;;1235:25;1207:5;;-1:-1:-1;;;;;;1272:30:8;;1269:50;;;1315:1;1312;1305:12;1269:50;1338:61;1391:7;1382:6;1371:9;1367:22;1338:61;:::i;:::-;1445:2;1430:18;;1424:25;1328:71;;-1:-1:-1;1424:25:8;-1:-1:-1;;;;;;1461:32:8;;1458:52;;;1506:1;1503;1496:12;1458:52;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;874:724;;;;;:::o;1603:294::-;1643:1;-1:-1:-1;;;;;1670:27:8;;;1706:134;;1762:10;1757:3;1753:20;1750:1;1743:31;1797:4;1794:1;1787:15;1825:4;1822:1;1815:15;1706:134;-1:-1:-1;;;;;1858:27:8;;;;1854:37;;;;;1603:294;-1:-1:-1;;1603:294:8:o;2110:303::-;2241:3;2279:6;2273:13;2325:6;2318:4;2310:6;2306:17;2301:3;2295:37;2387:1;2351:16;;2376:13;;;-1:-1:-1;2351:16:8;2110:303;-1:-1:-1;2110:303:8:o;2418:297::-;2536:12;;2583:4;2572:16;;;2566:23;;2536:12;2601:16;;2598:111;;;2695:1;2691:6;2681;2675:4;2671:17;2668:1;2664:25;2660:38;2653:5;2649:50;2640:59;;2598:111;;2418:297;;;:::o;:::-;1822:1816:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_591": {
									"entryPoint": 2741,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_afterTokenTransfer_731": {
									"entryPoint": null,
									"id": 731,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_720": {
									"entryPoint": 5082,
									"id": 720,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_647": {
									"entryPoint": 5330,
									"id": 647,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4951,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_constantNameHash_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_givePermit2InfiniteAllowance_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_619": {
									"entryPoint": 5427,
									"id": 619,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferERC20sBought_1110": {
									"entryPoint": 4996,
									"id": 1110,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferNativesBought_920": {
									"entryPoint": 5168,
									"id": 920,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5087,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_versionHash_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@allowance_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_406": {
									"entryPoint": 1983,
									"id": 406,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@asset_1155": {
									"entryPoint": null,
									"id": 1155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@customCall_1071": {
									"entryPoint": 2063,
									"id": 1071,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@decimals_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@erc20BuyableRate_786": {
									"entryPoint": null,
									"id": 786,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20BuyableTime_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20SellInhibitor_784": {
									"entryPoint": null,
									"id": 784,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20ToNativePrice_892": {
									"entryPoint": 2903,
									"id": 892,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@erc20sBuyable_854": {
									"entryPoint": 4895,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nameHash_964": {
									"entryPoint": null,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_1033": {
									"entryPoint": 1916,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nativeBuyableRate_790": {
									"entryPoint": null,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nativeSellInhibitor_788": {
									"entryPoint": null,
									"id": 788,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nativeToERC20Price_1090": {
									"entryPoint": 3050,
									"id": 1090,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nativesBuyable_840": {
									"entryPoint": 3784,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_504": {
									"entryPoint": null,
									"id": 504,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_556": {
									"entryPoint": 3989,
									"id": 556,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3031,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapERC20ToNative_1138": {
									"entryPoint": 3752,
									"id": 1138,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapERC20ToNative_1268": {
									"entryPoint": 3001,
									"id": 1268,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapERC20ToNative_1317": {
									"entryPoint": 3219,
									"id": 1317,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@swapERC20ToNative_1335": {
									"entryPoint": 3012,
									"id": 1335,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapERC20ToNative_1453": {
									"entryPoint": 2205,
									"id": 1453,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@swapERC223ToNative_1508": {
									"entryPoint": 3590,
									"id": 1508,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@swapNativeToERC20_1223": {
									"entryPoint": 2178,
									"id": 1223,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapNativeToERC20_1279": {
									"entryPoint": 2561,
									"id": 1279,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@swapNativeToERC20_1386": {
									"entryPoint": 4415,
									"id": 1386,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_1048": {
									"entryPoint": 3439,
									"id": 1048,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenReceived_1254": {
									"entryPoint": 3131,
									"id": 1254,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@totalSupply_351": {
									"entryPoint": null,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_468": {
									"entryPoint": 2576,
									"id": 468,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4829,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_434": {
									"entryPoint": 3490,
									"id": 434,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_776": {
									"entryPoint": 3851,
									"id": 776,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_struct_Permit2Sig_calldata": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 5658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_SwapAbstract_$1509t_uint256t_address": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_struct$_Permit2Sig_$1152_calldata_ptr": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_struct$_Permit2Sig_$1152_calldata_ptr": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 6163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$741__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12615:8",
										"nodeType": "YulBlock",
										"src": "0:12615:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:117:8",
													"nodeType": "YulBlock",
													"src": "115:117:8",
													"statements": [
														{
															"nativeSrc": "125:26:8",
															"nodeType": "YulAssignment",
															"src": "125:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:8",
																		"nodeType": "YulLiteral",
																		"src": "148:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:8"
																},
																"nativeSrc": "133:18:8",
																"nodeType": "YulFunctionCall",
																"src": "133:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "190:34:8",
																				"nodeType": "YulLiteral",
																				"src": "190:34:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:8"
																		},
																		"nativeSrc": "178:47:8",
																		"nodeType": "YulFunctionCall",
																		"src": "178:47:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:8"
																},
																"nativeSrc": "160:66:8",
																"nodeType": "YulFunctionCall",
																"src": "160:66:8"
															},
															"nativeSrc": "160:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "160:66:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "14:218:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:8",
														"nodeType": "YulTypedName",
														"src": "84:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:8",
														"nodeType": "YulTypedName",
														"src": "95:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:8",
														"nodeType": "YulTypedName",
														"src": "106:4:8",
														"type": ""
													}
												],
												"src": "14:218:8"
											},
											{
												"body": {
													"nativeSrc": "287:239:8",
													"nodeType": "YulBlock",
													"src": "287:239:8",
													"statements": [
														{
															"nativeSrc": "297:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "297:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "317:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "317:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "311:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "311:5:8"
																},
																"nativeSrc": "311:12:8",
																"nodeType": "YulFunctionCall",
																"src": "311:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "301:6:8",
																	"nodeType": "YulTypedName",
																	"src": "301:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "339:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "339:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "344:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "344:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "332:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "332:6:8"
																},
																"nativeSrc": "332:19:8",
																"nodeType": "YulFunctionCall",
																"src": "332:19:8"
															},
															"nativeSrc": "332:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "332:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "370:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "370:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "375:4:8",
																				"nodeType": "YulLiteral",
																				"src": "375:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "366:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "366:3:8"
																		},
																		"nativeSrc": "366:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "366:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "386:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "386:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "393:4:8",
																				"nodeType": "YulLiteral",
																				"src": "393:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "382:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:8"
																		},
																		"nativeSrc": "382:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "382:16:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "400:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "400:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:47:8",
																"nodeType": "YulFunctionCall",
																"src": "360:47:8"
															},
															"nativeSrc": "360:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:47:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "431:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "431:3:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "436:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "436:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "427:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "427:3:8"
																				},
																				"nativeSrc": "427:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "427:16:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "445:4:8",
																				"nodeType": "YulLiteral",
																				"src": "445:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "423:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "423:3:8"
																		},
																		"nativeSrc": "423:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "423:27:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "452:1:8",
																		"nodeType": "YulLiteral",
																		"src": "452:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "416:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:8"
																},
																"nativeSrc": "416:38:8",
																"nodeType": "YulFunctionCall",
																"src": "416:38:8"
															},
															"nativeSrc": "416:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "416:38:8"
														},
														{
															"nativeSrc": "463:57:8",
															"nodeType": "YulAssignment",
															"src": "463:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "478:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "478:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "491:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "491:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "499:2:8",
																								"nodeType": "YulLiteral",
																								"src": "499:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "487:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "487:3:8"
																						},
																						"nativeSrc": "487:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "487:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "508:2:8",
																								"nodeType": "YulLiteral",
																								"src": "508:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "504:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:8"
																						},
																						"nativeSrc": "504:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "504:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "483:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "483:3:8"
																				},
																				"nativeSrc": "483:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "483:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "474:3:8"
																		},
																		"nativeSrc": "474:39:8",
																		"nodeType": "YulFunctionCall",
																		"src": "474:39:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "515:4:8",
																		"nodeType": "YulLiteral",
																		"src": "515:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "470:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "470:3:8"
																},
																"nativeSrc": "470:50:8",
																"nodeType": "YulFunctionCall",
																"src": "470:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "463:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "463:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "237:289:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "264:5:8",
														"nodeType": "YulTypedName",
														"src": "264:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "271:3:8",
														"nodeType": "YulTypedName",
														"src": "271:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "279:3:8",
														"nodeType": "YulTypedName",
														"src": "279:3:8",
														"type": ""
													}
												],
												"src": "237:289:8"
											},
											{
												"body": {
													"nativeSrc": "652:99:8",
													"nodeType": "YulBlock",
													"src": "652:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "669:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "669:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "680:2:8",
																		"nodeType": "YulLiteral",
																		"src": "680:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "662:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "662:6:8"
																},
																"nativeSrc": "662:21:8",
																"nodeType": "YulFunctionCall",
																"src": "662:21:8"
															},
															"nativeSrc": "662:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "662:21:8"
														},
														{
															"nativeSrc": "692:53:8",
															"nodeType": "YulAssignment",
															"src": "692:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "718:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "718:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "730:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "730:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:2:8",
																				"nodeType": "YulLiteral",
																				"src": "741:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "726:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:8"
																		},
																		"nativeSrc": "726:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "726:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "700:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "700:17:8"
																},
																"nativeSrc": "700:45:8",
																"nodeType": "YulFunctionCall",
																"src": "700:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "692:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "692:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "531:220:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "621:9:8",
														"nodeType": "YulTypedName",
														"src": "621:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "632:6:8",
														"nodeType": "YulTypedName",
														"src": "632:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "643:4:8",
														"nodeType": "YulTypedName",
														"src": "643:4:8",
														"type": ""
													}
												],
												"src": "531:220:8"
											},
											{
												"body": {
													"nativeSrc": "801:86:8",
													"nodeType": "YulBlock",
													"src": "801:86:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "865:16:8",
																"nodeType": "YulBlock",
																"src": "865:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "874:1:8",
																					"nodeType": "YulLiteral",
																					"src": "874:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "877:1:8",
																					"nodeType": "YulLiteral",
																					"src": "877:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "867:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "867:6:8"
																			},
																			"nativeSrc": "867:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "867:12:8"
																		},
																		"nativeSrc": "867:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "867:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "824:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "824:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "835:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "835:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "850:3:8",
																										"nodeType": "YulLiteral",
																										"src": "850:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "855:1:8",
																										"nodeType": "YulLiteral",
																										"src": "855:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "846:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "846:3:8"
																								},
																								"nativeSrc": "846:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "846:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "859:1:8",
																								"nodeType": "YulLiteral",
																								"src": "859:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "842:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "842:3:8"
																						},
																						"nativeSrc": "842:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "842:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "831:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "831:3:8"
																				},
																				"nativeSrc": "831:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "831:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "821:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "821:2:8"
																		},
																		"nativeSrc": "821:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "821:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "814:6:8"
																},
																"nativeSrc": "814:50:8",
																"nodeType": "YulFunctionCall",
																"src": "814:50:8"
															},
															"nativeSrc": "811:70:8",
															"nodeType": "YulIf",
															"src": "811:70:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "756:131:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "790:5:8",
														"nodeType": "YulTypedName",
														"src": "790:5:8",
														"type": ""
													}
												],
												"src": "756:131:8"
											},
											{
												"body": {
													"nativeSrc": "979:280:8",
													"nodeType": "YulBlock",
													"src": "979:280:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1025:16:8",
																"nodeType": "YulBlock",
																"src": "1025:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1034:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1034:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1027:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1027:6:8"
																			},
																			"nativeSrc": "1027:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1027:12:8"
																		},
																		"nativeSrc": "1027:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1027:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1000:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1000:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1009:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1009:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "996:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "996:3:8"
																		},
																		"nativeSrc": "996:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "996:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1021:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1021:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "992:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "992:3:8"
																},
																"nativeSrc": "992:32:8",
																"nodeType": "YulFunctionCall",
																"src": "992:32:8"
															},
															"nativeSrc": "989:52:8",
															"nodeType": "YulIf",
															"src": "989:52:8"
														},
														{
															"nativeSrc": "1050:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1050:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1076:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1076:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1063:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1063:12:8"
																},
																"nativeSrc": "1063:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1063:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1054:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1054:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1120:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1120:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1095:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "1095:24:8"
																},
																"nativeSrc": "1095:31:8",
																"nodeType": "YulFunctionCall",
																"src": "1095:31:8"
															},
															"nativeSrc": "1095:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "1095:31:8"
														},
														{
															"nativeSrc": "1135:15:8",
															"nodeType": "YulAssignment",
															"src": "1135:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1145:5:8",
																"nodeType": "YulIdentifier",
																"src": "1145:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1135:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:8"
																}
															]
														},
														{
															"nativeSrc": "1159:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1159:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1174:1:8",
																"nodeType": "YulLiteral",
																"src": "1174:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1163:7:8",
																	"nodeType": "YulTypedName",
																	"src": "1163:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1184:43:8",
															"nodeType": "YulAssignment",
															"src": "1184:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1212:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1212:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1223:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1223:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1208:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1208:3:8"
																		},
																		"nativeSrc": "1208:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1208:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1195:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1195:12:8"
																},
																"nativeSrc": "1195:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1195:32:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1184:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1184:7:8"
																}
															]
														},
														{
															"nativeSrc": "1236:17:8",
															"nodeType": "YulAssignment",
															"src": "1236:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "1246:7:8",
																"nodeType": "YulIdentifier",
																"src": "1246:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1236:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "892:367:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "937:9:8",
														"nodeType": "YulTypedName",
														"src": "937:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "948:7:8",
														"nodeType": "YulTypedName",
														"src": "948:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "960:6:8",
														"nodeType": "YulTypedName",
														"src": "960:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "968:6:8",
														"nodeType": "YulTypedName",
														"src": "968:6:8",
														"type": ""
													}
												],
												"src": "892:367:8"
											},
											{
												"body": {
													"nativeSrc": "1359:92:8",
													"nodeType": "YulBlock",
													"src": "1359:92:8",
													"statements": [
														{
															"nativeSrc": "1369:26:8",
															"nodeType": "YulAssignment",
															"src": "1369:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1381:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1381:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1392:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1392:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1377:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:8"
																},
																"nativeSrc": "1377:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1377:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1369:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1369:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1411:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1411:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1436:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1436:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1429:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1429:6:8"
																				},
																				"nativeSrc": "1429:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1429:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1422:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1422:6:8"
																		},
																		"nativeSrc": "1422:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1422:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1404:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1404:6:8"
																},
																"nativeSrc": "1404:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1404:41:8"
															},
															"nativeSrc": "1404:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1404:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1264:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1328:9:8",
														"nodeType": "YulTypedName",
														"src": "1328:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1339:6:8",
														"nodeType": "YulTypedName",
														"src": "1339:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1350:4:8",
														"nodeType": "YulTypedName",
														"src": "1350:4:8",
														"type": ""
													}
												],
												"src": "1264:187:8"
											},
											{
												"body": {
													"nativeSrc": "1579:718:8",
													"nodeType": "YulBlock",
													"src": "1579:718:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1625:16:8",
																"nodeType": "YulBlock",
																"src": "1625:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1634:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1634:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1637:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1627:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1627:6:8"
																			},
																			"nativeSrc": "1627:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1627:12:8"
																		},
																		"nativeSrc": "1627:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1627:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1600:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1609:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1596:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1596:3:8"
																		},
																		"nativeSrc": "1596:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1596:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1621:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1621:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1592:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:8"
																},
																"nativeSrc": "1592:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1592:32:8"
															},
															"nativeSrc": "1589:52:8",
															"nodeType": "YulIf",
															"src": "1589:52:8"
														},
														{
															"nativeSrc": "1650:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1650:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1676:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1676:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1663:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1663:12:8"
																},
																"nativeSrc": "1663:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1663:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1654:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1654:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1720:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1720:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1695:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "1695:24:8"
																},
																"nativeSrc": "1695:31:8",
																"nodeType": "YulFunctionCall",
																"src": "1695:31:8"
															},
															"nativeSrc": "1695:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "1695:31:8"
														},
														{
															"nativeSrc": "1735:15:8",
															"nodeType": "YulAssignment",
															"src": "1735:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1745:5:8",
																"nodeType": "YulIdentifier",
																"src": "1745:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1735:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1735:6:8"
																}
															]
														},
														{
															"nativeSrc": "1759:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1759:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1774:1:8",
																"nodeType": "YulLiteral",
																"src": "1774:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1763:7:8",
																	"nodeType": "YulTypedName",
																	"src": "1763:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1784:43:8",
															"nodeType": "YulAssignment",
															"src": "1784:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1812:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1812:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1823:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1823:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:8"
																		},
																		"nativeSrc": "1808:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1795:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1795:12:8"
																},
																"nativeSrc": "1795:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1795:32:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1784:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1784:7:8"
																}
															]
														},
														{
															"nativeSrc": "1836:17:8",
															"nodeType": "YulAssignment",
															"src": "1836:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "1846:7:8",
																"nodeType": "YulIdentifier",
																"src": "1846:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1836:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:8"
																}
															]
														},
														{
															"nativeSrc": "1862:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1862:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1893:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1893:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1904:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1904:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1889:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1889:3:8"
																		},
																		"nativeSrc": "1889:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1889:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1876:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1876:12:8"
																},
																"nativeSrc": "1876:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1876:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1866:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1866:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1951:16:8",
																"nodeType": "YulBlock",
																"src": "1951:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1960:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1960:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1963:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1963:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1953:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:8"
																			},
																			"nativeSrc": "1953:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:12:8"
																		},
																		"nativeSrc": "1953:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1923:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1931:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1931:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1920:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1920:2:8"
																},
																"nativeSrc": "1920:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1920:30:8"
															},
															"nativeSrc": "1917:50:8",
															"nodeType": "YulIf",
															"src": "1917:50:8"
														},
														{
															"nativeSrc": "1976:32:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1976:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1990:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1990:9:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2001:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2001:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1986:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1986:3:8"
																},
																"nativeSrc": "1986:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1986:22:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1980:2:8",
																	"nodeType": "YulTypedName",
																	"src": "1980:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2056:16:8",
																"nodeType": "YulBlock",
																"src": "2056:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2065:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2068:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2068:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2058:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2058:6:8"
																			},
																			"nativeSrc": "2058:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2058:12:8"
																		},
																		"nativeSrc": "2058:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2035:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2035:2:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2039:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2039:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2031:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2031:3:8"
																				},
																				"nativeSrc": "2031:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2031:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2046:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2046:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2027:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2027:3:8"
																		},
																		"nativeSrc": "2027:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2027:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2020:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:8"
																},
																"nativeSrc": "2020:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2020:35:8"
															},
															"nativeSrc": "2017:55:8",
															"nodeType": "YulIf",
															"src": "2017:55:8"
														},
														{
															"nativeSrc": "2081:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2108:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "2108:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2095:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2095:12:8"
																},
																"nativeSrc": "2095:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2095:16:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2085:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2085:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2154:16:8",
																"nodeType": "YulBlock",
																"src": "2154:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2163:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2163:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2166:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2166:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2156:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2156:6:8"
																			},
																			"nativeSrc": "2156:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2156:12:8"
																		},
																		"nativeSrc": "2156:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2156:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2126:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2134:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2123:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2123:2:8"
																},
																"nativeSrc": "2123:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2123:30:8"
															},
															"nativeSrc": "2120:50:8",
															"nodeType": "YulIf",
															"src": "2120:50:8"
														},
														{
															"body": {
																"nativeSrc": "2220:16:8",
																"nodeType": "YulBlock",
																"src": "2220:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2229:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2229:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2232:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2232:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2222:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2222:6:8"
																			},
																			"nativeSrc": "2222:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2222:12:8"
																		},
																		"nativeSrc": "2222:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2222:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2193:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2193:2:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2197:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2197:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2189:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2189:3:8"
																				},
																				"nativeSrc": "2189:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2189:15:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2206:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2206:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2185:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:8"
																		},
																		"nativeSrc": "2185:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2185:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2211:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2211:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2182:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2182:2:8"
																},
																"nativeSrc": "2182:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2182:37:8"
															},
															"nativeSrc": "2179:57:8",
															"nodeType": "YulIf",
															"src": "2179:57:8"
														},
														{
															"nativeSrc": "2245:21:8",
															"nodeType": "YulAssignment",
															"src": "2245:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2259:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "2259:2:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2263:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2263:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2255:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2255:3:8"
																},
																"nativeSrc": "2255:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2255:11:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2245:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2245:6:8"
																}
															]
														},
														{
															"nativeSrc": "2275:16:8",
															"nodeType": "YulAssignment",
															"src": "2275:16:8",
															"value": {
																"name": "length",
																"nativeSrc": "2285:6:8",
																"nodeType": "YulIdentifier",
																"src": "2285:6:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2275:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "1456:841:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1521:9:8",
														"nodeType": "YulTypedName",
														"src": "1521:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1532:7:8",
														"nodeType": "YulTypedName",
														"src": "1532:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1544:6:8",
														"nodeType": "YulTypedName",
														"src": "1544:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1552:6:8",
														"nodeType": "YulTypedName",
														"src": "1552:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1560:6:8",
														"nodeType": "YulTypedName",
														"src": "1560:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1568:6:8",
														"nodeType": "YulTypedName",
														"src": "1568:6:8",
														"type": ""
													}
												],
												"src": "1456:841:8"
											},
											{
												"body": {
													"nativeSrc": "2443:158:8",
													"nodeType": "YulBlock",
													"src": "2443:158:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2460:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2460:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2485:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2485:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2478:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2478:6:8"
																				},
																				"nativeSrc": "2478:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2478:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2471:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2471:6:8"
																		},
																		"nativeSrc": "2471:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2471:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2453:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2453:6:8"
																},
																"nativeSrc": "2453:41:8",
																"nodeType": "YulFunctionCall",
																"src": "2453:41:8"
															},
															"nativeSrc": "2453:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "2453:41:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2514:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2514:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2525:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2525:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2510:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2510:3:8"
																		},
																		"nativeSrc": "2510:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2510:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2530:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2530:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2503:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2503:6:8"
																},
																"nativeSrc": "2503:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2503:30:8"
															},
															"nativeSrc": "2503:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "2503:30:8"
														},
														{
															"nativeSrc": "2542:53:8",
															"nodeType": "YulAssignment",
															"src": "2542:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2568:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2568:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2580:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2580:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2591:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2591:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2576:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:8"
																		},
																		"nativeSrc": "2576:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2550:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2550:17:8"
																},
																"nativeSrc": "2550:45:8",
																"nodeType": "YulFunctionCall",
																"src": "2550:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2542:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2542:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "2302:299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2404:9:8",
														"nodeType": "YulTypedName",
														"src": "2404:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2415:6:8",
														"nodeType": "YulTypedName",
														"src": "2415:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2423:6:8",
														"nodeType": "YulTypedName",
														"src": "2423:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2434:4:8",
														"nodeType": "YulTypedName",
														"src": "2434:4:8",
														"type": ""
													}
												],
												"src": "2302:299:8"
											},
											{
												"body": {
													"nativeSrc": "2676:177:8",
													"nodeType": "YulBlock",
													"src": "2676:177:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2722:16:8",
																"nodeType": "YulBlock",
																"src": "2722:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2731:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2731:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2734:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2734:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2724:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2724:6:8"
																			},
																			"nativeSrc": "2724:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2724:12:8"
																		},
																		"nativeSrc": "2724:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2724:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2697:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2697:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2706:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2706:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2693:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2693:3:8"
																		},
																		"nativeSrc": "2693:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2693:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2718:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2718:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2689:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:8"
																},
																"nativeSrc": "2689:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2689:32:8"
															},
															"nativeSrc": "2686:52:8",
															"nodeType": "YulIf",
															"src": "2686:52:8"
														},
														{
															"nativeSrc": "2747:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2747:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2773:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2773:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2760:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2760:12:8"
																},
																"nativeSrc": "2760:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2760:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2751:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2751:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2817:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2817:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2792:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "2792:24:8"
																},
																"nativeSrc": "2792:31:8",
																"nodeType": "YulFunctionCall",
																"src": "2792:31:8"
															},
															"nativeSrc": "2792:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "2792:31:8"
														},
														{
															"nativeSrc": "2832:15:8",
															"nodeType": "YulAssignment",
															"src": "2832:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2842:5:8",
																"nodeType": "YulIdentifier",
																"src": "2842:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2832:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2606:247:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2642:9:8",
														"nodeType": "YulTypedName",
														"src": "2642:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2653:7:8",
														"nodeType": "YulTypedName",
														"src": "2653:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2665:6:8",
														"nodeType": "YulTypedName",
														"src": "2665:6:8",
														"type": ""
													}
												],
												"src": "2606:247:8"
											},
											{
												"body": {
													"nativeSrc": "2959:76:8",
													"nodeType": "YulBlock",
													"src": "2959:76:8",
													"statements": [
														{
															"nativeSrc": "2969:26:8",
															"nodeType": "YulAssignment",
															"src": "2969:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2981:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2992:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2977:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2977:3:8"
																},
																"nativeSrc": "2977:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2977:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2969:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2969:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3011:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3011:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3022:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3022:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3004:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:8"
																},
																"nativeSrc": "3004:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3004:25:8"
															},
															"nativeSrc": "3004:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "3004:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2858:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2928:9:8",
														"nodeType": "YulTypedName",
														"src": "2928:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2939:6:8",
														"nodeType": "YulTypedName",
														"src": "2939:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2950:4:8",
														"nodeType": "YulTypedName",
														"src": "2950:4:8",
														"type": ""
													}
												],
												"src": "2858:177:8"
											},
											{
												"body": {
													"nativeSrc": "3165:404:8",
													"nodeType": "YulBlock",
													"src": "3165:404:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3211:16:8",
																"nodeType": "YulBlock",
																"src": "3211:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3220:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3220:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3223:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3223:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3213:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3213:6:8"
																			},
																			"nativeSrc": "3213:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3213:12:8"
																		},
																		"nativeSrc": "3213:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3213:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3186:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3186:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3195:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3195:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3182:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:8"
																		},
																		"nativeSrc": "3182:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3207:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3207:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3178:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3178:3:8"
																},
																"nativeSrc": "3178:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3178:32:8"
															},
															"nativeSrc": "3175:52:8",
															"nodeType": "YulIf",
															"src": "3175:52:8"
														},
														{
															"nativeSrc": "3236:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3236:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3262:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3262:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3249:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3249:12:8"
																},
																"nativeSrc": "3249:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3249:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3240:5:8",
																	"nodeType": "YulTypedName",
																	"src": "3240:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3306:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3306:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3281:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "3281:24:8"
																},
																"nativeSrc": "3281:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3281:31:8"
															},
															"nativeSrc": "3281:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3281:31:8"
														},
														{
															"nativeSrc": "3321:15:8",
															"nodeType": "YulAssignment",
															"src": "3321:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "3331:5:8",
																"nodeType": "YulIdentifier",
																"src": "3331:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3321:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3321:6:8"
																}
															]
														},
														{
															"nativeSrc": "3345:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3345:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3360:1:8",
																"nodeType": "YulLiteral",
																"src": "3360:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3349:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3349:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3370:43:8",
															"nodeType": "YulAssignment",
															"src": "3370:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3398:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3409:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3409:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3394:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:8"
																		},
																		"nativeSrc": "3394:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3381:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3381:12:8"
																},
																"nativeSrc": "3381:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3381:32:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3370:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3370:7:8"
																}
															]
														},
														{
															"nativeSrc": "3422:17:8",
															"nodeType": "YulAssignment",
															"src": "3422:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "3432:7:8",
																"nodeType": "YulIdentifier",
																"src": "3432:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3422:6:8"
																}
															]
														},
														{
															"nativeSrc": "3448:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3448:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3480:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3480:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3491:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3491:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3476:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3476:3:8"
																		},
																		"nativeSrc": "3476:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3476:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3463:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3463:12:8"
																},
																"nativeSrc": "3463:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3463:32:8"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3452:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3452:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "3529:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3529:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3504:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "3504:24:8"
																},
																"nativeSrc": "3504:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3504:33:8"
															},
															"nativeSrc": "3504:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3504:33:8"
														},
														{
															"nativeSrc": "3546:17:8",
															"nodeType": "YulAssignment",
															"src": "3546:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "3556:7:8",
																"nodeType": "YulIdentifier",
																"src": "3556:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3546:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3546:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_SwapAbstract_$1509t_uint256t_address",
												"nativeSrc": "3040:529:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3115:9:8",
														"nodeType": "YulTypedName",
														"src": "3115:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3126:7:8",
														"nodeType": "YulTypedName",
														"src": "3126:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3138:6:8",
														"nodeType": "YulTypedName",
														"src": "3138:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3146:6:8",
														"nodeType": "YulTypedName",
														"src": "3146:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3154:6:8",
														"nodeType": "YulTypedName",
														"src": "3154:6:8",
														"type": ""
													}
												],
												"src": "3040:529:8"
											},
											{
												"body": {
													"nativeSrc": "3678:404:8",
													"nodeType": "YulBlock",
													"src": "3678:404:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3724:16:8",
																"nodeType": "YulBlock",
																"src": "3724:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3733:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3733:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3736:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3736:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3726:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3726:6:8"
																			},
																			"nativeSrc": "3726:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3726:12:8"
																		},
																		"nativeSrc": "3726:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3726:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3699:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3699:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3708:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3708:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3695:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3695:3:8"
																		},
																		"nativeSrc": "3695:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3695:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3720:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3720:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3691:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3691:3:8"
																},
																"nativeSrc": "3691:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3691:32:8"
															},
															"nativeSrc": "3688:52:8",
															"nodeType": "YulIf",
															"src": "3688:52:8"
														},
														{
															"nativeSrc": "3749:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3749:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3775:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3775:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3762:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3762:12:8"
																},
																"nativeSrc": "3762:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3762:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3753:5:8",
																	"nodeType": "YulTypedName",
																	"src": "3753:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3819:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3819:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3794:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "3794:24:8"
																},
																"nativeSrc": "3794:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3794:31:8"
															},
															"nativeSrc": "3794:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3794:31:8"
														},
														{
															"nativeSrc": "3834:15:8",
															"nodeType": "YulAssignment",
															"src": "3834:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "3844:5:8",
																"nodeType": "YulIdentifier",
																"src": "3844:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3834:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3834:6:8"
																}
															]
														},
														{
															"nativeSrc": "3858:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3858:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3890:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3890:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3901:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3901:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3886:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3886:3:8"
																		},
																		"nativeSrc": "3886:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3886:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3873:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3873:12:8"
																},
																"nativeSrc": "3873:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3873:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3862:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3862:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3939:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3939:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3914:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "3914:24:8"
																},
																"nativeSrc": "3914:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3914:33:8"
															},
															"nativeSrc": "3914:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3914:33:8"
														},
														{
															"nativeSrc": "3956:17:8",
															"nodeType": "YulAssignment",
															"src": "3956:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "3966:7:8",
																"nodeType": "YulIdentifier",
																"src": "3966:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3956:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3956:6:8"
																}
															]
														},
														{
															"nativeSrc": "3982:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3982:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3997:1:8",
																"nodeType": "YulLiteral",
																"src": "3997:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3986:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3986:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4007:43:8",
															"nodeType": "YulAssignment",
															"src": "4007:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4035:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4035:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4046:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4046:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4031:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4031:3:8"
																		},
																		"nativeSrc": "4031:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4031:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4018:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "4018:12:8"
																},
																"nativeSrc": "4018:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4018:32:8"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "4007:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4007:7:8"
																}
															]
														},
														{
															"nativeSrc": "4059:17:8",
															"nodeType": "YulAssignment",
															"src": "4059:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "4069:7:8",
																"nodeType": "YulIdentifier",
																"src": "4069:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4059:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4059:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3574:508:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3628:9:8",
														"nodeType": "YulTypedName",
														"src": "3628:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3639:7:8",
														"nodeType": "YulTypedName",
														"src": "3639:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3651:6:8",
														"nodeType": "YulTypedName",
														"src": "3651:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3659:6:8",
														"nodeType": "YulTypedName",
														"src": "3659:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3667:6:8",
														"nodeType": "YulTypedName",
														"src": "3667:6:8",
														"type": ""
													}
												],
												"src": "3574:508:8"
											},
											{
												"body": {
													"nativeSrc": "4184:87:8",
													"nodeType": "YulBlock",
													"src": "4184:87:8",
													"statements": [
														{
															"nativeSrc": "4194:26:8",
															"nodeType": "YulAssignment",
															"src": "4194:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4206:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4206:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4217:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4217:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4202:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4202:3:8"
																},
																"nativeSrc": "4202:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4202:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4194:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4194:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4236:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4236:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4251:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4251:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4259:4:8",
																				"nodeType": "YulLiteral",
																				"src": "4259:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4247:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4247:3:8"
																		},
																		"nativeSrc": "4247:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4247:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4229:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:8"
																},
																"nativeSrc": "4229:36:8",
																"nodeType": "YulFunctionCall",
																"src": "4229:36:8"
															},
															"nativeSrc": "4229:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "4229:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4087:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4153:9:8",
														"nodeType": "YulTypedName",
														"src": "4153:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4164:6:8",
														"nodeType": "YulTypedName",
														"src": "4164:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4175:4:8",
														"nodeType": "YulTypedName",
														"src": "4175:4:8",
														"type": ""
													}
												],
												"src": "4087:184:8"
											},
											{
												"body": {
													"nativeSrc": "4377:76:8",
													"nodeType": "YulBlock",
													"src": "4377:76:8",
													"statements": [
														{
															"nativeSrc": "4387:26:8",
															"nodeType": "YulAssignment",
															"src": "4387:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4399:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4399:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4410:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4410:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4395:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:8"
																},
																"nativeSrc": "4395:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4395:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4387:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4387:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4429:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4429:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4440:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4422:6:8"
																},
																"nativeSrc": "4422:25:8",
																"nodeType": "YulFunctionCall",
																"src": "4422:25:8"
															},
															"nativeSrc": "4422:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "4422:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4276:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4346:9:8",
														"nodeType": "YulTypedName",
														"src": "4346:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4357:6:8",
														"nodeType": "YulTypedName",
														"src": "4357:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4368:4:8",
														"nodeType": "YulTypedName",
														"src": "4368:4:8",
														"type": ""
													}
												],
												"src": "4276:177:8"
											},
											{
												"body": {
													"nativeSrc": "4572:102:8",
													"nodeType": "YulBlock",
													"src": "4572:102:8",
													"statements": [
														{
															"nativeSrc": "4582:26:8",
															"nodeType": "YulAssignment",
															"src": "4582:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4594:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4594:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4605:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4605:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4590:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4590:3:8"
																},
																"nativeSrc": "4590:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4590:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4582:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4582:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4624:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4624:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4639:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4639:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4655:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4655:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4660:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4660:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4651:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4651:3:8"
																						},
																						"nativeSrc": "4651:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4651:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4647:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4647:3:8"
																				},
																				"nativeSrc": "4647:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4647:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4635:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:8"
																		},
																		"nativeSrc": "4635:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4617:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4617:6:8"
																},
																"nativeSrc": "4617:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4617:51:8"
															},
															"nativeSrc": "4617:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4617:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$741__to_t_address__fromStack_reversed",
												"nativeSrc": "4458:216:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4541:9:8",
														"nodeType": "YulTypedName",
														"src": "4541:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4552:6:8",
														"nodeType": "YulTypedName",
														"src": "4552:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4563:4:8",
														"nodeType": "YulTypedName",
														"src": "4563:4:8",
														"type": ""
													}
												],
												"src": "4458:216:8"
											},
											{
												"body": {
													"nativeSrc": "4749:156:8",
													"nodeType": "YulBlock",
													"src": "4749:156:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4795:16:8",
																"nodeType": "YulBlock",
																"src": "4795:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4804:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4804:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4807:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4807:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4797:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4797:6:8"
																			},
																			"nativeSrc": "4797:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4797:12:8"
																		},
																		"nativeSrc": "4797:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4797:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4770:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4770:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4779:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4779:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4766:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4766:3:8"
																		},
																		"nativeSrc": "4766:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4766:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4791:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4791:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4762:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4762:3:8"
																},
																"nativeSrc": "4762:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4762:32:8"
															},
															"nativeSrc": "4759:52:8",
															"nodeType": "YulIf",
															"src": "4759:52:8"
														},
														{
															"nativeSrc": "4820:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4820:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4833:1:8",
																"nodeType": "YulLiteral",
																"src": "4833:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4824:5:8",
																	"nodeType": "YulTypedName",
																	"src": "4824:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4843:32:8",
															"nodeType": "YulAssignment",
															"src": "4843:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4865:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4865:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4852:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "4852:12:8"
																},
																"nativeSrc": "4852:23:8",
																"nodeType": "YulFunctionCall",
																"src": "4852:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4843:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4843:5:8"
																}
															]
														},
														{
															"nativeSrc": "4884:15:8",
															"nodeType": "YulAssignment",
															"src": "4884:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "4894:5:8",
																"nodeType": "YulIdentifier",
																"src": "4894:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4884:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4679:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4715:9:8",
														"nodeType": "YulTypedName",
														"src": "4715:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4726:7:8",
														"nodeType": "YulTypedName",
														"src": "4726:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4738:6:8",
														"nodeType": "YulTypedName",
														"src": "4738:6:8",
														"type": ""
													}
												],
												"src": "4679:226:8"
											},
											{
												"body": {
													"nativeSrc": "4983:86:8",
													"nodeType": "YulBlock",
													"src": "4983:86:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5023:16:8",
																"nodeType": "YulBlock",
																"src": "5023:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5032:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5032:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5035:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5035:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5025:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5025:6:8"
																			},
																			"nativeSrc": "5025:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5025:12:8"
																		},
																		"nativeSrc": "5025:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5025:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "5004:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5004:3:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5009:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5009:6:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5000:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5000:3:8"
																		},
																		"nativeSrc": "5000:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5000:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5018:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5018:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4996:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4996:3:8"
																},
																"nativeSrc": "4996:26:8",
																"nodeType": "YulFunctionCall",
																"src": "4996:26:8"
															},
															"nativeSrc": "4993:46:8",
															"nodeType": "YulIf",
															"src": "4993:46:8"
														},
														{
															"nativeSrc": "5048:15:8",
															"nodeType": "YulAssignment",
															"src": "5048:15:8",
															"value": {
																"name": "offset",
																"nativeSrc": "5057:6:8",
																"nodeType": "YulIdentifier",
																"src": "5057:6:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5048:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5048:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_struct_Permit2Sig_calldata",
												"nativeSrc": "4910:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4957:6:8",
														"nodeType": "YulTypedName",
														"src": "4957:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4965:3:8",
														"nodeType": "YulTypedName",
														"src": "4965:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4973:5:8",
														"nodeType": "YulTypedName",
														"src": "4973:5:8",
														"type": ""
													}
												],
												"src": "4910:159:8"
											},
											{
												"body": {
													"nativeSrc": "5191:242:8",
													"nodeType": "YulBlock",
													"src": "5191:242:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5238:16:8",
																"nodeType": "YulBlock",
																"src": "5238:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5247:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5247:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5250:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5250:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5240:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5240:6:8"
																			},
																			"nativeSrc": "5240:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5240:12:8"
																		},
																		"nativeSrc": "5240:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5240:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5212:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5212:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5221:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5221:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5208:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5208:3:8"
																		},
																		"nativeSrc": "5208:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5208:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5233:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5233:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5204:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:8"
																},
																"nativeSrc": "5204:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5204:33:8"
															},
															"nativeSrc": "5201:53:8",
															"nodeType": "YulIf",
															"src": "5201:53:8"
														},
														{
															"nativeSrc": "5263:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5263:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5276:1:8",
																"nodeType": "YulLiteral",
																"src": "5276:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5267:5:8",
																	"nodeType": "YulTypedName",
																	"src": "5267:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5286:32:8",
															"nodeType": "YulAssignment",
															"src": "5286:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5308:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5308:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5295:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5295:12:8"
																},
																"nativeSrc": "5295:23:8",
																"nodeType": "YulFunctionCall",
																"src": "5295:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5286:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5286:5:8"
																}
															]
														},
														{
															"nativeSrc": "5327:15:8",
															"nodeType": "YulAssignment",
															"src": "5327:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "5337:5:8",
																"nodeType": "YulIdentifier",
																"src": "5337:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5327:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5327:6:8"
																}
															]
														},
														{
															"nativeSrc": "5351:76:8",
															"nodeType": "YulAssignment",
															"src": "5351:76:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5403:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5403:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5414:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5414:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5399:3:8"
																		},
																		"nativeSrc": "5399:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5399:18:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5419:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "5419:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_Permit2Sig_calldata",
																	"nativeSrc": "5361:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "5361:37:8"
																},
																"nativeSrc": "5361:66:8",
																"nodeType": "YulFunctionCall",
																"src": "5361:66:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5351:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5351:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_struct$_Permit2Sig_$1152_calldata_ptr",
												"nativeSrc": "5074:359:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5149:9:8",
														"nodeType": "YulTypedName",
														"src": "5149:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5160:7:8",
														"nodeType": "YulTypedName",
														"src": "5160:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5172:6:8",
														"nodeType": "YulTypedName",
														"src": "5172:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5180:6:8",
														"nodeType": "YulTypedName",
														"src": "5180:6:8",
														"type": ""
													}
												],
												"src": "5074:359:8"
											},
											{
												"body": {
													"nativeSrc": "5537:103:8",
													"nodeType": "YulBlock",
													"src": "5537:103:8",
													"statements": [
														{
															"nativeSrc": "5547:26:8",
															"nodeType": "YulAssignment",
															"src": "5547:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5559:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5559:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5570:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5555:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5555:3:8"
																},
																"nativeSrc": "5555:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5555:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5547:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5547:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5589:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5589:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5604:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5604:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5616:3:8",
																						"nodeType": "YulLiteral",
																						"src": "5616:3:8",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5621:10:8",
																						"nodeType": "YulLiteral",
																						"src": "5621:10:8",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5612:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5612:3:8"
																				},
																				"nativeSrc": "5612:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5612:20:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5600:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5600:3:8"
																		},
																		"nativeSrc": "5600:33:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5600:33:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5582:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5582:6:8"
																},
																"nativeSrc": "5582:52:8",
																"nodeType": "YulFunctionCall",
																"src": "5582:52:8"
															},
															"nativeSrc": "5582:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "5582:52:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "5438:202:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5506:9:8",
														"nodeType": "YulTypedName",
														"src": "5506:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5517:6:8",
														"nodeType": "YulTypedName",
														"src": "5517:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5528:4:8",
														"nodeType": "YulTypedName",
														"src": "5528:4:8",
														"type": ""
													}
												],
												"src": "5438:202:8"
											},
											{
												"body": {
													"nativeSrc": "5746:102:8",
													"nodeType": "YulBlock",
													"src": "5746:102:8",
													"statements": [
														{
															"nativeSrc": "5756:26:8",
															"nodeType": "YulAssignment",
															"src": "5756:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5768:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5768:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5779:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5779:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5764:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5764:3:8"
																},
																"nativeSrc": "5764:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5764:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5756:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5756:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5798:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5798:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5813:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5813:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5829:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5829:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5834:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5834:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5825:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5825:3:8"
																						},
																						"nativeSrc": "5825:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5825:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5838:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5838:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5821:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5821:3:8"
																				},
																				"nativeSrc": "5821:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5821:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5809:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5809:3:8"
																		},
																		"nativeSrc": "5809:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5809:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5791:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5791:6:8"
																},
																"nativeSrc": "5791:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5791:51:8"
															},
															"nativeSrc": "5791:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5791:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5645:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5715:9:8",
														"nodeType": "YulTypedName",
														"src": "5715:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5726:6:8",
														"nodeType": "YulTypedName",
														"src": "5726:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5737:4:8",
														"nodeType": "YulTypedName",
														"src": "5737:4:8",
														"type": ""
													}
												],
												"src": "5645:203:8"
											},
											{
												"body": {
													"nativeSrc": "5987:366:8",
													"nodeType": "YulBlock",
													"src": "5987:366:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6034:16:8",
																"nodeType": "YulBlock",
																"src": "6034:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6043:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6043:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6046:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6046:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6036:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6036:6:8"
																			},
																			"nativeSrc": "6036:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6036:12:8"
																		},
																		"nativeSrc": "6036:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6036:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6008:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6008:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6017:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6017:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6004:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6004:3:8"
																		},
																		"nativeSrc": "6004:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6004:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6029:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6029:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6000:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6000:3:8"
																},
																"nativeSrc": "6000:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6000:33:8"
															},
															"nativeSrc": "5997:53:8",
															"nodeType": "YulIf",
															"src": "5997:53:8"
														},
														{
															"nativeSrc": "6059:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6059:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6072:1:8",
																"nodeType": "YulLiteral",
																"src": "6072:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6063:5:8",
																	"nodeType": "YulTypedName",
																	"src": "6063:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6082:32:8",
															"nodeType": "YulAssignment",
															"src": "6082:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6104:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6104:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6091:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6091:12:8"
																},
																"nativeSrc": "6091:23:8",
																"nodeType": "YulFunctionCall",
																"src": "6091:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6082:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6082:5:8"
																}
															]
														},
														{
															"nativeSrc": "6123:15:8",
															"nodeType": "YulAssignment",
															"src": "6123:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "6133:5:8",
																"nodeType": "YulIdentifier",
																"src": "6133:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6123:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6123:6:8"
																}
															]
														},
														{
															"nativeSrc": "6147:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6147:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6179:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6179:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6190:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6190:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6175:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6175:3:8"
																		},
																		"nativeSrc": "6175:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6175:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6162:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6162:12:8"
																},
																"nativeSrc": "6162:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6162:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6151:7:8",
																	"nodeType": "YulTypedName",
																	"src": "6151:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "6228:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "6228:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6203:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "6203:24:8"
																},
																"nativeSrc": "6203:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6203:33:8"
															},
															"nativeSrc": "6203:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6203:33:8"
														},
														{
															"nativeSrc": "6245:17:8",
															"nodeType": "YulAssignment",
															"src": "6245:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "6255:7:8",
																"nodeType": "YulIdentifier",
																"src": "6255:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6245:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6245:6:8"
																}
															]
														},
														{
															"nativeSrc": "6271:76:8",
															"nodeType": "YulAssignment",
															"src": "6271:76:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6323:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6323:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6334:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6334:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6319:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6319:3:8"
																		},
																		"nativeSrc": "6319:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6319:18:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6339:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "6339:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_Permit2Sig_calldata",
																	"nativeSrc": "6281:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "6281:37:8"
																},
																"nativeSrc": "6281:66:8",
																"nodeType": "YulFunctionCall",
																"src": "6281:66:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6271:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6271:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_struct$_Permit2Sig_$1152_calldata_ptr",
												"nativeSrc": "5853:500:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:8",
														"nodeType": "YulTypedName",
														"src": "5937:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5948:7:8",
														"nodeType": "YulTypedName",
														"src": "5948:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5960:6:8",
														"nodeType": "YulTypedName",
														"src": "5960:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5968:6:8",
														"nodeType": "YulTypedName",
														"src": "5968:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5976:6:8",
														"nodeType": "YulTypedName",
														"src": "5976:6:8",
														"type": ""
													}
												],
												"src": "5853:500:8"
											},
											{
												"body": {
													"nativeSrc": "6445:280:8",
													"nodeType": "YulBlock",
													"src": "6445:280:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6491:16:8",
																"nodeType": "YulBlock",
																"src": "6491:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6500:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6500:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6503:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6503:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6493:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6493:6:8"
																			},
																			"nativeSrc": "6493:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6493:12:8"
																		},
																		"nativeSrc": "6493:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6493:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6466:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6466:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6475:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6475:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6462:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6462:3:8"
																		},
																		"nativeSrc": "6462:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6462:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6487:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6487:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6458:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6458:3:8"
																},
																"nativeSrc": "6458:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6458:32:8"
															},
															"nativeSrc": "6455:52:8",
															"nodeType": "YulIf",
															"src": "6455:52:8"
														},
														{
															"nativeSrc": "6516:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6516:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6529:1:8",
																"nodeType": "YulLiteral",
																"src": "6529:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6520:5:8",
																	"nodeType": "YulTypedName",
																	"src": "6520:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6539:32:8",
															"nodeType": "YulAssignment",
															"src": "6539:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6561:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6561:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6548:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6548:12:8"
																},
																"nativeSrc": "6548:23:8",
																"nodeType": "YulFunctionCall",
																"src": "6548:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6539:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6539:5:8"
																}
															]
														},
														{
															"nativeSrc": "6580:15:8",
															"nodeType": "YulAssignment",
															"src": "6580:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "6590:5:8",
																"nodeType": "YulIdentifier",
																"src": "6590:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6580:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:8"
																}
															]
														},
														{
															"nativeSrc": "6604:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6604:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6636:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6636:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6647:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6647:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6632:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:8"
																		},
																		"nativeSrc": "6632:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6632:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6619:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6619:12:8"
																},
																"nativeSrc": "6619:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6619:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6608:7:8",
																	"nodeType": "YulTypedName",
																	"src": "6608:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "6685:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "6685:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6660:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "6660:24:8"
																},
																"nativeSrc": "6660:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6660:33:8"
															},
															"nativeSrc": "6660:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6660:33:8"
														},
														{
															"nativeSrc": "6702:17:8",
															"nodeType": "YulAssignment",
															"src": "6702:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "6712:7:8",
																"nodeType": "YulIdentifier",
																"src": "6712:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6702:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6702:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "6358:367:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6403:9:8",
														"nodeType": "YulTypedName",
														"src": "6403:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6414:7:8",
														"nodeType": "YulTypedName",
														"src": "6414:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6426:6:8",
														"nodeType": "YulTypedName",
														"src": "6426:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6434:6:8",
														"nodeType": "YulTypedName",
														"src": "6434:6:8",
														"type": ""
													}
												],
												"src": "6358:367:8"
											},
											{
												"body": {
													"nativeSrc": "6777:109:8",
													"nodeType": "YulBlock",
													"src": "6777:109:8",
													"statements": [
														{
															"nativeSrc": "6787:29:8",
															"nodeType": "YulAssignment",
															"src": "6787:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6809:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6809:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6796:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6796:12:8"
																},
																"nativeSrc": "6796:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6796:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6787:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6787:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6864:16:8",
																"nodeType": "YulBlock",
																"src": "6864:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6873:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6873:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6876:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6876:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6866:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6866:6:8"
																			},
																			"nativeSrc": "6866:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6866:12:8"
																		},
																		"nativeSrc": "6866:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6866:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6838:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6838:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6849:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6849:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6856:4:8",
																						"nodeType": "YulLiteral",
																						"src": "6856:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6845:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6845:3:8"
																				},
																				"nativeSrc": "6845:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6845:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6835:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6835:2:8"
																		},
																		"nativeSrc": "6835:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6835:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6828:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:8"
																},
																"nativeSrc": "6828:35:8",
																"nodeType": "YulFunctionCall",
																"src": "6828:35:8"
															},
															"nativeSrc": "6825:55:8",
															"nodeType": "YulIf",
															"src": "6825:55:8"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nativeSrc": "6730:156:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6756:6:8",
														"nodeType": "YulTypedName",
														"src": "6756:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6767:5:8",
														"nodeType": "YulTypedName",
														"src": "6767:5:8",
														"type": ""
													}
												],
												"src": "6730:156:8"
											},
											{
												"body": {
													"nativeSrc": "7061:772:8",
													"nodeType": "YulBlock",
													"src": "7061:772:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7108:16:8",
																"nodeType": "YulBlock",
																"src": "7108:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7117:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7117:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7120:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7120:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7110:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7110:6:8"
																			},
																			"nativeSrc": "7110:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7110:12:8"
																		},
																		"nativeSrc": "7110:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7110:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7082:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7082:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7091:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7091:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7078:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:8"
																		},
																		"nativeSrc": "7078:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7078:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7103:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7103:3:8",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7074:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7074:3:8"
																},
																"nativeSrc": "7074:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7074:33:8"
															},
															"nativeSrc": "7071:53:8",
															"nodeType": "YulIf",
															"src": "7071:53:8"
														},
														{
															"nativeSrc": "7133:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7133:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7159:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7159:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7146:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7146:12:8"
																},
																"nativeSrc": "7146:23:8",
																"nodeType": "YulFunctionCall",
																"src": "7146:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7137:5:8",
																	"nodeType": "YulTypedName",
																	"src": "7137:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7203:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7203:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7178:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "7178:24:8"
																},
																"nativeSrc": "7178:31:8",
																"nodeType": "YulFunctionCall",
																"src": "7178:31:8"
															},
															"nativeSrc": "7178:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "7178:31:8"
														},
														{
															"nativeSrc": "7218:15:8",
															"nodeType": "YulAssignment",
															"src": "7218:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "7228:5:8",
																"nodeType": "YulIdentifier",
																"src": "7228:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7218:6:8"
																}
															]
														},
														{
															"nativeSrc": "7242:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7242:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7274:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7274:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7285:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7285:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7270:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7270:3:8"
																		},
																		"nativeSrc": "7270:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7270:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7257:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7257:12:8"
																},
																"nativeSrc": "7257:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7257:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "7246:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7246:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "7323:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "7323:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7298:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "7298:24:8"
																},
																"nativeSrc": "7298:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7298:33:8"
															},
															"nativeSrc": "7298:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "7298:33:8"
														},
														{
															"nativeSrc": "7340:17:8",
															"nodeType": "YulAssignment",
															"src": "7340:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "7350:7:8",
																"nodeType": "YulIdentifier",
																"src": "7350:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7340:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7340:6:8"
																}
															]
														},
														{
															"nativeSrc": "7366:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7366:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7381:1:8",
																"nodeType": "YulLiteral",
																"src": "7381:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "7370:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7370:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7391:43:8",
															"nodeType": "YulAssignment",
															"src": "7391:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7419:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7430:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7430:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:8"
																		},
																		"nativeSrc": "7415:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7415:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7402:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7402:12:8"
																},
																"nativeSrc": "7402:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7402:32:8"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "7391:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7391:7:8"
																}
															]
														},
														{
															"nativeSrc": "7443:17:8",
															"nodeType": "YulAssignment",
															"src": "7443:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "7453:7:8",
																"nodeType": "YulIdentifier",
																"src": "7453:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "7443:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:8"
																}
															]
														},
														{
															"nativeSrc": "7469:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7469:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7484:1:8",
																"nodeType": "YulLiteral",
																"src": "7484:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "7473:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7473:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7494:43:8",
															"nodeType": "YulAssignment",
															"src": "7494:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7522:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7522:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7533:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7533:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7518:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7518:3:8"
																		},
																		"nativeSrc": "7518:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7518:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7505:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7505:12:8"
																},
																"nativeSrc": "7505:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7505:32:8"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "7494:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7494:7:8"
																}
															]
														},
														{
															"nativeSrc": "7546:17:8",
															"nodeType": "YulAssignment",
															"src": "7546:17:8",
															"value": {
																"name": "value_3",
																"nativeSrc": "7556:7:8",
																"nodeType": "YulIdentifier",
																"src": "7556:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "7546:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7546:6:8"
																}
															]
														},
														{
															"nativeSrc": "7572:47:8",
															"nodeType": "YulAssignment",
															"src": "7572:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7603:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7603:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7614:3:8",
																				"nodeType": "YulLiteral",
																				"src": "7614:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7599:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7599:3:8"
																		},
																		"nativeSrc": "7599:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7599:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nativeSrc": "7582:16:8",
																	"nodeType": "YulIdentifier",
																	"src": "7582:16:8"
																},
																"nativeSrc": "7582:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7582:37:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "7572:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7572:6:8"
																}
															]
														},
														{
															"nativeSrc": "7628:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7628:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7643:1:8",
																"nodeType": "YulLiteral",
																"src": "7643:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "7632:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7632:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7653:44:8",
															"nodeType": "YulAssignment",
															"src": "7653:44:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7681:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7681:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7692:3:8",
																				"nodeType": "YulLiteral",
																				"src": "7692:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7677:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7677:3:8"
																		},
																		"nativeSrc": "7677:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7677:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7664:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7664:12:8"
																},
																"nativeSrc": "7664:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7664:33:8"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "7653:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7653:7:8"
																}
															]
														},
														{
															"nativeSrc": "7706:17:8",
															"nodeType": "YulAssignment",
															"src": "7706:17:8",
															"value": {
																"name": "value_4",
																"nativeSrc": "7716:7:8",
																"nodeType": "YulIdentifier",
																"src": "7716:7:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "7706:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7706:6:8"
																}
															]
														},
														{
															"nativeSrc": "7732:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7732:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7747:1:8",
																"nodeType": "YulLiteral",
																"src": "7747:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "7736:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7736:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7757:44:8",
															"nodeType": "YulAssignment",
															"src": "7757:44:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7785:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7785:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7796:3:8",
																				"nodeType": "YulLiteral",
																				"src": "7796:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7781:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7781:3:8"
																		},
																		"nativeSrc": "7781:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7781:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7768:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7768:12:8"
																},
																"nativeSrc": "7768:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7768:33:8"
															},
															"variableNames": [
																{
																	"name": "value_5",
																	"nativeSrc": "7757:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7757:7:8"
																}
															]
														},
														{
															"nativeSrc": "7810:17:8",
															"nodeType": "YulAssignment",
															"src": "7810:17:8",
															"value": {
																"name": "value_5",
																"nativeSrc": "7820:7:8",
																"nodeType": "YulIdentifier",
																"src": "7820:7:8"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "7810:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7810:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "6891:942:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6979:9:8",
														"nodeType": "YulTypedName",
														"src": "6979:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6990:7:8",
														"nodeType": "YulTypedName",
														"src": "6990:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7002:6:8",
														"nodeType": "YulTypedName",
														"src": "7002:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7010:6:8",
														"nodeType": "YulTypedName",
														"src": "7010:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7018:6:8",
														"nodeType": "YulTypedName",
														"src": "7018:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7026:6:8",
														"nodeType": "YulTypedName",
														"src": "7026:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7034:6:8",
														"nodeType": "YulTypedName",
														"src": "7034:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7042:6:8",
														"nodeType": "YulTypedName",
														"src": "7042:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7050:6:8",
														"nodeType": "YulTypedName",
														"src": "7050:6:8",
														"type": ""
													}
												],
												"src": "6891:942:8"
											},
											{
												"body": {
													"nativeSrc": "7925:301:8",
													"nodeType": "YulBlock",
													"src": "7925:301:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7971:16:8",
																"nodeType": "YulBlock",
																"src": "7971:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7980:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7980:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7983:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7983:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7973:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7973:6:8"
																			},
																			"nativeSrc": "7973:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7973:12:8"
																		},
																		"nativeSrc": "7973:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7973:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7946:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7946:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7955:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7942:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7942:3:8"
																		},
																		"nativeSrc": "7942:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7942:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7967:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7967:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7938:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7938:3:8"
																},
																"nativeSrc": "7938:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7938:32:8"
															},
															"nativeSrc": "7935:52:8",
															"nodeType": "YulIf",
															"src": "7935:52:8"
														},
														{
															"nativeSrc": "7996:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7996:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8022:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8022:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8009:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "8009:12:8"
																},
																"nativeSrc": "8009:23:8",
																"nodeType": "YulFunctionCall",
																"src": "8009:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8000:5:8",
																	"nodeType": "YulTypedName",
																	"src": "8000:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8066:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8066:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8041:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "8041:24:8"
																},
																"nativeSrc": "8041:31:8",
																"nodeType": "YulFunctionCall",
																"src": "8041:31:8"
															},
															"nativeSrc": "8041:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "8041:31:8"
														},
														{
															"nativeSrc": "8081:15:8",
															"nodeType": "YulAssignment",
															"src": "8081:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "8091:5:8",
																"nodeType": "YulIdentifier",
																"src": "8091:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8081:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8081:6:8"
																}
															]
														},
														{
															"nativeSrc": "8105:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8105:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8137:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8137:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8148:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8148:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8133:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8133:3:8"
																		},
																		"nativeSrc": "8133:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8133:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8120:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "8120:12:8"
																},
																"nativeSrc": "8120:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8120:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "8109:7:8",
																	"nodeType": "YulTypedName",
																	"src": "8109:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "8186:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8186:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8161:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "8161:24:8"
																},
																"nativeSrc": "8161:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8161:33:8"
															},
															"nativeSrc": "8161:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "8161:33:8"
														},
														{
															"nativeSrc": "8203:17:8",
															"nodeType": "YulAssignment",
															"src": "8203:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "8213:7:8",
																"nodeType": "YulIdentifier",
																"src": "8213:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8203:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7838:388:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7883:9:8",
														"nodeType": "YulTypedName",
														"src": "7883:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7894:7:8",
														"nodeType": "YulTypedName",
														"src": "7894:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7906:6:8",
														"nodeType": "YulTypedName",
														"src": "7906:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7914:6:8",
														"nodeType": "YulTypedName",
														"src": "7914:6:8",
														"type": ""
													}
												],
												"src": "7838:388:8"
											},
											{
												"body": {
													"nativeSrc": "8350:63:8",
													"nodeType": "YulBlock",
													"src": "8350:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8367:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8367:3:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8372:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8372:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8360:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8360:6:8"
																},
																"nativeSrc": "8360:19:8",
																"nodeType": "YulFunctionCall",
																"src": "8360:19:8"
															},
															"nativeSrc": "8360:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "8360:19:8"
														},
														{
															"nativeSrc": "8388:19:8",
															"nodeType": "YulAssignment",
															"src": "8388:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8399:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8399:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8404:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8404:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8395:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8395:3:8"
																},
																"nativeSrc": "8395:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8395:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8388:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8388:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8231:182:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8326:3:8",
														"nodeType": "YulTypedName",
														"src": "8326:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8331:6:8",
														"nodeType": "YulTypedName",
														"src": "8331:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8342:3:8",
														"nodeType": "YulTypedName",
														"src": "8342:3:8",
														"type": ""
													}
												],
												"src": "8231:182:8"
											},
											{
												"body": {
													"nativeSrc": "8565:124:8",
													"nodeType": "YulBlock",
													"src": "8565:124:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8588:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8593:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8593:6:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8601:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8601:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8575:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "8575:12:8"
																},
																"nativeSrc": "8575:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8575:33:8"
															},
															"nativeSrc": "8575:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "8575:33:8"
														},
														{
															"nativeSrc": "8617:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8617:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8631:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8631:3:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8636:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8636:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8627:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8627:3:8"
																},
																"nativeSrc": "8627:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8627:16:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8621:2:8",
																	"nodeType": "YulTypedName",
																	"src": "8621:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "8659:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "8659:2:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8663:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8663:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8652:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8652:6:8"
																},
																"nativeSrc": "8652:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8652:13:8"
															},
															"nativeSrc": "8652:13:8",
															"nodeType": "YulExpressionStatement",
															"src": "8652:13:8"
														},
														{
															"nativeSrc": "8674:9:8",
															"nodeType": "YulAssignment",
															"src": "8674:9:8",
															"value": {
																"name": "_1",
																"nativeSrc": "8681:2:8",
																"nodeType": "YulIdentifier",
																"src": "8681:2:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8674:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8674:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8418:271:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8533:3:8",
														"nodeType": "YulTypedName",
														"src": "8533:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8538:6:8",
														"nodeType": "YulTypedName",
														"src": "8538:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8546:6:8",
														"nodeType": "YulTypedName",
														"src": "8546:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8557:3:8",
														"nodeType": "YulTypedName",
														"src": "8557:3:8",
														"type": ""
													}
												],
												"src": "8418:271:8"
											},
											{
												"body": {
													"nativeSrc": "8823:145:8",
													"nodeType": "YulBlock",
													"src": "8823:145:8",
													"statements": [
														{
															"nativeSrc": "8833:26:8",
															"nodeType": "YulAssignment",
															"src": "8833:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8845:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8845:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8856:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8856:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8841:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8841:3:8"
																},
																"nativeSrc": "8841:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8841:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8833:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8833:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8875:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8875:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8890:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8890:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8906:3:8",
																								"nodeType": "YulLiteral",
																								"src": "8906:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8911:1:8",
																								"nodeType": "YulLiteral",
																								"src": "8911:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8902:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8902:3:8"
																						},
																						"nativeSrc": "8902:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8902:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8915:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8915:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8898:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8898:3:8"
																				},
																				"nativeSrc": "8898:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8898:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8886:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8886:3:8"
																		},
																		"nativeSrc": "8886:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8886:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8868:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8868:6:8"
																},
																"nativeSrc": "8868:51:8",
																"nodeType": "YulFunctionCall",
																"src": "8868:51:8"
															},
															"nativeSrc": "8868:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "8868:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8939:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8939:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8950:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8950:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8935:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8935:3:8"
																		},
																		"nativeSrc": "8935:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8935:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8955:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8955:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8928:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8928:6:8"
																},
																"nativeSrc": "8928:34:8",
																"nodeType": "YulFunctionCall",
																"src": "8928:34:8"
															},
															"nativeSrc": "8928:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "8928:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8694:274:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8784:9:8",
														"nodeType": "YulTypedName",
														"src": "8784:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8795:6:8",
														"nodeType": "YulTypedName",
														"src": "8795:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8803:6:8",
														"nodeType": "YulTypedName",
														"src": "8803:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8814:4:8",
														"nodeType": "YulTypedName",
														"src": "8814:4:8",
														"type": ""
													}
												],
												"src": "8694:274:8"
											},
											{
												"body": {
													"nativeSrc": "9051:199:8",
													"nodeType": "YulBlock",
													"src": "9051:199:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9097:16:8",
																"nodeType": "YulBlock",
																"src": "9097:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9106:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9106:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9109:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9109:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9099:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9099:6:8"
																			},
																			"nativeSrc": "9099:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9099:12:8"
																		},
																		"nativeSrc": "9099:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9099:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9072:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9072:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9081:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9081:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9068:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:8"
																		},
																		"nativeSrc": "9068:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9068:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9093:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9064:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9064:3:8"
																},
																"nativeSrc": "9064:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9064:32:8"
															},
															"nativeSrc": "9061:52:8",
															"nodeType": "YulIf",
															"src": "9061:52:8"
														},
														{
															"nativeSrc": "9122:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9122:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9141:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9141:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9135:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9135:5:8"
																},
																"nativeSrc": "9135:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9135:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9126:5:8",
																	"nodeType": "YulTypedName",
																	"src": "9126:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9204:16:8",
																"nodeType": "YulBlock",
																"src": "9204:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9213:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9213:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9216:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9216:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9206:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9206:6:8"
																			},
																			"nativeSrc": "9206:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9206:12:8"
																		},
																		"nativeSrc": "9206:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9206:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9173:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9173:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "9194:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "9194:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "9187:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "9187:6:8"
																						},
																						"nativeSrc": "9187:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9187:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9180:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9180:6:8"
																				},
																				"nativeSrc": "9180:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9180:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9170:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9170:2:8"
																		},
																		"nativeSrc": "9170:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9170:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9163:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9163:6:8"
																},
																"nativeSrc": "9163:40:8",
																"nodeType": "YulFunctionCall",
																"src": "9163:40:8"
															},
															"nativeSrc": "9160:60:8",
															"nodeType": "YulIf",
															"src": "9160:60:8"
														},
														{
															"nativeSrc": "9229:15:8",
															"nodeType": "YulAssignment",
															"src": "9229:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "9239:5:8",
																"nodeType": "YulIdentifier",
																"src": "9239:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9229:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9229:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8973:277:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9017:9:8",
														"nodeType": "YulTypedName",
														"src": "9017:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9028:7:8",
														"nodeType": "YulTypedName",
														"src": "9028:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9040:6:8",
														"nodeType": "YulTypedName",
														"src": "9040:6:8",
														"type": ""
													}
												],
												"src": "8973:277:8"
											},
											{
												"body": {
													"nativeSrc": "9336:103:8",
													"nodeType": "YulBlock",
													"src": "9336:103:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9382:16:8",
																"nodeType": "YulBlock",
																"src": "9382:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9391:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9391:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9394:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9394:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9384:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9384:6:8"
																			},
																			"nativeSrc": "9384:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9384:12:8"
																		},
																		"nativeSrc": "9384:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9384:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9357:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9357:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9366:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9366:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9353:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9353:3:8"
																		},
																		"nativeSrc": "9353:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9353:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9378:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9378:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9349:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9349:3:8"
																},
																"nativeSrc": "9349:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9349:32:8"
															},
															"nativeSrc": "9346:52:8",
															"nodeType": "YulIf",
															"src": "9346:52:8"
														},
														{
															"nativeSrc": "9407:26:8",
															"nodeType": "YulAssignment",
															"src": "9407:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9423:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9423:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9417:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9417:5:8"
																},
																"nativeSrc": "9417:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9417:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9255:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9302:9:8",
														"nodeType": "YulTypedName",
														"src": "9302:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9313:7:8",
														"nodeType": "YulTypedName",
														"src": "9313:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9325:6:8",
														"nodeType": "YulTypedName",
														"src": "9325:6:8",
														"type": ""
													}
												],
												"src": "9255:184:8"
											},
											{
												"body": {
													"nativeSrc": "9476:95:8",
													"nodeType": "YulBlock",
													"src": "9476:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9493:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9493:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9500:3:8",
																				"nodeType": "YulLiteral",
																				"src": "9500:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9505:10:8",
																				"nodeType": "YulLiteral",
																				"src": "9505:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9496:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9496:3:8"
																		},
																		"nativeSrc": "9496:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9496:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9486:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:8"
																},
																"nativeSrc": "9486:31:8",
																"nodeType": "YulFunctionCall",
																"src": "9486:31:8"
															},
															"nativeSrc": "9486:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "9486:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9533:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9533:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9536:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9536:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:8"
																},
																"nativeSrc": "9526:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9526:15:8"
															},
															"nativeSrc": "9526:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9526:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9557:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9557:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9560:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9560:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9550:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9550:6:8"
																},
																"nativeSrc": "9550:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9550:15:8"
															},
															"nativeSrc": "9550:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9550:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9444:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9444:127:8"
											},
											{
												"body": {
													"nativeSrc": "9625:79:8",
													"nodeType": "YulBlock",
													"src": "9625:79:8",
													"statements": [
														{
															"nativeSrc": "9635:17:8",
															"nodeType": "YulAssignment",
															"src": "9635:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9647:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9647:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9650:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9650:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9643:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9643:3:8"
																},
																"nativeSrc": "9643:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9643:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9635:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9635:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9676:22:8",
																"nodeType": "YulBlock",
																"src": "9676:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9678:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9678:16:8"
																			},
																			"nativeSrc": "9678:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9678:18:8"
																		},
																		"nativeSrc": "9678:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9678:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9667:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9667:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9673:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9673:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9664:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9664:2:8"
																},
																"nativeSrc": "9664:11:8",
																"nodeType": "YulFunctionCall",
																"src": "9664:11:8"
															},
															"nativeSrc": "9661:37:8",
															"nodeType": "YulIf",
															"src": "9661:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9576:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9607:1:8",
														"nodeType": "YulTypedName",
														"src": "9607:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9610:1:8",
														"nodeType": "YulTypedName",
														"src": "9610:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9616:4:8",
														"nodeType": "YulTypedName",
														"src": "9616:4:8",
														"type": ""
													}
												],
												"src": "9576:128:8"
											},
											{
												"body": {
													"nativeSrc": "9757:77:8",
													"nodeType": "YulBlock",
													"src": "9757:77:8",
													"statements": [
														{
															"nativeSrc": "9767:16:8",
															"nodeType": "YulAssignment",
															"src": "9767:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9778:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9778:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9781:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9781:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9774:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9774:3:8"
																},
																"nativeSrc": "9774:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9774:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9767:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9767:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9806:22:8",
																"nodeType": "YulBlock",
																"src": "9806:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9808:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9808:16:8"
																			},
																			"nativeSrc": "9808:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9808:18:8"
																		},
																		"nativeSrc": "9808:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9808:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9798:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9798:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9801:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9801:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9795:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9795:2:8"
																},
																"nativeSrc": "9795:10:8",
																"nodeType": "YulFunctionCall",
																"src": "9795:10:8"
															},
															"nativeSrc": "9792:36:8",
															"nodeType": "YulIf",
															"src": "9792:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9709:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9740:1:8",
														"nodeType": "YulTypedName",
														"src": "9740:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9743:1:8",
														"nodeType": "YulTypedName",
														"src": "9743:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9749:3:8",
														"nodeType": "YulTypedName",
														"src": "9749:3:8",
														"type": ""
													}
												],
												"src": "9709:125:8"
											},
											{
												"body": {
													"nativeSrc": "9891:116:8",
													"nodeType": "YulBlock",
													"src": "9891:116:8",
													"statements": [
														{
															"nativeSrc": "9901:20:8",
															"nodeType": "YulAssignment",
															"src": "9901:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9916:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9916:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9919:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9919:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9912:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9912:3:8"
																},
																"nativeSrc": "9912:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9912:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9901:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9901:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9979:22:8",
																"nodeType": "YulBlock",
																"src": "9979:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9981:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9981:16:8"
																			},
																			"nativeSrc": "9981:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9981:18:8"
																		},
																		"nativeSrc": "9981:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9981:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9950:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9950:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9943:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9943:6:8"
																				},
																				"nativeSrc": "9943:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9943:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9957:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9957:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9964:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9964:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9973:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9973:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9960:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9960:3:8"
																						},
																						"nativeSrc": "9960:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9960:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9954:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9954:2:8"
																				},
																				"nativeSrc": "9954:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9954:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9940:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9940:2:8"
																		},
																		"nativeSrc": "9940:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9940:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9933:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9933:6:8"
																},
																"nativeSrc": "9933:45:8",
																"nodeType": "YulFunctionCall",
																"src": "9933:45:8"
															},
															"nativeSrc": "9930:71:8",
															"nodeType": "YulIf",
															"src": "9930:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9839:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9870:1:8",
														"nodeType": "YulTypedName",
														"src": "9870:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9873:1:8",
														"nodeType": "YulTypedName",
														"src": "9873:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9879:7:8",
														"nodeType": "YulTypedName",
														"src": "9879:7:8",
														"type": ""
													}
												],
												"src": "9839:168:8"
											},
											{
												"body": {
													"nativeSrc": "10058:171:8",
													"nodeType": "YulBlock",
													"src": "10058:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10089:111:8",
																"nodeType": "YulBlock",
																"src": "10089:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10110:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10110:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10117:3:8",
																							"nodeType": "YulLiteral",
																							"src": "10117:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10122:10:8",
																							"nodeType": "YulLiteral",
																							"src": "10122:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10113:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "10113:3:8"
																					},
																					"nativeSrc": "10113:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10113:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10103:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10103:6:8"
																			},
																			"nativeSrc": "10103:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10103:31:8"
																		},
																		"nativeSrc": "10103:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10103:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10154:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10154:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10157:4:8",
																					"nodeType": "YulLiteral",
																					"src": "10157:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10147:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10147:6:8"
																			},
																			"nativeSrc": "10147:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10147:15:8"
																		},
																		"nativeSrc": "10147:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10147:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10182:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10182:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10185:4:8",
																					"nodeType": "YulLiteral",
																					"src": "10185:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10175:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10175:6:8"
																			},
																			"nativeSrc": "10175:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10175:15:8"
																		},
																		"nativeSrc": "10175:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10175:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10078:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10078:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10071:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10071:6:8"
																},
																"nativeSrc": "10071:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10071:9:8"
															},
															"nativeSrc": "10068:132:8",
															"nodeType": "YulIf",
															"src": "10068:132:8"
														},
														{
															"nativeSrc": "10209:14:8",
															"nodeType": "YulAssignment",
															"src": "10209:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10218:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10218:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10221:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10221:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10214:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10214:3:8"
																},
																"nativeSrc": "10214:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10214:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10209:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10209:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10012:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10043:1:8",
														"nodeType": "YulTypedName",
														"src": "10043:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10046:1:8",
														"nodeType": "YulTypedName",
														"src": "10046:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10052:1:8",
														"nodeType": "YulTypedName",
														"src": "10052:1:8",
														"type": ""
													}
												],
												"src": "10012:217:8"
											},
											{
												"body": {
													"nativeSrc": "10302:114:8",
													"nodeType": "YulBlock",
													"src": "10302:114:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10348:16:8",
																"nodeType": "YulBlock",
																"src": "10348:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10357:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10357:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10360:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10360:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10350:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10350:6:8"
																			},
																			"nativeSrc": "10350:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10350:12:8"
																		},
																		"nativeSrc": "10350:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10350:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10323:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10323:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10332:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10332:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10319:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10319:3:8"
																		},
																		"nativeSrc": "10319:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10319:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10344:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10315:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10315:3:8"
																},
																"nativeSrc": "10315:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10315:32:8"
															},
															"nativeSrc": "10312:52:8",
															"nodeType": "YulIf",
															"src": "10312:52:8"
														},
														{
															"nativeSrc": "10373:37:8",
															"nodeType": "YulAssignment",
															"src": "10373:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10400:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10400:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nativeSrc": "10383:16:8",
																	"nodeType": "YulIdentifier",
																	"src": "10383:16:8"
																},
																"nativeSrc": "10383:27:8",
																"nodeType": "YulFunctionCall",
																"src": "10383:27:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10373:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10373:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "10234:182:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10268:9:8",
														"nodeType": "YulTypedName",
														"src": "10268:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10279:7:8",
														"nodeType": "YulTypedName",
														"src": "10279:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10291:6:8",
														"nodeType": "YulTypedName",
														"src": "10291:6:8",
														"type": ""
													}
												],
												"src": "10234:182:8"
											},
											{
												"body": {
													"nativeSrc": "10686:401:8",
													"nodeType": "YulBlock",
													"src": "10686:401:8",
													"statements": [
														{
															"nativeSrc": "10696:27:8",
															"nodeType": "YulAssignment",
															"src": "10696:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10708:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10708:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10719:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10719:3:8",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10704:3:8"
																},
																"nativeSrc": "10704:19:8",
																"nodeType": "YulFunctionCall",
																"src": "10704:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10696:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10696:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10739:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10739:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10754:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10754:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10770:3:8",
																								"nodeType": "YulLiteral",
																								"src": "10770:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10775:1:8",
																								"nodeType": "YulLiteral",
																								"src": "10775:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10766:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10766:3:8"
																						},
																						"nativeSrc": "10766:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10766:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10779:1:8",
																						"nodeType": "YulLiteral",
																						"src": "10779:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10762:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10762:3:8"
																				},
																				"nativeSrc": "10762:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10762:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10750:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10750:3:8"
																		},
																		"nativeSrc": "10750:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10750:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10732:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10732:6:8"
																},
																"nativeSrc": "10732:51:8",
																"nodeType": "YulFunctionCall",
																"src": "10732:51:8"
															},
															"nativeSrc": "10732:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "10732:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10803:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10803:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10814:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10814:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10799:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10799:3:8"
																		},
																		"nativeSrc": "10799:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10799:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10823:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10823:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10839:3:8",
																								"nodeType": "YulLiteral",
																								"src": "10839:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10844:1:8",
																								"nodeType": "YulLiteral",
																								"src": "10844:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10835:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10835:3:8"
																						},
																						"nativeSrc": "10835:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10835:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10848:1:8",
																						"nodeType": "YulLiteral",
																						"src": "10848:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10831:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10831:3:8"
																				},
																				"nativeSrc": "10831:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10831:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10819:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10819:3:8"
																		},
																		"nativeSrc": "10819:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10819:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10792:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10792:6:8"
																},
																"nativeSrc": "10792:60:8",
																"nodeType": "YulFunctionCall",
																"src": "10792:60:8"
															},
															"nativeSrc": "10792:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "10792:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10872:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10872:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10883:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10883:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10868:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10868:3:8"
																		},
																		"nativeSrc": "10868:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10868:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10888:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10888:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10861:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10861:6:8"
																},
																"nativeSrc": "10861:34:8",
																"nodeType": "YulFunctionCall",
																"src": "10861:34:8"
															},
															"nativeSrc": "10861:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "10861:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10915:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10915:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10926:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10926:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10911:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10911:3:8"
																		},
																		"nativeSrc": "10911:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10911:18:8"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10931:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10931:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10904:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10904:6:8"
																},
																"nativeSrc": "10904:34:8",
																"nodeType": "YulFunctionCall",
																"src": "10904:34:8"
															},
															"nativeSrc": "10904:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "10904:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10958:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10958:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10969:3:8",
																				"nodeType": "YulLiteral",
																				"src": "10969:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10954:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10954:3:8"
																		},
																		"nativeSrc": "10954:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10954:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "10979:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10979:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10987:4:8",
																				"nodeType": "YulLiteral",
																				"src": "10987:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10975:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10975:3:8"
																		},
																		"nativeSrc": "10975:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10975:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10947:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10947:6:8"
																},
																"nativeSrc": "10947:46:8",
																"nodeType": "YulFunctionCall",
																"src": "10947:46:8"
															},
															"nativeSrc": "10947:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "10947:46:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11013:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11013:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11024:3:8",
																				"nodeType": "YulLiteral",
																				"src": "11024:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11009:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11009:3:8"
																		},
																		"nativeSrc": "11009:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11009:19:8"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "11030:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11030:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11002:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11002:6:8"
																},
																"nativeSrc": "11002:35:8",
																"nodeType": "YulFunctionCall",
																"src": "11002:35:8"
															},
															"nativeSrc": "11002:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "11002:35:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11057:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11057:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11068:3:8",
																				"nodeType": "YulLiteral",
																				"src": "11068:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11053:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:8"
																		},
																		"nativeSrc": "11053:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11053:19:8"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "11074:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11074:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11046:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11046:6:8"
																},
																"nativeSrc": "11046:35:8",
																"nodeType": "YulFunctionCall",
																"src": "11046:35:8"
															},
															"nativeSrc": "11046:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "11046:35:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "10421:666:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10607:9:8",
														"nodeType": "YulTypedName",
														"src": "10607:9:8",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10618:6:8",
														"nodeType": "YulTypedName",
														"src": "10618:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10626:6:8",
														"nodeType": "YulTypedName",
														"src": "10626:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10634:6:8",
														"nodeType": "YulTypedName",
														"src": "10634:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10642:6:8",
														"nodeType": "YulTypedName",
														"src": "10642:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10650:6:8",
														"nodeType": "YulTypedName",
														"src": "10650:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10658:6:8",
														"nodeType": "YulTypedName",
														"src": "10658:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10666:6:8",
														"nodeType": "YulTypedName",
														"src": "10666:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10677:4:8",
														"nodeType": "YulTypedName",
														"src": "10677:4:8",
														"type": ""
													}
												],
												"src": "10421:666:8"
											},
											{
												"body": {
													"nativeSrc": "11321:223:8",
													"nodeType": "YulBlock",
													"src": "11321:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11338:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11338:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11353:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11353:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11369:3:8",
																								"nodeType": "YulLiteral",
																								"src": "11369:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11374:1:8",
																								"nodeType": "YulLiteral",
																								"src": "11374:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11365:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11365:3:8"
																						},
																						"nativeSrc": "11365:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11365:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11378:1:8",
																						"nodeType": "YulLiteral",
																						"src": "11378:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11361:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11361:3:8"
																				},
																				"nativeSrc": "11361:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11361:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11349:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:8"
																		},
																		"nativeSrc": "11349:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11349:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11331:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11331:6:8"
																},
																"nativeSrc": "11331:51:8",
																"nodeType": "YulFunctionCall",
																"src": "11331:51:8"
															},
															"nativeSrc": "11331:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "11331:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11402:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11402:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11413:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11413:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11398:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11398:3:8"
																		},
																		"nativeSrc": "11398:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11398:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11418:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11418:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11391:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11391:6:8"
																},
																"nativeSrc": "11391:34:8",
																"nodeType": "YulFunctionCall",
																"src": "11391:34:8"
															},
															"nativeSrc": "11391:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "11391:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11445:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11445:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11456:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11456:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11441:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11441:3:8"
																		},
																		"nativeSrc": "11441:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11441:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11461:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11461:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11434:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11434:6:8"
																},
																"nativeSrc": "11434:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11434:30:8"
															},
															"nativeSrc": "11434:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11434:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11484:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11484:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11495:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11495:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11480:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11480:3:8"
																		},
																		"nativeSrc": "11480:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11480:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11500:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11500:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11473:6:8"
																},
																"nativeSrc": "11473:29:8",
																"nodeType": "YulFunctionCall",
																"src": "11473:29:8"
															},
															"nativeSrc": "11473:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "11473:29:8"
														},
														{
															"nativeSrc": "11511:27:8",
															"nodeType": "YulAssignment",
															"src": "11511:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11523:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11523:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11534:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11534:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11519:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11519:3:8"
																},
																"nativeSrc": "11519:19:8",
																"nodeType": "YulFunctionCall",
																"src": "11519:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11511:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11511:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11092:452:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11282:9:8",
														"nodeType": "YulTypedName",
														"src": "11282:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11293:6:8",
														"nodeType": "YulTypedName",
														"src": "11293:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11301:6:8",
														"nodeType": "YulTypedName",
														"src": "11301:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11312:4:8",
														"nodeType": "YulTypedName",
														"src": "11312:4:8",
														"type": ""
													}
												],
												"src": "11092:452:8"
											},
											{
												"body": {
													"nativeSrc": "11734:374:8",
													"nodeType": "YulBlock",
													"src": "11734:374:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11751:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11751:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11766:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11766:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11782:3:8",
																								"nodeType": "YulLiteral",
																								"src": "11782:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11787:1:8",
																								"nodeType": "YulLiteral",
																								"src": "11787:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11778:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11778:3:8"
																						},
																						"nativeSrc": "11778:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11778:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11791:1:8",
																						"nodeType": "YulLiteral",
																						"src": "11791:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11774:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11774:3:8"
																				},
																				"nativeSrc": "11774:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11774:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11762:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11762:3:8"
																		},
																		"nativeSrc": "11762:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11762:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11744:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11744:6:8"
																},
																"nativeSrc": "11744:51:8",
																"nodeType": "YulFunctionCall",
																"src": "11744:51:8"
															},
															"nativeSrc": "11744:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "11744:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11815:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11815:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11826:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11826:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11811:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11811:3:8"
																		},
																		"nativeSrc": "11811:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11811:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11831:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11831:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11804:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11804:6:8"
																},
																"nativeSrc": "11804:34:8",
																"nodeType": "YulFunctionCall",
																"src": "11804:34:8"
															},
															"nativeSrc": "11804:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "11804:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11858:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11858:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11869:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11869:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11854:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11854:3:8"
																		},
																		"nativeSrc": "11854:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11854:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11874:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11874:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11847:6:8"
																},
																"nativeSrc": "11847:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11847:30:8"
															},
															"nativeSrc": "11847:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11847:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11897:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11897:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11908:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11908:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11893:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11893:3:8"
																		},
																		"nativeSrc": "11893:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11893:18:8"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11913:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11913:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11886:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11886:6:8"
																},
																"nativeSrc": "11886:34:8",
																"nodeType": "YulFunctionCall",
																"src": "11886:34:8"
															},
															"nativeSrc": "11886:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "11886:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11946:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11946:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11957:3:8",
																				"nodeType": "YulLiteral",
																				"src": "11957:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11942:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11942:3:8"
																		},
																		"nativeSrc": "11942:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11942:19:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11963:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11963:6:8"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11971:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11971:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "11929:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "11929:12:8"
																},
																"nativeSrc": "11929:49:8",
																"nodeType": "YulFunctionCall",
																"src": "11929:49:8"
															},
															"nativeSrc": "11929:49:8",
															"nodeType": "YulExpressionStatement",
															"src": "11929:49:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12002:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12002:9:8"
																					},
																					{
																						"name": "value3",
																						"nativeSrc": "12013:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12013:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11998:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11998:3:8"
																				},
																				"nativeSrc": "11998:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11998:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12022:3:8",
																				"nodeType": "YulLiteral",
																				"src": "12022:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11994:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11994:3:8"
																		},
																		"nativeSrc": "11994:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11994:32:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12028:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12028:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11987:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11987:6:8"
																},
																"nativeSrc": "11987:43:8",
																"nodeType": "YulFunctionCall",
																"src": "11987:43:8"
															},
															"nativeSrc": "11987:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "11987:43:8"
														},
														{
															"nativeSrc": "12039:63:8",
															"nodeType": "YulAssignment",
															"src": "12039:63:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12055:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12055:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value3",
																								"nativeSrc": "12074:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "12074:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12082:2:8",
																								"nodeType": "YulLiteral",
																								"src": "12082:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12070:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12070:3:8"
																						},
																						"nativeSrc": "12070:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12070:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12091:2:8",
																								"nodeType": "YulLiteral",
																								"src": "12091:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "12087:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12087:3:8"
																						},
																						"nativeSrc": "12087:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12087:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "12066:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12066:3:8"
																				},
																				"nativeSrc": "12066:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12066:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12051:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12051:3:8"
																		},
																		"nativeSrc": "12051:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12051:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12098:3:8",
																		"nodeType": "YulLiteral",
																		"src": "12098:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12047:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12047:3:8"
																},
																"nativeSrc": "12047:55:8",
																"nodeType": "YulFunctionCall",
																"src": "12047:55:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12039:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12039:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11549:559:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11679:9:8",
														"nodeType": "YulTypedName",
														"src": "11679:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11690:6:8",
														"nodeType": "YulTypedName",
														"src": "11690:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11698:6:8",
														"nodeType": "YulTypedName",
														"src": "11698:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11706:6:8",
														"nodeType": "YulTypedName",
														"src": "11706:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11714:6:8",
														"nodeType": "YulTypedName",
														"src": "11714:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11725:4:8",
														"nodeType": "YulTypedName",
														"src": "11725:4:8",
														"type": ""
													}
												],
												"src": "11549:559:8"
											},
											{
												"body": {
													"nativeSrc": "12193:210:8",
													"nodeType": "YulBlock",
													"src": "12193:210:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12239:16:8",
																"nodeType": "YulBlock",
																"src": "12239:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12248:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12248:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12251:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12251:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12241:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12241:6:8"
																			},
																			"nativeSrc": "12241:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12241:12:8"
																		},
																		"nativeSrc": "12241:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12241:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12214:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12214:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12223:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12223:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:8"
																		},
																		"nativeSrc": "12210:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12210:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12235:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12235:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12206:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12206:3:8"
																},
																"nativeSrc": "12206:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12206:32:8"
															},
															"nativeSrc": "12203:52:8",
															"nodeType": "YulIf",
															"src": "12203:52:8"
														},
														{
															"nativeSrc": "12264:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12264:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12283:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12283:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12277:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12277:5:8"
																},
																"nativeSrc": "12277:16:8",
																"nodeType": "YulFunctionCall",
																"src": "12277:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12268:5:8",
																	"nodeType": "YulTypedName",
																	"src": "12268:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12357:16:8",
																"nodeType": "YulBlock",
																"src": "12357:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12366:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12366:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12369:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12369:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12359:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12359:6:8"
																			},
																			"nativeSrc": "12359:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12359:12:8"
																		},
																		"nativeSrc": "12359:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12359:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12315:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12315:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12326:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "12326:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12337:3:8",
																								"nodeType": "YulLiteral",
																								"src": "12337:3:8",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12342:10:8",
																								"nodeType": "YulLiteral",
																								"src": "12342:10:8",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12333:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12333:3:8"
																						},
																						"nativeSrc": "12333:20:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12333:20:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "12322:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12322:3:8"
																				},
																				"nativeSrc": "12322:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12322:32:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12312:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12312:2:8"
																		},
																		"nativeSrc": "12312:43:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12312:43:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12305:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12305:6:8"
																},
																"nativeSrc": "12305:51:8",
																"nodeType": "YulFunctionCall",
																"src": "12305:51:8"
															},
															"nativeSrc": "12302:71:8",
															"nodeType": "YulIf",
															"src": "12302:71:8"
														},
														{
															"nativeSrc": "12382:15:8",
															"nodeType": "YulAssignment",
															"src": "12382:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "12392:5:8",
																"nodeType": "YulIdentifier",
																"src": "12392:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12382:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12382:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "12113:290:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12159:9:8",
														"nodeType": "YulTypedName",
														"src": "12159:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12170:7:8",
														"nodeType": "YulTypedName",
														"src": "12170:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12182:6:8",
														"nodeType": "YulTypedName",
														"src": "12182:6:8",
														"type": ""
													}
												],
												"src": "12113:290:8"
											},
											{
												"body": {
													"nativeSrc": "12599:14:8",
													"nodeType": "YulBlock",
													"src": "12599:14:8",
													"statements": [
														{
															"nativeSrc": "12601:10:8",
															"nodeType": "YulAssignment",
															"src": "12601:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "12608:3:8",
																"nodeType": "YulIdentifier",
																"src": "12608:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12601:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12408:205:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12583:3:8",
														"nodeType": "YulTypedName",
														"src": "12583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12591:3:8",
														"nodeType": "YulTypedName",
														"src": "12591:3:8",
														"type": ""
													}
												],
												"src": "12408:205:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_1, 32)\n        value3 := length\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_SwapAbstract_$1509t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$741__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_struct_Permit2Sig_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 128) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_uint256t_struct$_Permit2Sig_$1152_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_struct_Permit2Sig_calldata(add(headStart, 32), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_struct$_Permit2Sig_$1152_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_struct_Permit2Sig_calldata(add(headStart, 64), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n        value4 := abi_decode_uint8(add(headStart, 128))\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 160))\n        value5 := value_4\n        let value_5 := 0\n        value_5 := calldataload(add(headStart, 192))\n        value6 := value_5\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), 0)\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), value3)\n        calldatacopy(add(headStart, 128), value2, value3)\n        mstore(add(add(headStart, value3), 128), 0)\n        tail := add(add(headStart, and(add(value3, 31), not(31))), 128)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"784": [
									{
										"length": 32,
										"start": 1315
									},
									{
										"length": 32,
										"start": 2918
									}
								],
								"786": [
									{
										"length": 32,
										"start": 1882
									},
									{
										"length": 32,
										"start": 4898
									},
									{
										"length": 32,
										"start": 5009
									}
								],
								"788": [
									{
										"length": 32,
										"start": 562
									},
									{
										"length": 32,
										"start": 3065
									}
								],
								"790": [
									{
										"length": 32,
										"start": 1215
									},
									{
										"length": 32,
										"start": 3787
									},
									{
										"length": 32,
										"start": 5181
									}
								],
								"960": [
									{
										"length": 32,
										"start": 1922
									}
								],
								"962": [
									{
										"length": 32,
										"start": 3445
									}
								],
								"964": [
									{
										"length": 32,
										"start": 1780
									},
									{
										"length": 32,
										"start": 2744
									},
									{
										"length": 32,
										"start": 3991
									}
								],
								"1155": [
									{
										"length": 32,
										"start": 945
									},
									{
										"length": 32,
										"start": 2212
									},
									{
										"length": 32,
										"start": 2305
									},
									{
										"length": 32,
										"start": 3143
									},
									{
										"length": 32,
										"start": 3230
									},
									{
										"length": 32,
										"start": 3646
									},
									{
										"length": 32,
										"start": 4448
									},
									{
										"length": 32,
										"start": 4692
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061021d575f3560e01c80637ecebe001161011e578063b3ca7f2a116100a8578063e5aca5991161006d578063e5aca599146106c4578063f172a4ce146106e3578063f2fde38b14610716578063f4d0bd7214610735578063f86329e114610749575f5ffd5b8063b3ca7f2a1461062a578063be45fd621461063e578063d505accf1461065d578063dd62ed3e1461067c578063e46dbd07146106b0575f5ffd5b806394ef2103116100ee57806394ef21031461059a57806395d89b41146105b9578063a9059cbb146105cd578063af4fc206146105ec578063b3841f261461060b575f5ffd5b80637ecebe00146104e157806382e3d8bd146105125780638943ec02146105455780638da5cb5b1461057d575f5ffd5b8063313ce567116101aa5780636263913c1161016f5780636263913c1461042957806370a0823114610448578063715018a6146104795780637b383f181461048f5780637cc27b40146104ae575f5ffd5b8063313ce567146103715780633644e5151461038c57806338d52e0f146103a05780634206abe9146103eb5780636032f6001461040a575f5ffd5b806312958a6b116101f057806312958a6b146102ee57806317b311671461030f57806318160ddd1461032e578063223ecf7e1461034a57806323b872dd14610352575f5ffd5b8063058d15731461022157806306fdde0314610271578063095ea7b31461029257806310ab2d01146102c1575b5f5ffd5b34801561022c575f5ffd5b506102547f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b0390911681526020015b60405180910390f35b34801561027c575f5ffd5b5061028561077c565b60405161026891906115ca565b34801561029d575f5ffd5b506102b16102ac3660046115f0565b6107bf565b6040519015158152602001610268565b3480156102cc575f5ffd5b506102e06102db36600461161a565b61080f565b60405161026892919061169f565b6103016102fc3660046116b9565b610882565b604051908152602001610268565b34801561031a575f5ffd5b506103016103293660046116d4565b61089d565b348015610339575f5ffd5b506805345cdf77eb68f44c54610301565b610301610a01565b34801561035d575f5ffd5b506102b161036c366004611713565b610a10565b34801561037c575f5ffd5b5060405160128152602001610268565b348015610397575f5ffd5b50610301610ab5565b3480156103ab575f5ffd5b506103d37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610268565b3480156103f6575f5ffd5b50610301610405366004611751565b610b57565b348015610415575f5ffd5b50610301610424366004611751565b610bb9565b348015610434575f5ffd5b5061030161044336600461177e565b610bc4565b348015610453575f5ffd5b506103016104623660046116b9565b6387a211a2600c9081525f91909152602090205490565b348015610484575f5ffd5b5061048d610bd7565b005b34801561049a575f5ffd5b506103016104a9366004611751565b610bea565b3480156104b9575f5ffd5b506102547f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ec575f5ffd5b506103016104fb3660046116b9565b6338377508600c9081525f91909152602090205490565b34801561051d575f5ffd5b506102547f000000000000000000000000000000000000000000000000000000000000000081565b348015610550575f5ffd5b5061056461055f36600461161a565b610c3b565b6040516001600160e01b03199091168152602001610268565b348015610588575f5ffd5b506002546001600160a01b03166103d3565b3480156105a5575f5ffd5b506103016105b43660046117a9565b610c93565b3480156105c4575f5ffd5b50610285610d6f565b3480156105d8575f5ffd5b506102b16105e73660046115f0565b610da2565b3480156105f7575f5ffd5b506103016106063660046116d4565b610e06565b348015610616575f5ffd5b506103016106253660046117e5565b610ea8565b348015610635575f5ffd5b50610301610ec8565b348015610649575f5ffd5b506102b161065836600461161a565b610f0b565b348015610668575f5ffd5b5061048d610677366004611823565b610f95565b348015610687575f5ffd5b5061030161069636600461188d565b602052637f5e9f20600c9081525f91909152603490205490565b3480156106bb575f5ffd5b506103015f5481565b3480156106cf575f5ffd5b506103016106de3660046116d4565b61113f565b3480156106ee575f5ffd5b506103017f000000000000000000000000000000000000000000000000000000000000000081565b348015610721575f5ffd5b5061048d6107303660046116b9565b6112dd565b348015610740575f5ffd5b5061030161131f565b348015610754575f5ffd5b506102547f000000000000000000000000000000000000000000000000000000000000000081565b604080517f00000000000000000000000000000000000000000000000000000000000000006020820152606091015b604051602081830303815290604052905090565b5f82602052637f5e9f20600c52335f52816034600c2055815f52602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560205fa35060015b92915050565b5f606061081a611357565b856001600160a01b03168585856040516108359291906118b9565b5f6040518083038185875af1925050503d805f811461086f576040519150601f19603f3d011682016040523d82523d5f602084013e610874565b606091505b509150915094509492505050565b5f61088c34610bea565b90506108988282611384565b919050565b5f5f4790507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b03161461096d5760405163095ea7b360e01b81526001600160a01b038681166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303815f875af1158015610947573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061096b91906118c8565b505b6040516230197b60e91b8152600481018590526001600160a01b03861690636032f600906024016020604051808303815f875af11580156109b0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d491906118e7565b50836109e36104a98347611912565b6109ed9190611912565b91506109f98383611384565b509392505050565b5f610a0b33610882565b905090565b5f8360601b33602052637f5e9f208117600c526034600c208054801915610a4c5780851115610a46576313be252b5f526004601cfd5b84810382555b50506387a211a28117600c526020600c20805480851115610a745763f4d678b85f526004601cfd5b84810382555050835f526020600c208381540181555082602052600c5160601c8160601c5f5160206119f65f395f51905f52602080a3505060019392505050565b5f7f000000000000000000000000000000000000000000000000000000000000000080610aee57610ae461077c565b8051906020012090505b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815260208101929092527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69082015246606082015230608082015260a09020919050565b5f610b8b826001600160801b037f000000000000000000000000000000000000000000000000000000000000000016611925565b82610b94610ec8565b610b9e9190611938565b610ba8919061194f565b905080471015610898575047919050565b5f6108098233610ea8565b5f610bd0833384610c93565b9392505050565b610bdf611357565b610be85f6113df565b565b5f610c1e826001600160801b037f000000000000000000000000000000000000000000000000000000000000000016611925565b82610c2761131f565b610c319190611938565b610809919061194f565b5f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c70575f5ffd5b610c8285610c7d86610b57565b611430565b506344a1f60160e11b949350505050565b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d505accf3330878635610cd86040890160208a0161196e565b604080516001600160e01b031960e089901b1681526001600160a01b0396871660048201529590941660248601526044850192909252606484015260ff16608483015285013560a4820152606085013560c482015260e4015f604051808303815f87803b158015610d47575f5ffd5b505af1158015610d59573d5f5f3e3d5ffd5b50505050610d678484610ea8565b949350505050565b604080517f00000000000000000000000000000000000000000000000000000000000000006020820152606091016107ab565b5f6387a211a2600c52335f526020600c20805480841115610dca5763f4d678b85f526004601cfd5b83810382555050825f526020600c208281540181555081602052600c5160601c335f5160206119f65f395f51905f52602080a350600192915050565b604051635f22feb160e11b81526001600160a01b03848116600483015260248201849052606060448301525f606483018190529147917f0000000000000000000000000000000000000000000000000000000000000000169063be45fd62906084016020604051808303815f875af1158015610e84573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d491906118c8565b5f610eb283610b57565b9050610ebe33846114d2565b6108098282611430565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160801b031660015442610f019190611912565b610a0b9190611938565b5f610f168585610da2565b506040516344a1f60160e11b81526001600160a01b03861690638943ec0290610f49903390889088908890600401611987565b6020604051808303815f875af1158015610f65573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f8991906119ce565b50600195945050505050565b7f000000000000000000000000000000000000000000000000000000000000000080610fcd57610fc361077c565b8051906020012090505b7fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64286101561100357631a15a3cc5f526004601cfd5b6040518960601b60601c99508860601b60601c985065383775081901600e52895f526020600c2080547f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835284602084015283604084015246606084015230608084015260a08320602e527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528b60208401528a60408401528960608401528060808401528860a084015260c08320604e526042602c205f528760ff16602052866040528560605260208060805f60015afa8c3d51146110eb5763ddafbaef5f526004601cfd5b0190556303faf4f960a51b89176040526034602c20889055888a7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060608501a360405250505f60605250505050505050565b6040516370a0823160e01b81523060048201525f9081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156111a5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111c991906118e7565b9050846001600160a01b031663223ecf7e856040518263ffffffff1660e01b815260040160206040518083038185885af1158015611209573d5f5f3e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061122e91906118e7565b506040516370a0823160e01b815230600482015284906112c79083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611299573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112bd91906118e7565b6104059190611912565b6112d19190611912565b91506109f98383611430565b6112e5611357565b6001600160a01b03811661131357604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61131c816113df565b50565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160801b03165f5442610f019190611912565b6002546001600160a01b03163314610be85760405163118cdaa760e01b815233600482015260240161130a565b6113b76001600160801b037f0000000000000000000000000000000000000000000000000000000000000000168261194f565b5f5f8282546113c69190611925565b909155506113d690508282611533565b5050565b505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6114636001600160801b037f0000000000000000000000000000000000000000000000000000000000000000168261194f565b60015f8282546114739190611925565b90915550506040515f906001600160a01b0384169083908381818185875af1925050503d805f81146114c0576040519150601f19603f3d011682016040523d82523d5f602084013e6114c5565b606091505b50509050806113da575f5ffd5b6387a211a2600c52815f526020600c208054808311156114f95763f4d678b85f526004601cfd5b82900390556805345cdf77eb68f44c805482900390555f8181526001600160a01b0383165f5160206119f65f395f51905f52602083a35050565b6805345cdf77eb68f44c54818101818110156115565763e5cfe9575f526004601cfd5b806805345cdf77eb68f44c5550506387a211a2600c52815f526020600c208181540181555080602052600c5160601c5f5f5160206119f65f395f51905f52602080a35050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610bd0602083018461159c565b6001600160a01b038116811461131c575f5ffd5b5f5f60408385031215611601575f5ffd5b823561160c816115dc565b946020939093013593505050565b5f5f5f5f6060858703121561162d575f5ffd5b8435611638816115dc565b935060208501359250604085013567ffffffffffffffff81111561165a575f5ffd5b8501601f8101871361166a575f5ffd5b803567ffffffffffffffff811115611680575f5ffd5b876020828401011115611691575f5ffd5b949793965060200194505050565b8215158152604060208201525f610d67604083018461159c565b5f602082840312156116c9575f5ffd5b8135610bd0816115dc565b5f5f5f606084860312156116e6575f5ffd5b83356116f1816115dc565b9250602084013591506040840135611708816115dc565b809150509250925092565b5f5f5f60608486031215611725575f5ffd5b8335611730816115dc565b92506020840135611740816115dc565b929592945050506040919091013590565b5f60208284031215611761575f5ffd5b5035919050565b5f60808284031215611778575f5ffd5b50919050565b5f5f60a0838503121561178f575f5ffd5b823591506117a08460208501611768565b90509250929050565b5f5f5f60c084860312156117bb575f5ffd5b8335925060208401356117cd816115dc565b91506117dc8560408601611768565b90509250925092565b5f5f604083850312156117f6575f5ffd5b823591506020830135611808816115dc565b809150509250929050565b803560ff81168114610898575f5ffd5b5f5f5f5f5f5f5f60e0888a031215611839575f5ffd5b8735611844816115dc565b96506020880135611854816115dc565b9550604088013594506060880135935061187060808901611813565b9699959850939692959460a0840135945060c09093013592915050565b5f5f6040838503121561189e575f5ffd5b82356118a9816115dc565b91506020830135611808816115dc565b818382375f9101908152919050565b5f602082840312156118d8575f5ffd5b81518015158114610bd0575f5ffd5b5f602082840312156118f7575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610809576108096118fe565b80820180821115610809576108096118fe565b8082028115828204841417610809576108096118fe565b5f8261196957634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561197e575f5ffd5b610bd082611813565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301375f818301608090810191909152601f909201601f191601019392505050565b5f602082840312156119de575f5ffd5b81516001600160e01b031981168114610bd0575f5ffdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122078fbabb9203af5204125aa17e7f23569188d6f71eaf067a5ee3ce7d06434200d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x11E JUMPI DUP1 PUSH4 0xB3CA7F2A GT PUSH2 0xA8 JUMPI DUP1 PUSH4 0xE5ACA599 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xE5ACA599 EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xF172A4CE EQ PUSH2 0x6E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xF4D0BD72 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0xF86329E1 EQ PUSH2 0x749 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB3CA7F2A EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xBE45FD62 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0xE46DBD07 EQ PUSH2 0x6B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x94EF2103 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x94EF2103 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xAF4FC206 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xB3841F26 EQ PUSH2 0x60B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x82E3D8BD EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x8943EC02 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x57D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1AA JUMPI DUP1 PUSH4 0x6263913C GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x6263913C EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x7B383F18 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x7CC27B40 EQ PUSH2 0x4AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x4206ABE9 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x6032F600 EQ PUSH2 0x40A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x12958A6B GT PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x12958A6B EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x17B31167 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x223ECF7E EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x352 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x58D1573 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x10AB2D01 EQ PUSH2 0x2C1 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x254 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP3 SWAP2 SWAP1 PUSH2 0x169F JUMP JUMPDEST PUSH2 0x301 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH9 0x5345CDF77EB68F44C SLOAD PUSH2 0x301 JUMP JUMPDEST PUSH2 0x301 PUSH2 0xA01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1713 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0xAB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x177E JUMP JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH4 0x87A211A2 PUSH1 0xC SWAP1 DUP2 MSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48D PUSH2 0xBD7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x254 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH4 0x38377508 PUSH1 0xC SWAP1 DUP2 MSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x254 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x564 PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0xD6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0xDA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x606 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0xEA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x635 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0xEC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48D PUSH2 0x677 CALLDATASIZE PUSH1 0x4 PUSH2 0x1823 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC SWAP1 DUP2 MSTORE PUSH0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x6DE CALLDATASIZE PUSH1 0x4 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x113F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48D PUSH2 0x730 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x12DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x131F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x254 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 PUSH1 0xC MSTORE CALLER PUSH0 MSTORE DUP2 PUSH1 0x34 PUSH1 0xC KECCAK256 SSTORE DUP2 PUSH0 MSTORE PUSH1 0x2C MLOAD PUSH1 0x60 SHR CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH0 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x81A PUSH2 0x1357 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x835 SWAP3 SWAP2 SWAP1 PUSH2 0x18B9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88C CALLVALUE PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP PUSH2 0x898 DUP3 DUP3 PUSH2 0x1384 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SELFBALANCE SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x30197B PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x6032F600 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D4 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST POP DUP4 PUSH2 0x9E3 PUSH2 0x4A9 DUP4 SELFBALANCE PUSH2 0x1912 JUMP JUMPDEST PUSH2 0x9ED SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F9 DUP4 DUP4 PUSH2 0x1384 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA0B CALLER PUSH2 0x882 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x60 SHL CALLER PUSH1 0x20 MSTORE PUSH4 0x7F5E9F20 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x34 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 NOT ISZERO PUSH2 0xA4C JUMPI DUP1 DUP6 GT ISZERO PUSH2 0xA46 JUMPI PUSH4 0x13BE252B PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP5 DUP2 SUB DUP3 SSTORE JUMPDEST POP POP PUSH4 0x87A211A2 DUP2 OR PUSH1 0xC MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP6 GT ISZERO PUSH2 0xA74 JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP5 DUP2 SUB DUP3 SSTORE POP POP DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP4 DUP2 SLOAD ADD DUP2 SSTORE POP DUP3 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR DUP2 PUSH1 0x60 SHR PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F6 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 DUP1 LOG3 POP POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 DUP1 PUSH2 0xAEE JUMPI PUSH2 0xAE4 PUSH2 0x77C JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP1 DUP3 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 SWAP1 KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB8B DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH32 0x0 AND PUSH2 0x1925 JUMP JUMPDEST DUP3 PUSH2 0xB94 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0xB9E SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x898 JUMPI POP SELFBALANCE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x809 DUP3 CALLER PUSH2 0xEA8 JUMP JUMPDEST PUSH0 PUSH2 0xBD0 DUP4 CALLER DUP5 PUSH2 0xC93 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBDF PUSH2 0x1357 JUMP JUMPDEST PUSH2 0xBE8 PUSH0 PUSH2 0x13DF JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xC1E DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH32 0x0 AND PUSH2 0x1925 JUMP JUMPDEST DUP3 PUSH2 0xC27 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC70 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC82 DUP6 PUSH2 0xC7D DUP7 PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x1430 JUMP JUMPDEST POP PUSH4 0x44A1F601 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD505ACCF CALLER ADDRESS DUP8 DUP7 CALLDATALOAD PUSH2 0xCD8 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x196E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP10 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0x84 DUP4 ADD MSTORE DUP6 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD47 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD59 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD67 DUP5 DUP5 PUSH2 0xEA8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 ADD PUSH2 0x7AB JUMP JUMPDEST PUSH0 PUSH4 0x87A211A2 PUSH1 0xC MSTORE CALLER PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0xDCA JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP4 DUP2 SUB DUP3 SSTORE POP POP DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP3 DUP2 SLOAD ADD DUP2 SSTORE POP DUP2 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR CALLER PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F6 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 DUP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5F22FEB1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x44 DUP4 ADD MSTORE PUSH0 PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SELFBALANCE SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xBE45FD62 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE84 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D4 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST PUSH0 PUSH2 0xEB2 DUP4 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP PUSH2 0xEBE CALLER DUP5 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x809 DUP3 DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0xF01 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH0 PUSH2 0xF16 DUP6 DUP6 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x44A1F601 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x8943EC02 SWAP1 PUSH2 0xF49 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF65 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x19CE JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP1 PUSH2 0xFCD JUMPI PUSH2 0xFC3 PUSH2 0x77C JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 TIMESTAMP DUP7 LT ISZERO PUSH2 0x1003 JUMPI PUSH4 0x1A15A3CC PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x40 MLOAD DUP10 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP10 POP DUP9 PUSH1 0x60 SHL PUSH1 0x60 SHR SWAP9 POP PUSH6 0x383775081901 PUSH1 0xE MSTORE DUP10 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP4 MSTORE DUP5 PUSH1 0x20 DUP5 ADD MSTORE DUP4 PUSH1 0x40 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP5 ADD MSTORE ADDRESS PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 KECCAK256 PUSH1 0x2E MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP4 MSTORE DUP12 PUSH1 0x20 DUP5 ADD MSTORE DUP11 PUSH1 0x40 DUP5 ADD MSTORE DUP10 PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MSTORE DUP9 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 KECCAK256 PUSH1 0x4E MSTORE PUSH1 0x42 PUSH1 0x2C KECCAK256 PUSH0 MSTORE DUP8 PUSH1 0xFF AND PUSH1 0x20 MSTORE DUP7 PUSH1 0x40 MSTORE DUP6 PUSH1 0x60 MSTORE PUSH1 0x20 DUP1 PUSH1 0x80 PUSH0 PUSH1 0x1 GAS STATICCALL DUP13 RETURNDATASIZE MLOAD EQ PUSH2 0x10EB JUMPI PUSH4 0xDDAFBAEF PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST ADD SWAP1 SSTORE PUSH4 0x3FAF4F9 PUSH1 0xA5 SHL DUP10 OR PUSH1 0x40 MSTORE PUSH1 0x34 PUSH1 0x2C KECCAK256 DUP9 SWAP1 SSTORE DUP9 DUP11 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 PUSH1 0x60 DUP6 ADD LOG3 PUSH1 0x40 MSTORE POP POP PUSH0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C9 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x223ECF7E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1209 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP1 PUSH2 0x12C7 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1299 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12BD SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH2 0x12D1 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F9 DUP4 DUP4 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x12E5 PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1313 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x13DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH0 SLOAD TIMESTAMP PUSH2 0xF01 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x130A JUMP JUMPDEST PUSH2 0x13B7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH32 0x0 AND DUP3 PUSH2 0x194F JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13C6 SWAP2 SWAP1 PUSH2 0x1925 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x13D6 SWAP1 POP DUP3 DUP3 PUSH2 0x1533 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1463 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH32 0x0 AND DUP3 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1473 SWAP2 SWAP1 PUSH2 0x1925 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP1 SLOAD DUP1 DUP4 GT ISZERO PUSH2 0x14F9 JUMPI PUSH4 0xF4D678B8 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP3 SWAP1 SUB SWAP1 SSTORE PUSH9 0x5345CDF77EB68F44C DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F6 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 DUP4 LOG3 POP POP JUMP JUMPDEST PUSH9 0x5345CDF77EB68F44C SLOAD DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0x1556 JUMPI PUSH4 0xE5CFE957 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST DUP1 PUSH9 0x5345CDF77EB68F44C SSTORE POP POP PUSH4 0x87A211A2 PUSH1 0xC MSTORE DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH1 0xC KECCAK256 DUP2 DUP2 SLOAD ADD DUP2 SSTORE POP DUP1 PUSH1 0x20 MSTORE PUSH1 0xC MLOAD PUSH1 0x60 SHR PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x19F6 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 DUP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xBD0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x131C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1601 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x160C DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x162D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1638 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x166A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1680 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1691 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xD67 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBD0 DUP2 PUSH2 0x15DC JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x16F1 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1708 DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1725 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1730 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1740 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1778 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xA0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x17A0 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x17CD DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP2 POP PUSH2 0x17DC DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1808 DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x898 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1839 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1844 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1854 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1870 PUSH1 0x80 DUP10 ADD PUSH2 0x1813 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x189E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18A9 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1808 DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBD0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x18FE JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x18FE JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x18FE JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1969 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBD0 DUP3 PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBD0 JUMPI PUSH0 PUSH0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xFBABB9203AF5204125AA17E7F23569188D6F71EAF067A5EE3C 0xE7 0xD0 PUSH5 0x34200D6473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "1822:1816:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:44:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;178:47:8;;;160:66;;148:2;133:18;268:44:5;;;;;;;;2499:117:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8175:1029:3:-;;;;;;;;;;-1:-1:-1;8175:1029:3;;;;;:::i;:::-;;:::i;:::-;;;1429:14:8;;1422:22;1404:41;;1392:2;1377:18;8175:1029:3;1264:187:8;2757:180:6;;;;;;;;;;-1:-1:-1;2757:180:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1137:195:7:-;;;;;;:::i;:::-;;:::i;:::-;;;3004:25:8;;;2992:2;2977:18;1137:195:7;2858:177:8;3295:541:7;;;;;;;;;;-1:-1:-1;3295:541:7;;;;;:::i;:::-;;:::i;6907:195:3:-;;;;;;;;;;-1:-1:-1;7067:18:3;7061:25;6907:195;;2253:129:7;;;:::i;11165:4753:3:-;;;;;;;;;;-1:-1:-1;11165:4753:3;;;;;:::i;:::-;;:::i;6480:82::-;;;;;;;;;;-1:-1:-1;6480:82:3;;6553:2;4229:36:8;;4217:2;4202:18;6480:82:3;4087:184:8;21458:737:3;;;;;;;;;;;;;:::i;369:28:7:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4635:32:8;;;4617:51;;4605:2;4590:18;369:28:7;4458:216:8;1259:311:5;;;;;;;;;;-1:-1:-1;1259:311:5;;;;;:::i;:::-;;:::i;2098:147:7:-;;;;;;;;;;-1:-1:-1;2098:147:7;;;;;:::i;:::-;;:::i;2705:177::-;;;;;;;;;;-1:-1:-1;2705:177:7;;;;;:::i;:::-;;:::i;7168:286:3:-;;;;;;;;;;-1:-1:-1;7168:286:3;;;;;:::i;:::-;7336:18;7330:4;7323:32;;;7231:14;7368:19;;;;7432:4;7416:21;;7410:28;;7168:286;2293:101:0;;;;;;;;;;;;;:::i;:::-;;2945:188:6;;;;;;;;;;-1:-1:-1;2945:188:6;;;;;:::i;:::-;;:::i;319:42:5:-;;;;;;;;;;;;;;;17137:340:3;;;;;;;;;;-1:-1:-1;17137:340:3;;;;;:::i;:::-;17360:17;17354:4;17347:31;;;17197:14;17391:19;;;;17455:4;17439:21;;17433:28;;17137:340;170:43:5;;;;;;;;;;;;;;;1759:301:7;;;;;;;;;;-1:-1:-1;1759:301:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;5600:33:8;;;5582:52;;5570:2;5555:18;1759:301:7;5438:202:8;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;2420:273:7;;;;;;;;;;-1:-1:-1;2420:273:7;;;;;:::i;:::-;;:::i;2628:121:6:-;;;;;;;;;;;;;:::i;9391:1406:3:-;;;;;;;;;;-1:-1:-1;9391:1406:3;;;;;:::i;:::-;;:::i;3974:391:7:-;;;;;;;;;;-1:-1:-1;3974:391:7;;;;;:::i;:::-;;:::i;3361:270:6:-;;;;;;;;;;-1:-1:-1;3361:270:6;;;;;:::i;:::-;;:::i;973:137:5:-;;;;;;;;;;;;;:::i;309:240:4:-;;;;;;;;;;-1:-1:-1;309:240:4;;;;;:::i;:::-;;:::i;17661:3716:3:-;;;;;;;;;;-1:-1:-1;17661:3716:3;;;;;:::i;:::-;;:::i;7549:495::-;;;;;;;;;;-1:-1:-1;7549:495:3;;;;;:::i;:::-;7884:4;7877:21;7924:20;7918:4;7911:34;;;7965:4;7958:19;;;;8022:4;8006:21;;8000:28;;7549:495;374:46:5;;;;;;;;;;;;;;;;2890:397:7;;;;;;;;;;-1:-1:-1;2890:397:7;;;;;:::i;:::-;;:::i;2060:33:6:-;;;;;;;;;;;;;;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1118:133:5:-;;;;;;;;;;;;;:::i;220:41::-;;;;;;;;;;;;;;;2499:117:6;2584:23;;;2601:5;2584:23;;;8360:19:8;2545:13:6;;8395:12:8;2584:23:6;;;;;;;;;;;;;2570:38;;2499:117;:::o;8175:1029:3:-;8249:4;8864:7;8858:4;8851:21;8898:20;8892:4;8885:34;8945:8;8939:4;8932:22;8997:6;8990:4;8984;8974:21;8967:37;9072:6;9066:4;9059:20;9160:4;9154:11;9150:2;9146:20;9136:8;9109:25;9103:4;9097;9092:75;-1:-1:-1;9193:4:3;8175:1029;;;;;:::o;2757:180:6:-;2846:12;2860:23;1531:13:0;:11;:13::i;:::-;2903:2:6::1;-1:-1:-1::0;;;;;2903:7:6::1;2917:5;2924:4;;2903:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2896:33;;;;2757:180:::0;;;;;;;:::o;1137:195:7:-;1200:17;1245:29;1264:9;1245:18;:29::i;:::-;1230:44;;1285:39;1307:2;1311:12;1285:21;:39::i;:::-;1137:195;;;:::o;3295:541::-;3386:17;3416;3436:21;3416:41;;3496:5;-1:-1:-1;;;;;3473:29:7;3481:2;-1:-1:-1;;;;;3473:29:7;;3470:165;;3586:37;;-1:-1:-1;;;3586:37:7;;-1:-1:-1;;;;;8886:32:8;;;3586:37:7;;;8868:51:8;8935:18;;;8928:34;;;3586:5:7;:13;;;;8841:18:8;;3586:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3470:165;3647:32;;-1:-1:-1;;;3647:32:7;;;;;3004:25:8;;;-1:-1:-1;;;;;3647:20:7;;;;;2977:18:8;;3647:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3766:10:7;3707:56;3726:36;3750:12;3726:21;:36;:::i;3707:56::-;:69;;;;:::i;:::-;3692:84;;3789:39;3811:2;3815:12;3789:21;:39::i;:::-;3405:431;3295:541;;;;;:::o;2253:129::-;2308:17;2345:29;2363:10;2345:17;:29::i;:::-;2338:36;;2253:129;:::o;11165:4753:3:-;11253:4;13811;13807:2;13803:13;13912:8;13906:4;13899:22;13961:20;13954:5;13951:31;13945:4;13938:45;14037:4;14031;14021:21;14083:13;14077:20;14191:10;14187:15;14184:447;;;14324:10;14316:6;14313:22;14310:171;;;14375:10;14369:4;14362:24;14454:4;14448;14441:18;14310:171;14605:6;14593:10;14589:23;14574:13;14567:46;14184:447;;;14735:18;14728:5;14725:29;14719:4;14712:43;14811:4;14805;14795:21;14858:15;14852:22;14956:11;14948:6;14945:23;14942:158;;;15004:10;14998:4;14991:24;15077:4;15071;15064:18;14942:158;15217:6;15204:11;15200:24;15183:15;15176:49;;;15308:2;15302:4;15295:16;15365:4;15359;15349:21;15631:6;15615:13;15609:20;15605:33;15590:13;15583:56;;15715:6;15709:4;15702:20;15813:4;15807:11;15803:2;15799:20;15791:5;15787:2;15783:14;-1:-1:-1;;;;;;;;;;;15750:4:3;15744;15739:81;;-1:-1:-1;15907:4:3;11165:4753;;;;;:::o;21458:737::-;21515:14;2475:8:6;;21683:63:3;;21738:6;:4;:6::i;:::-;21722:24;;;;;;21711:35;;21683:63;21883:4;21877:11;;21944:16;21934:27;;21988:4;21981:12;;21974:30;;;;5177:66;22024:12;;;22017:33;22084:9;22077:4;22070:12;;22063:31;22128:9;22121:4;22114:12;;22107:31;22174:4;22161:18;;;;-1:-1:-1;21458:737:3:o;1259:311:5:-;1334:18;1414:31;1435:10;-1:-1:-1;;;;;1414:18:5;:31;;:::i;:::-;1400:10;1381:16;:14;:16::i;:::-;:29;;;;:::i;:::-;:65;;;;:::i;:::-;1365:81;;1484:13;1460:21;:37;1457:106;;;-1:-1:-1;1530:21:5;1259:311;;;:::o;2098:147:7:-;2158:18;2196:41;2214:10;2226;2196:17;:41::i;2705:177::-;2792:18;2830:44;2848:10;2859;2870:3;2830:17;:44::i;:::-;2823:51;2705:177;-1:-1:-1;;;2705:177:7:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2945:188:6:-;3021:17;3091:33;3113:11;-1:-1:-1;;;;;3091:19:6;:33;;:::i;:::-;3076:11;3058:15;:13;:15::i;:::-;:29;;;;:::i;:::-;:67;;;;:::i;1759:301:7:-;1842:6;1888:10;-1:-1:-1;;;;;1910:5:7;1888:28;;1880:37;;;;;;1967:55;1990:4;1996:25;2015:5;1996:18;:25::i;:::-;1967:22;:55::i;:::-;-1:-1:-1;;;;1759:301:7;;;;;;:::o;2420:273::-;2517:18;-1:-1:-1;;;;;2548:5:7;:12;;2561:10;2581:4;2588:10;2600:12;;2614:5;;;;;;;;:::i;:::-;2621;2548:86;;-1:-1:-1;;;;;;2548:86:7;;;;;;;-1:-1:-1;;;;;10750:32:8;;;2548:86:7;;;10732:51:8;10819:32;;;;10799:18;;;10792:60;10868:18;;;10861:34;;;;10911:18;;;10904:34;10987:4;10975:17;10954:19;;;10947:46;2621:5:7;;;11009:19:8;;;11002:35;2628:5:7;;;;11053:19:8;;;11046:35;10704:19;;2548:86:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:33;2670:10;2682:2;2652:17;:33::i;:::-;2645:40;2420:273;-1:-1:-1;;;;2420:273:7:o;2628:121:6:-;2715:25;;;2732:7;2715:25;;;8360:19:8;2676:13:6;;8395:12:8;2715:25:6;8231:182:8;9391:1406:3;9461:4;9670:18;9664:4;9657:32;9715:8;9709:4;9702:22;9776:4;9770;9760:21;9819:15;9813:22;9909:11;9901:6;9898:23;9895:146;;;9953:10;9947:4;9940:24;10022:4;10016;10009:18;9895:146;10150:6;10137:11;10133:24;10116:15;10109:49;;;10233:2;10227:4;10220:16;10286:4;10280;10270:21;10536:6;10520:13;10514:20;10510:33;10495:13;10488:56;;10612:6;10606:4;10599:20;10700:4;10694:11;10690:2;10686:20;10676:8;-1:-1:-1;;;;;;;;;;;10643:4:3;10637;10632:75;-1:-1:-1;10786:4:3;9391:1406;;;;:::o;3974:391:7:-;4150:58;;-1:-1:-1;;;4150:58:7;;-1:-1:-1;;;;;11349:32:8;;;4150:58:7;;;11331:51:8;11398:18;;;11391:34;;;11461:2;11441:18;;;11434:30;4066:17:7;11480:18:8;;;11473:29;;;4066:17:7;4116:21;;4165:5;4150:31;;;;11519:19:8;;4150:58:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3361:270:6:-;3449:18;3496:30;3515:10;3496:18;:30::i;:::-;3480:46;;3537:28;3543:10;3554;3537:5;:28::i;:::-;3576:47;3599:9;3609:13;3576:22;:47::i;973:137:5:-;1020:4;1085:17;-1:-1:-1;;;;;1044:58:5;1063:18;;1045:15;:36;;;;:::i;:::-;1044:58;;;;:::i;309:240:4:-;391:12;421:21;430:3;435:6;421:8;:21::i;:::-;-1:-1:-1;455:62:4;;-1:-1:-1;;;455:62:4;;-1:-1:-1;;;;;455:35:4;;;;;:62;;491:10;;503:6;;511:5;;;;455:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;537:4:4;;309:240;-1:-1:-1;;;;;309:240:4:o;17661:3716:3:-;2475:8:6;;18456:63:3;;18511:6;:4;:6::i;:::-;18495:24;;;;;;18484:35;;18456:63;5177:66;18720:11;18717:25;-1:-1:-1;18714:142:3;;;18774:10;18768:4;18761:24;18837:4;18831;18824:18;18714:142;18884:4;18878:11;19000:5;18996:2;18992:14;18988:2;18984:23;18975:32;;19047:7;19043:2;19039:16;19035:2;19031:25;19020:36;;19140:39;19134:4;19127:53;19206:5;19200:4;19193:19;19258:4;19252;19242:21;19300:9;19294:16;19378;19375:1;19368:27;19429:8;19422:4;19419:1;19415:12;19408:30;19472:11;19465:4;19462:1;19458:12;19451:33;19518:9;19511:4;19508:1;19504:12;19497:31;19562:9;19555:4;19552:1;19548:12;19541:31;19611:4;19608:1;19598:18;19592:4;19585:32;19680:16;19677:1;19670:27;19731:5;19724:4;19721:1;19717:12;19710:27;19771:7;19764:4;19761:1;19757:12;19750:29;19813:5;19806:4;19803:1;19799:12;19792:27;19853:10;19846:4;19843:1;19839:12;19832:32;19898:8;19891:4;19888:1;19884:12;19877:30;19946:4;19943:1;19933:18;19927:4;19920:32;20041:4;20035;20025:21;20019:4;20012:35;20083:1;20077:4;20073:12;20067:4;20060:26;20112:1;20106:4;20099:15;20140:1;20134:4;20127:15;20203:4;20197;20191;20185;20182:1;20175:5;20164:44;20624:5;20605:16;20599:23;20596:34;20586:159;;20663:10;20657:4;20650:24;20726:4;20720;20713:18;20586:159;20830:18;20812:37;;-1:-1:-1;;;21025:43:3;;21019:4;21012:57;21105:4;21099;21089:21;21082:36;;;21060:7;21225:5;21198:25;-1:-1:-1;21185:4:3;21178:12;;21173:67;21260:4;21253:15;-1:-1:-1;;21330:1:3;21324:4;21317:15;-1:-1:-1;;;;;;;17661:3716:3:o;2890:397:7:-;3033:30;;-1:-1:-1;;;3033:30:7;;3057:4;3033:30;;;4617:51:8;2982:18:7;;;;-1:-1:-1;;;;;3033:5:7;:15;;;;4590:18:8;;3033:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3013:50;;3076:2;-1:-1:-1;;;;;3076:20:7;;3103:11;3076:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3165:30:7;;-1:-1:-1;;;3165:30:7;;3189:4;3165:30;;;4617:51:8;3214:11:7;;3146:65;;3198:12;;-1:-1:-1;;;;;3165:5:7;:15;;;;4590:18:8;;3165:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;;;:::i;3146:65::-;:79;;;;:::i;:::-;3130:95;;3238:41;3261:2;3265:13;3238:22;:41::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4617:51:8::0;4590:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1118:133:5:-;1164:4;1227:16;-1:-1:-1;;;;;1188:55:5;1207:16;;1189:15;:34;;;;:::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;4617:51:8;4590:18;;1901:40:0;4458:216:8;3141:212:6;3266:25;-1:-1:-1;;;;;3275:16:6;3266:25;:6;:25;:::i;:::-;3246:16;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;3329:16:6;;-1:-1:-1;3335:2:6;3338:6;3329:5;:16::i;:::-;3141:212;;:::o;30066:91:3:-;;;;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;1578:278:5:-;1706:26;-1:-1:-1;;;;;1715:17:5;1706:26;:6;:26;:::i;:::-;1684:18;;:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;1796:25:5;;1779:12;;-1:-1:-1;;;;;1796:7:5;;;1810:6;;1779:12;1796:25;1779:12;1796:25;1810:6;1796:7;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1778:43;;;1840:7;1832:16;;;;;24177:1119:3;24444:18;24438:4;24431:32;24489:4;24483;24476:18;24546:4;24540;24530:21;24589:15;24583:22;24679:11;24671:6;24668:23;24665:146;;;24723:10;24717:4;24710:24;24792:4;24786;24779:18;24665:146;24903:24;;;24879:49;;25038:18;25032:25;;25028:38;;;25001:66;;-1:-1:-1;25122:20:3;;;-1:-1:-1;;;;;25199:22:3;;-1:-1:-1;;;;;;;;;;;25166:4:3;-1:-1:-1;25155:70:3;3141:212:6;;:::o;22599:1172:3:-;22820:18;22814:25;22899:6;22880:17;22876:30;22996:17;22978:16;22975:39;22972:162;;;23046:10;23040:4;23033:24;23115:4;23109;23102:18;22972:162;23221:16;23201:18;23194:44;;;23324:18;23318:4;23311:32;23369:2;23363:4;23356:16;23422:4;23416;23406:21;23538:6;23522:13;23516:20;23512:33;23497:13;23490:56;;23614:6;23608:4;23601:20;23695:4;23689:11;23685:2;23681:20;23678:1;-1:-1:-1;;;;;;;;;;;23645:4:3;23639;23634:68;3141:212:6;;:::o;237:289:8:-;279:3;317:5;311:12;344:6;339:3;332:19;400:6;393:4;386:5;382:16;375:4;370:3;366:14;360:47;452:1;445:4;436:6;431:3;427:16;423:27;416:38;515:4;508:2;504:7;499:2;491:6;487:15;483:29;478:3;474:39;470:50;463:57;;;237:289;;;;:::o;531:220::-;680:2;669:9;662:21;643:4;700:45;741:2;730:9;726:18;718:6;700:45;:::i;756:131::-;-1:-1:-1;;;;;831:31:8;;821:42;;811:70;;877:1;874;867:12;892:367;960:6;968;1021:2;1009:9;1000:7;996:23;992:32;989:52;;;1037:1;1034;1027:12;989:52;1076:9;1063:23;1095:31;1120:5;1095:31;:::i;:::-;1145:5;1223:2;1208:18;;;;1195:32;;-1:-1:-1;;;892:367:8:o;1456:841::-;1544:6;1552;1560;1568;1621:2;1609:9;1600:7;1596:23;1592:32;1589:52;;;1637:1;1634;1627:12;1589:52;1676:9;1663:23;1695:31;1720:5;1695:31;:::i;:::-;1745:5;-1:-1:-1;1823:2:8;1808:18;;1795:32;;-1:-1:-1;1904:2:8;1889:18;;1876:32;1931:18;1920:30;;1917:50;;;1963:1;1960;1953:12;1917:50;1986:22;;2039:4;2031:13;;2027:27;-1:-1:-1;2017:55:8;;2068:1;2065;2058:12;2017:55;2108:2;2095:16;2134:18;2126:6;2123:30;2120:50;;;2166:1;2163;2156:12;2120:50;2211:7;2206:2;2197:6;2193:2;2189:15;2185:24;2182:37;2179:57;;;2232:1;2229;2222:12;2179:57;1456:841;;;;-1:-1:-1;2263:2:8;2255:11;;-1:-1:-1;;;1456:841:8:o;2302:299::-;2485:6;2478:14;2471:22;2460:9;2453:41;2530:2;2525;2514:9;2510:18;2503:30;2434:4;2550:45;2591:2;2580:9;2576:18;2568:6;2550:45;:::i;2606:247::-;2665:6;2718:2;2706:9;2697:7;2693:23;2689:32;2686:52;;;2734:1;2731;2724:12;2686:52;2773:9;2760:23;2792:31;2817:5;2792:31;:::i;3040:529::-;3138:6;3146;3154;3207:2;3195:9;3186:7;3182:23;3178:32;3175:52;;;3223:1;3220;3213:12;3175:52;3262:9;3249:23;3281:31;3306:5;3281:31;:::i;:::-;3331:5;-1:-1:-1;3409:2:8;3394:18;;3381:32;;-1:-1:-1;3491:2:8;3476:18;;3463:32;3504:33;3463:32;3504:33;:::i;:::-;3556:7;3546:17;;;3040:529;;;;;:::o;3574:508::-;3651:6;3659;3667;3720:2;3708:9;3699:7;3695:23;3691:32;3688:52;;;3736:1;3733;3726:12;3688:52;3775:9;3762:23;3794:31;3819:5;3794:31;:::i;:::-;3844:5;-1:-1:-1;3901:2:8;3886:18;;3873:32;3914:33;3873:32;3914:33;:::i;:::-;3574:508;;3966:7;;-1:-1:-1;;;4046:2:8;4031:18;;;;4018:32;;3574:508::o;4679:226::-;4738:6;4791:2;4779:9;4770:7;4766:23;4762:32;4759:52;;;4807:1;4804;4797:12;4759:52;-1:-1:-1;4852:23:8;;4679:226;-1:-1:-1;4679:226:8:o;4910:159::-;4973:5;5018:3;5009:6;5004:3;5000:16;4996:26;4993:46;;;5035:1;5032;5025:12;4993:46;-1:-1:-1;5057:6:8;4910:159;-1:-1:-1;4910:159:8:o;5074:359::-;5172:6;5180;5233:3;5221:9;5212:7;5208:23;5204:33;5201:53;;;5250:1;5247;5240:12;5201:53;5295:23;;;-1:-1:-1;5361:66:8;5419:7;5414:2;5399:18;;5361:66;:::i;:::-;5351:76;;5074:359;;;;;:::o;5853:500::-;5960:6;5968;5976;6029:3;6017:9;6008:7;6004:23;6000:33;5997:53;;;6046:1;6043;6036:12;5997:53;6091:23;;;-1:-1:-1;6190:2:8;6175:18;;6162:32;6203:33;6162:32;6203:33;:::i;:::-;6255:7;-1:-1:-1;6281:66:8;6339:7;6334:2;6319:18;;6281:66;:::i;:::-;6271:76;;5853:500;;;;;:::o;6358:367::-;6426:6;6434;6487:2;6475:9;6466:7;6462:23;6458:32;6455:52;;;6503:1;6500;6493:12;6455:52;6548:23;;;-1:-1:-1;6647:2:8;6632:18;;6619:32;6660:33;6619:32;6660:33;:::i;:::-;6712:7;6702:17;;;6358:367;;;;;:::o;6730:156::-;6796:20;;6856:4;6845:16;;6835:27;;6825:55;;6876:1;6873;6866:12;6891:942;7002:6;7010;7018;7026;7034;7042;7050;7103:3;7091:9;7082:7;7078:23;7074:33;7071:53;;;7120:1;7117;7110:12;7071:53;7159:9;7146:23;7178:31;7203:5;7178:31;:::i;:::-;7228:5;-1:-1:-1;7285:2:8;7270:18;;7257:32;7298:33;7257:32;7298:33;:::i;:::-;7350:7;-1:-1:-1;7430:2:8;7415:18;;7402:32;;-1:-1:-1;7533:2:8;7518:18;;7505:32;;-1:-1:-1;7582:37:8;7614:3;7599:19;;7582:37;:::i;:::-;6891:942;;;;-1:-1:-1;6891:942:8;;;;7572:47;7692:3;7677:19;;7664:33;;-1:-1:-1;7796:3:8;7781:19;;;7768:33;;6891:942;-1:-1:-1;;6891:942:8:o;7838:388::-;7906:6;7914;7967:2;7955:9;7946:7;7942:23;7938:32;7935:52;;;7983:1;7980;7973:12;7935:52;8022:9;8009:23;8041:31;8066:5;8041:31;:::i;:::-;8091:5;-1:-1:-1;8148:2:8;8133:18;;8120:32;8161:33;8120:32;8161:33;:::i;8418:271::-;8601:6;8593;8588:3;8575:33;8557:3;8627:16;;8652:13;;;8627:16;8418:271;-1:-1:-1;8418:271:8:o;8973:277::-;9040:6;9093:2;9081:9;9072:7;9068:23;9064:32;9061:52;;;9109:1;9106;9099:12;9061:52;9141:9;9135:16;9194:5;9187:13;9180:21;9173:5;9170:32;9160:60;;9216:1;9213;9206:12;9255:184;9325:6;9378:2;9366:9;9357:7;9353:23;9349:32;9346:52;;;9394:1;9391;9384:12;9346:52;-1:-1:-1;9417:16:8;;9255:184;-1:-1:-1;9255:184:8:o;9444:127::-;9505:10;9500:3;9496:20;9493:1;9486:31;9536:4;9533:1;9526:15;9560:4;9557:1;9550:15;9576:128;9643:9;;;9664:11;;;9661:37;;;9678:18;;:::i;9709:125::-;9774:9;;;9795:10;;;9792:36;;;9808:18;;:::i;9839:168::-;9912:9;;;9943;;9960:15;;;9954:22;;9940:37;9930:71;;9981:18;;:::i;10012:217::-;10052:1;10078;10068:132;;10122:10;10117:3;10113:20;10110:1;10103:31;10157:4;10154:1;10147:15;10185:4;10182:1;10175:15;10068:132;-1:-1:-1;10214:9:8;;10012:217::o;10234:182::-;10291:6;10344:2;10332:9;10323:7;10319:23;10315:32;10312:52;;;10360:1;10357;10350:12;10312:52;10383:27;10400:9;10383:27;:::i;11549:559::-;-1:-1:-1;;;;;11762:32:8;;11744:51;;11826:2;11811:18;;11804:34;;;11874:2;11869;11854:18;;11847:30;;;11893:18;;11886:34;;;11913:6;11963;11957:3;11942:19;;11929:49;12028:1;11998:22;;;12022:3;11994:32;;;11987:43;;;;12091:2;12070:15;;;-1:-1:-1;;12066:29:8;12051:45;12047:55;;11549:559;-1:-1:-1;;;11549:559:8:o;12113:290::-;12182:6;12235:2;12223:9;12214:7;12210:23;12206:32;12203:52;;;12251:1;12248;12241:12;12203:52;12277:16;;-1:-1:-1;;;;;;12322:32:8;;12312:43;;12302:71;;12369:1;12366;12359:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1346200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24448",
								"asset()": "infinite",
								"balanceOf(address)": "2580",
								"customCall(address,uint256,bytes)": "infinite",
								"decimals()": "222",
								"erc20BuyableRate()": "infinite",
								"erc20BuyableTime()": "2426",
								"erc20SellInhibitor()": "infinite",
								"erc20ToNativePrice(uint256)": "infinite",
								"erc20sBuyable()": "infinite",
								"name()": "infinite",
								"nameHash()": "infinite",
								"nativeBuyableRate()": "infinite",
								"nativeSellInhibitor()": "infinite",
								"nativeToERC20Price(uint256)": "infinite",
								"nativesBuyable()": "infinite",
								"nonces(address)": "2559",
								"owner()": "2442",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"swapERC20ToNative(address,uint256,address)": "infinite",
								"swapERC20ToNative(uint256)": "infinite",
								"swapERC20ToNative(uint256,(uint256,uint8,bytes32,bytes32))": "infinite",
								"swapERC20ToNative(uint256,address)": "infinite",
								"swapERC20ToNative(uint256,address,(uint256,uint8,bytes32,bytes32))": "infinite",
								"swapERC223ToNative(address,uint256,address)": "infinite",
								"swapNativeToERC20()": "infinite",
								"swapNativeToERC20(address)": "infinite",
								"swapNativeToERC20(address,uint256,address)": "infinite",
								"symbol()": "infinite",
								"tokenReceived(address,uint256,bytes)": "infinite",
								"totalSupply()": "2381",
								"transfer(address,uint256)": "infinite",
								"transfer(address,uint256,bytes)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_constantNameHash()": "infinite",
								"_transferERC20sBought(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 405,
									"end": 420,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 374,
									"end": 420,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 374,
									"end": 420,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 461,
									"end": 476,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 427,
									"end": 476,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 476,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2106,
									"end": 2372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2106,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2185,
									"end": 2190,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1617,
									"end": 1624,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1669,
									"end": 1696,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1687,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "15180"
								},
								{
									"begin": 1617,
									"end": 1624,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1669,
									"end": 1696,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1669,
									"end": 1696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1669,
									"end": 1696,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1669,
									"end": 1696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1735,
									"end": 1743,
									"name": "PUSH",
									"source": 6,
									"value": "16345785D8A0000"
								},
								{
									"begin": 1789,
									"end": 1817,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1808,
									"end": 1816,
									"name": "PUSH",
									"source": 6,
									"value": "15180"
								},
								{
									"begin": 1735,
									"end": 1743,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1789,
									"end": 1817,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1789,
									"end": 1817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1789,
									"end": 1817,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1789,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2209,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 442,
									"end": 456,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 442,
									"end": 456,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 666,
									"end": 706,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 666,
									"end": 706,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 666,
									"end": 706,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 666,
									"end": 706,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 666,
									"end": 706,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 717,
									"end": 753,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 717,
									"end": 753,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 717,
									"end": 753,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 717,
									"end": 753,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 717,
									"end": 753,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 764,
									"end": 806,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 764,
									"end": 806,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 764,
									"end": 806,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 764,
									"end": 806,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 817,
									"end": 855,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 817,
									"end": 855,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 817,
									"end": 855,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2048,
									"end": 2099,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2021,
									"end": 2039,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2021,
									"end": 2039,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2260,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2238,
									"end": 2261,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2238,
									"end": 2261,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2230,
									"end": 2262,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2230,
									"end": 2262,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2230,
									"end": 2262,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2230,
									"end": 2262,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2230,
									"end": 2262,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2230,
									"end": 2262,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2222,
									"end": 2262,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 2222,
									"end": 2262,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2284,
									"end": 2307,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2284,
									"end": 2307,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2307,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 2273,
									"end": 2307,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2338,
									"end": 2363,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2338,
									"end": 2363,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2362,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2362,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2338,
									"end": 2363,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2338,
									"end": 2363,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2330,
									"end": 2364,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2330,
									"end": 2364,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2330,
									"end": 2364,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2330,
									"end": 2364,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2330,
									"end": 2364,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2330,
									"end": 2364,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2320,
									"end": 2364,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 2320,
									"end": 2364,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 982,
									"end": 988,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 990,
									"end": 996,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1004,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1053,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1039,
									"end": 1048,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1037,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1049,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1067,
									"end": 1068,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1069,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1093,
									"end": 1109,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1093,
									"end": 1109,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1138,
									"end": 1169,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1169,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1188,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1174,
									"end": 1186,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1188,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1118,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1256,
									"end": 1258,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1235,
									"end": 1260,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1272,
									"end": 1302,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1302,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1316,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1312,
									"end": 1313,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1317,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1269,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1391,
									"end": 1398,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1382,
									"end": 1388,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1371,
									"end": 1380,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1367,
									"end": 1389,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1338,
									"end": 1399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1399,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1338,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1430,
									"end": 1448,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1430,
									"end": 1448,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1449,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1399,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1399,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 1449,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1461,
									"end": 1493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1493,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1458,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1897,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1603,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1644,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1697,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1670,
									"end": 1697,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1670,
									"end": 1697,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1706,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1706,
									"end": 1840,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1762,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1757,
									"end": 1760,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1750,
									"end": 1751,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1743,
									"end": 1774,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1797,
									"end": 1801,
									"name": "PUSH",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1794,
									"end": 1795,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1787,
									"end": 1802,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1825,
									"end": 1829,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1822,
									"end": 1823,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1815,
									"end": 1830,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1706,
									"end": 1840,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1706,
									"end": 1840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1858,
									"end": 1885,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1858,
									"end": 1885,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1858,
									"end": 1885,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1858,
									"end": 1885,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1897,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2110,
									"end": 2413,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 2110,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2241,
									"end": 2244,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2279,
									"end": 2285,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2273,
									"end": 2286,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2325,
									"end": 2331,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2301,
									"end": 2304,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2295,
									"end": 2332,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 2387,
									"end": 2388,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2351,
									"end": 2367,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2367,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2351,
									"end": 2367,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2110,
									"end": 2413,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2110,
									"end": 2413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2715,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2418,
									"end": 2715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2536,
									"end": 2548,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2536,
									"end": 2548,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2583,
									"end": 2587,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2572,
									"end": 2588,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2572,
									"end": 2588,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2572,
									"end": 2588,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2589,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2589,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2536,
									"end": 2548,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2601,
									"end": 2617,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2601,
									"end": 2617,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2598,
									"end": 2709,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2598,
									"end": 2709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2598,
									"end": 2709,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2695,
									"end": 2696,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2691,
									"end": 2697,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2687,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2675,
									"end": 2679,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2671,
									"end": 2688,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2669,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2664,
									"end": 2689,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2660,
									"end": 2698,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2658,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2649,
									"end": 2699,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2699,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2699,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2598,
									"end": 2709,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2598,
									"end": 2709,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2598,
									"end": 2709,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2715,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2715,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2715,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "964"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "962"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "960"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "790"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "788"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "786"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "784"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "1155"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 3638,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078fbabb9203af5204125aa17e7f23569188d6f71eaf067a5ee3ce7d06434200d64736f6c634300081c0033",
									".code": [
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "7ECEBE00"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "B3CA7F2A"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "E5ACA599"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "E5ACA599"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "F172A4CE"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "F4D0BD72"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "F86329E1"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "B3CA7F2A"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "BE45FD62"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "D505ACCF"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "E46DBD07"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "94EF2103"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "94EF2103"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "AF4FC206"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "B3841F26"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "7ECEBE00"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "82E3D8BD"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "8943EC02"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "6263913C"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "6263913C"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "7B383F18"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "7CC27B40"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "3644E515"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "38D52E0F"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "4206ABE9"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "6032F600"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "12958A6B"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "12958A6B"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "17B31167"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "223ECF7E"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "58D1573"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "10AB2D01"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 3638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 268,
											"end": 312,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "788"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 178,
											"end": 225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 178,
											"end": 225,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 160,
											"end": 226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 226,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 268,
											"end": 312,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 312,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 312,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2499,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2499,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8175,
											"end": 9204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 8175,
											"end": 9204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1443,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1444,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1264,
											"end": 1451,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2757,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2757,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2757,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1137,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1137,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 2994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2858,
											"end": 3035,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3295,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3295,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7067,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "5345CDF77EB68F44C"
										},
										{
											"begin": 7061,
											"end": 7086,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6907,
											"end": 7102,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2253,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2253,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2253,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 11165,
											"end": 15918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 11165,
											"end": 15918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4229,
											"end": 4265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4265,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4219,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6480,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4087,
											"end": 4271,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 21458,
											"end": 22195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 369,
											"end": 397,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1155"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 397,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 397,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 4607,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4458,
											"end": 4674,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1259,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1259,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2098,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2098,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2705,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2705,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7168,
											"end": 7454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "87A211A2"
										},
										{
											"begin": 7330,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 7323,
											"end": 7355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7323,
											"end": 7355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7323,
											"end": 7355,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7387,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7416,
											"end": 7437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7416,
											"end": 7437,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7410,
											"end": 7438,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7410,
											"end": 7438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7454,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2945,
											"end": 3133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2945,
											"end": 3133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 319,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 319,
											"end": 361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 361,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 319,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 319,
											"end": 361,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "790"
										},
										{
											"begin": 319,
											"end": 361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 319,
											"end": 361,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 17137,
											"end": 17477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17360,
											"end": 17377,
											"name": "PUSH",
											"source": 3,
											"value": "38377508"
										},
										{
											"begin": 17354,
											"end": 17358,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 17347,
											"end": 17378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17347,
											"end": 17378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17347,
											"end": 17378,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17197,
											"end": 17211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17391,
											"end": 17410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17391,
											"end": 17410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17391,
											"end": 17410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17391,
											"end": 17410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17455,
											"end": 17459,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17439,
											"end": 17460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17439,
											"end": 17460,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17137,
											"end": 17477,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 170,
											"end": 213,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "784"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1759,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1759,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5582,
											"end": 5634,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5582,
											"end": 5634,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5570,
											"end": 5572,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5438,
											"end": 5640,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2420,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2420,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2628,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9391,
											"end": 10797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9391,
											"end": 10797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3974,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3974,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3361,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3361,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 973,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 309,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 309,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 309,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 309,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 17661,
											"end": 21377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 17661,
											"end": 21377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7549,
											"end": 8044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7888,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7877,
											"end": 7898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 7944,
											"name": "PUSH",
											"source": 3,
											"value": "7F5E9F20"
										},
										{
											"begin": 7918,
											"end": 7922,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 7969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8022,
											"end": 8026,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 8006,
											"end": 8027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8006,
											"end": 8027,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8028,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 8044,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 420,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 374,
											"end": 420,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2890,
											"end": 3287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2890,
											"end": 3287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "964"
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2093,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1118,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 220,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 220,
											"end": 261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 261,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 220,
											"end": 261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 220,
											"end": 261,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "786"
										},
										{
											"begin": 220,
											"end": 261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 220,
											"end": 261,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2606,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "960"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8249,
											"end": 8253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8858,
											"end": 8862,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8851,
											"end": 8872,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8898,
											"end": 8918,
											"name": "PUSH",
											"source": 3,
											"value": "7F5E9F20"
										},
										{
											"begin": 8892,
											"end": 8896,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 8885,
											"end": 8919,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8945,
											"end": 8953,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8939,
											"end": 8943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8932,
											"end": 8954,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8997,
											"end": 9003,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8990,
											"end": 8994,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 8984,
											"end": 8988,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 8974,
											"end": 8995,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8967,
											"end": 9004,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9072,
											"end": 9078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9059,
											"end": 9079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "PUSH",
											"source": 3,
											"value": "2C"
										},
										{
											"begin": 9154,
											"end": 9165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9150,
											"end": 9152,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9146,
											"end": 9166,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 9136,
											"end": 9144,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9109,
											"end": 9134,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9103,
											"end": 9107,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9167,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9193,
											"end": 9197,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8175,
											"end": 9204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2883,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 2905,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2903,
											"end": 2910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2922,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2903,
											"end": 2929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2929,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1245,
											"end": 1274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1274,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1245,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1307,
											"end": 1309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1285,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1285,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3386,
											"end": 3403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3457,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3501,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1155"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3502,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3483,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3502,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3473,
											"end": 3502,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3470,
											"end": 3635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8886,
											"end": 8918,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8886,
											"end": 8918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8886,
											"end": 8918,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8868,
											"end": 8919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8935,
											"end": 8953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8928,
											"end": 8962,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8928,
											"end": 8962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8928,
											"end": 8962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1155"
										},
										{
											"begin": 3586,
											"end": 3599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 3586,
											"end": 3599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 8859,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8841,
											"end": 8859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3586,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3470,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30197B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "PUSH",
											"source": 7,
											"value": "6032F600"
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3647,
											"end": 3679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3766,
											"end": 3776,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3726,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3750,
											"end": 3762,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3747,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3726,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3763,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3707,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3707,
											"end": 3776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3707,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3776,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3707,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3811,
											"end": 3813,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3827,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3789,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3828,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3789,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2253,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2363,
											"end": 2373,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2345,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11253,
											"end": 11257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13811,
											"end": 13815,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13807,
											"end": 13809,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 13803,
											"end": 13816,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 13912,
											"end": 13920,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 13906,
											"end": 13910,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13899,
											"end": 13921,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13961,
											"end": 13981,
											"name": "PUSH",
											"source": 3,
											"value": "7F5E9F20"
										},
										{
											"begin": 13954,
											"end": 13959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13951,
											"end": 13982,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 13945,
											"end": 13949,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 13938,
											"end": 13983,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14037,
											"end": 14041,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 14031,
											"end": 14035,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 14021,
											"end": 14042,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14083,
											"end": 14096,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14077,
											"end": 14097,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 14191,
											"end": 14201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14187,
											"end": 14202,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 14184,
											"end": 14631,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14184,
											"end": 14631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 14184,
											"end": 14631,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14324,
											"end": 14334,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14316,
											"end": 14322,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14335,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 14310,
											"end": 14481,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14310,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 14310,
											"end": 14481,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14375,
											"end": 14385,
											"name": "PUSH",
											"source": 3,
											"value": "13BE252B"
										},
										{
											"begin": 14369,
											"end": 14373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14362,
											"end": 14386,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14454,
											"end": 14458,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14448,
											"end": 14452,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14310,
											"end": 14481,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 14310,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14593,
											"end": 14603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14589,
											"end": 14612,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14574,
											"end": 14587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14567,
											"end": 14613,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14184,
											"end": 14631,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 14184,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14184,
											"end": 14631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14184,
											"end": 14631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14735,
											"end": 14753,
											"name": "PUSH",
											"source": 3,
											"value": "87A211A2"
										},
										{
											"begin": 14728,
											"end": 14733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14725,
											"end": 14754,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 14719,
											"end": 14723,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 14712,
											"end": 14755,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14811,
											"end": 14815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14805,
											"end": 14809,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 14795,
											"end": 14816,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14858,
											"end": 14873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14852,
											"end": 14874,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 14956,
											"end": 14967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14948,
											"end": 14954,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14945,
											"end": 14968,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 14942,
											"end": 15100,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14942,
											"end": 15100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 14942,
											"end": 15100,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15004,
											"end": 15014,
											"name": "PUSH",
											"source": 3,
											"value": "F4D678B8"
										},
										{
											"begin": 14998,
											"end": 15002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14991,
											"end": 15015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15077,
											"end": 15081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15071,
											"end": 15075,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 15064,
											"end": 15082,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14942,
											"end": 15100,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 14942,
											"end": 15100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15217,
											"end": 15223,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15204,
											"end": 15215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15200,
											"end": 15224,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15183,
											"end": 15198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15176,
											"end": 15225,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15176,
											"end": 15225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15176,
											"end": 15225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15308,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15302,
											"end": 15306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15295,
											"end": 15311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15365,
											"end": 15369,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15359,
											"end": 15363,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 15349,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15631,
											"end": 15637,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15615,
											"end": 15628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15609,
											"end": 15629,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15605,
											"end": 15638,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15590,
											"end": 15603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15583,
											"end": 15639,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15583,
											"end": 15639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15715,
											"end": 15721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15709,
											"end": 15713,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15702,
											"end": 15722,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15813,
											"end": 15817,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 15807,
											"end": 15818,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15803,
											"end": 15805,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 15799,
											"end": 15819,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 15791,
											"end": 15796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15787,
											"end": 15789,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 15783,
											"end": 15797,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15750,
											"end": 15754,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15744,
											"end": 15748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15739,
											"end": 15820,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15739,
											"end": 15820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15907,
											"end": 15911,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 15918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 21458,
											"end": 22195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21515,
											"end": 21529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "964"
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21683,
											"end": 21746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 21683,
											"end": 21746,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21738,
											"end": 21744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 21738,
											"end": 21742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 21738,
											"end": 21744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 21738,
											"end": 21744,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 21738,
											"end": 21744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21722,
											"end": 21746,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21722,
											"end": 21746,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21722,
											"end": 21746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21722,
											"end": 21746,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21722,
											"end": 21746,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21722,
											"end": 21746,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21711,
											"end": 21746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21711,
											"end": 21746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21683,
											"end": 21746,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 21683,
											"end": 21746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21883,
											"end": 21887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21877,
											"end": 21888,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21877,
											"end": 21888,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21944,
											"end": 21960,
											"name": "PUSH",
											"source": 3,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 21934,
											"end": 21961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21934,
											"end": 21961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21988,
											"end": 21992,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21981,
											"end": 21993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21981,
											"end": 21993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21974,
											"end": 22004,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21974,
											"end": 22004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21974,
											"end": 22004,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21974,
											"end": 22004,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5243,
											"name": "PUSH",
											"source": 3,
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 22024,
											"end": 22036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22024,
											"end": 22036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22024,
											"end": 22036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22017,
											"end": 22050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22084,
											"end": 22093,
											"name": "CHAINID",
											"source": 3
										},
										{
											"begin": 22077,
											"end": 22081,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 22070,
											"end": 22082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22070,
											"end": 22082,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22063,
											"end": 22094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22128,
											"end": 22137,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 22121,
											"end": 22125,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 22114,
											"end": 22126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22114,
											"end": 22126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22107,
											"end": 22138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22174,
											"end": 22178,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 22161,
											"end": 22179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22161,
											"end": 22179,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22161,
											"end": 22179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22161,
											"end": 22179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21458,
											"end": 22195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1435,
											"end": 1445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "784"
										},
										{
											"begin": 1414,
											"end": 1445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1414,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1445,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1414,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1381,
											"end": 1397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1397,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1381,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 1381,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1381,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1381,
											"end": 1446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1381,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1446,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1381,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1365,
											"end": 1446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1365,
											"end": 1446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1481,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1497,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1563,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 1457,
											"end": 1563,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1551,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2098,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2214,
											"end": 2224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2236,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2196,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 2848,
											"end": 2858,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 2869,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2830,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2874,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 2830,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2874,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2705,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2945,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3113,
											"end": 3124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3091,
											"end": 3110,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "788"
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 3091,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3091,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3058,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 3058,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3058,
											"end": 3125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 3058,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1915,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1155"
										},
										{
											"begin": 1888,
											"end": 1916,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1916,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1880,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1880,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2015,
											"end": 2020,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1996,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2021,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 1996,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1967,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 2022,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 1967,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "44A1F601"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 2060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1155"
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "PUSH",
											"source": 7,
											"value": "D505ACCF"
										},
										{
											"begin": 2561,
											"end": 2571,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2598,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 2614,
											"end": 2619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10750,
											"end": 10782,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 10750,
											"end": 10782,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10750,
											"end": 10782,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10851,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10851,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10851,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10792,
											"end": 10852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10861,
											"end": 10895,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10861,
											"end": 10895,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10861,
											"end": 10895,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10861,
											"end": 10895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10904,
											"end": 10938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 10991,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 10975,
											"end": 10992,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10973,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10954,
											"end": 10973,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10947,
											"end": 10993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11028,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 11009,
											"end": 11028,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11009,
											"end": 11028,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11002,
											"end": 11037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2633,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2633,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2633,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 11053,
											"end": 11072,
											"name": "PUSH",
											"source": 8,
											"value": "C4"
										},
										{
											"begin": 11053,
											"end": 11072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11053,
											"end": 11072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11046,
											"end": 11081,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10704,
											"end": 10723,
											"name": "PUSH",
											"source": 8,
											"value": "E4"
										},
										{
											"begin": 10704,
											"end": 10723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2670,
											"end": 2680,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2652,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2685,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2693,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2628,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2739,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "962"
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8231,
											"end": 8413,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9461,
											"end": 9465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "87A211A2"
										},
										{
											"begin": 9664,
											"end": 9668,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 9657,
											"end": 9689,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9715,
											"end": 9723,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 9713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9702,
											"end": 9724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9776,
											"end": 9780,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9770,
											"end": 9774,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 9760,
											"end": 9781,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9819,
											"end": 9834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9835,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9909,
											"end": 9920,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9901,
											"end": 9907,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9898,
											"end": 9921,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9895,
											"end": 10041,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9895,
											"end": 10041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 9895,
											"end": 10041,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9953,
											"end": 9963,
											"name": "PUSH",
											"source": 3,
											"value": "F4D678B8"
										},
										{
											"begin": 9947,
											"end": 9951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9940,
											"end": 9964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10026,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10016,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9895,
											"end": 10041,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 9895,
											"end": 10041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10137,
											"end": 10148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10133,
											"end": 10157,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10116,
											"end": 10131,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10109,
											"end": 10158,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10109,
											"end": 10158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10109,
											"end": 10158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10233,
											"end": 10235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10220,
											"end": 10236,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10280,
											"end": 10284,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10520,
											"end": 10533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10510,
											"end": 10543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10488,
											"end": 10544,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10488,
											"end": 10544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10612,
											"end": 10618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10606,
											"end": 10610,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10599,
											"end": 10619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10704,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 10694,
											"end": 10705,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10690,
											"end": 10692,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10686,
											"end": 10706,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 10676,
											"end": 10684,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10643,
											"end": 10647,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10637,
											"end": 10641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10707,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10786,
											"end": 10790,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3974,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5F22FEB1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11331,
											"end": 11382,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11391,
											"end": 11425,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11391,
											"end": 11425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11391,
											"end": 11425,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11461,
											"end": 11463,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11441,
											"end": 11459,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11441,
											"end": 11459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11441,
											"end": 11459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11434,
											"end": 11464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11473,
											"end": 11502,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11473,
											"end": 11502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11473,
											"end": 11502,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4137,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1155"
										},
										{
											"begin": 4150,
											"end": 4181,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4181,
											"name": "PUSH",
											"source": 7,
											"value": "BE45FD62"
										},
										{
											"begin": 4150,
											"end": 4181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11519,
											"end": 11538,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11519,
											"end": 11538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4150,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 4150,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3361,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 3515,
											"end": 3525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3496,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 3496,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 3537,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 3537,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3576,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 973,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1102,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "790"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1044,
											"end": 1102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1045,
											"end": 1081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1045,
											"end": 1081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1081,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1045,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 1044,
											"end": 1102,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 1044,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 309,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 309,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 391,
											"end": 403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 430,
											"end": 433,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 421,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 421,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 421,
											"end": 442,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 421,
											"end": 442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "44A1F601"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 455,
											"end": 490,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 455,
											"end": 490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 455,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 490,
											"name": "PUSH",
											"source": 4,
											"value": "8943EC02"
										},
										{
											"begin": 455,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 491,
											"end": 501,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 491,
											"end": 501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 503,
											"end": 509,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 503,
											"end": 509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 516,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 511,
											"end": 516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 511,
											"end": 516,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 511,
											"end": 516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 455,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 455,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 455,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 455,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 537,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 541,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 309,
											"end": 549,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 309,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 17661,
											"end": 21377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "964"
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 18456,
											"end": 18519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 18456,
											"end": 18519,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18511,
											"end": 18517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 18511,
											"end": 18515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 18511,
											"end": 18517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18511,
											"end": 18517,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 18511,
											"end": 18517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18495,
											"end": 18519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18495,
											"end": 18519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18495,
											"end": 18519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18495,
											"end": 18519,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18495,
											"end": 18519,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18495,
											"end": 18519,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 18484,
											"end": 18519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18484,
											"end": 18519,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18456,
											"end": 18519,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 18456,
											"end": 18519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5243,
											"name": "PUSH",
											"source": 3,
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 18720,
											"end": 18731,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 18742,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 18714,
											"end": 18856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18714,
											"end": 18856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 18714,
											"end": 18856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18774,
											"end": 18784,
											"name": "PUSH",
											"source": 3,
											"value": "1A15A3CC"
										},
										{
											"begin": 18768,
											"end": 18772,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18761,
											"end": 18785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18837,
											"end": 18841,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18831,
											"end": 18835,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 18824,
											"end": 18842,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18714,
											"end": 18856,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 18714,
											"end": 18856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18884,
											"end": 18888,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18878,
											"end": 18889,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19000,
											"end": 19005,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 18996,
											"end": 18998,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 18992,
											"end": 19006,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 18988,
											"end": 18990,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 18984,
											"end": 19007,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 18975,
											"end": 19007,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": 18975,
											"end": 19007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19047,
											"end": 19054,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 19043,
											"end": 19045,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 19039,
											"end": 19055,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 19035,
											"end": 19037,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 19031,
											"end": 19056,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 19020,
											"end": 19056,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 19020,
											"end": 19056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19140,
											"end": 19179,
											"name": "PUSH",
											"source": 3,
											"value": "383775081901"
										},
										{
											"begin": 19134,
											"end": 19138,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 19127,
											"end": 19180,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19206,
											"end": 19211,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 19200,
											"end": 19204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19193,
											"end": 19212,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19258,
											"end": 19262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19252,
											"end": 19256,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 19242,
											"end": 19263,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19300,
											"end": 19309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19294,
											"end": 19310,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19378,
											"end": 19394,
											"name": "PUSH",
											"source": 3,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 19375,
											"end": 19376,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19368,
											"end": 19395,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19429,
											"end": 19437,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19422,
											"end": 19426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19419,
											"end": 19420,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19415,
											"end": 19427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19408,
											"end": 19438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19472,
											"end": 19483,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19465,
											"end": 19469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19462,
											"end": 19463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19458,
											"end": 19470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19451,
											"end": 19484,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19518,
											"end": 19527,
											"name": "CHAINID",
											"source": 3
										},
										{
											"begin": 19511,
											"end": 19515,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 19508,
											"end": 19509,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19504,
											"end": 19516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19497,
											"end": 19528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19562,
											"end": 19571,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 19555,
											"end": 19559,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 19552,
											"end": 19553,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19548,
											"end": 19560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19541,
											"end": 19572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19611,
											"end": 19615,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 19608,
											"end": 19609,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19598,
											"end": 19616,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19592,
											"end": 19596,
											"name": "PUSH",
											"source": 3,
											"value": "2E"
										},
										{
											"begin": 19585,
											"end": 19617,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19680,
											"end": 19696,
											"name": "PUSH",
											"source": 3,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 19677,
											"end": 19678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19670,
											"end": 19697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19731,
											"end": 19736,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 19724,
											"end": 19728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19721,
											"end": 19722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19717,
											"end": 19729,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19710,
											"end": 19737,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19771,
											"end": 19778,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 19764,
											"end": 19768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19761,
											"end": 19762,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19757,
											"end": 19769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19750,
											"end": 19779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19813,
											"end": 19818,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 19806,
											"end": 19810,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 19803,
											"end": 19804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19799,
											"end": 19811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19792,
											"end": 19819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19853,
											"end": 19863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19846,
											"end": 19850,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 19843,
											"end": 19844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19839,
											"end": 19851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19832,
											"end": 19864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19898,
											"end": 19906,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 19891,
											"end": 19895,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 19888,
											"end": 19889,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19884,
											"end": 19896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19877,
											"end": 19907,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19946,
											"end": 19950,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 19943,
											"end": 19944,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19933,
											"end": 19951,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19927,
											"end": 19931,
											"name": "PUSH",
											"source": 3,
											"value": "4E"
										},
										{
											"begin": 19920,
											"end": 19952,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20041,
											"end": 20045,
											"name": "PUSH",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 20035,
											"end": 20039,
											"name": "PUSH",
											"source": 3,
											"value": "2C"
										},
										{
											"begin": 20025,
											"end": 20046,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 20019,
											"end": 20023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20012,
											"end": 20047,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20083,
											"end": 20084,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 20077,
											"end": 20081,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 20073,
											"end": 20085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20067,
											"end": 20071,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20060,
											"end": 20086,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20112,
											"end": 20113,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 20106,
											"end": 20110,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20099,
											"end": 20114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20140,
											"end": 20141,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 20134,
											"end": 20138,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 20127,
											"end": 20142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20203,
											"end": 20207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20197,
											"end": 20201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20191,
											"end": 20195,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 20185,
											"end": 20189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20182,
											"end": 20183,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20175,
											"end": 20180,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 20164,
											"end": 20208,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 20624,
											"end": 20629,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 20605,
											"end": 20621,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 20599,
											"end": 20622,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20596,
											"end": 20630,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 20586,
											"end": 20745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 20586,
											"end": 20745,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 20663,
											"end": 20673,
											"name": "PUSH",
											"source": 3,
											"value": "DDAFBAEF"
										},
										{
											"begin": 20657,
											"end": 20661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20650,
											"end": 20674,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20726,
											"end": 20730,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20720,
											"end": 20724,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 20713,
											"end": 20731,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 20586,
											"end": 20745,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 20586,
											"end": 20745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20830,
											"end": 20848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20849,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FAF4F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21025,
											"end": 21068,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21068,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 21019,
											"end": 21023,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21012,
											"end": 21069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21105,
											"end": 21109,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 21099,
											"end": 21103,
											"name": "PUSH",
											"source": 3,
											"value": "2C"
										},
										{
											"begin": 21089,
											"end": 21110,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21082,
											"end": 21118,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 21082,
											"end": 21118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21082,
											"end": 21118,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 21060,
											"end": 21067,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 21225,
											"end": 21230,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 21198,
											"end": 21223,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21185,
											"end": 21189,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 21178,
											"end": 21190,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 21178,
											"end": 21190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21173,
											"end": 21240,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 21260,
											"end": 21264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21253,
											"end": 21268,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21330,
											"end": 21331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21324,
											"end": 21328,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 21317,
											"end": 21332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17661,
											"end": 21377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2890,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3061,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3033,
											"end": 3038,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1155"
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3033,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3078,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3096,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "223ECF7E"
										},
										{
											"begin": 3103,
											"end": 3114,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3076,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3076,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3189,
											"end": 3193,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3225,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 3146,
											"end": 3211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3210,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1155"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3165,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3165,
											"end": 3210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3165,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3211,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 3146,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 3146,
											"end": 3225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3146,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 3146,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3130,
											"end": 3225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3130,
											"end": 3225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3278,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3238,
											"end": 3279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1118,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "786"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1188,
											"end": 1243,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1223,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1204,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1189,
											"end": 1223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1189,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4668,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 4458,
											"end": 4674,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3353,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3141,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3275,
											"end": 3291,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "786"
										},
										{
											"begin": 3266,
											"end": 3291,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 3266,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3291,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 3266,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 3246,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3291,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3337,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 3329,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 3329,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 30066,
											"end": 30157,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 30066,
											"end": 30157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 30066,
											"end": 30157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 30066,
											"end": 30157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 30066,
											"end": 30157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 30066,
											"end": 30157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1856,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 1578,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1715,
											"end": 1732,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "790"
										},
										{
											"begin": 1706,
											"end": 1732,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1706,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 1706,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1684,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1732,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1791,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1847,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 24177,
											"end": 25296,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 24177,
											"end": 25296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24444,
											"end": 24462,
											"name": "PUSH",
											"source": 3,
											"value": "87A211A2"
										},
										{
											"begin": 24438,
											"end": 24442,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 24431,
											"end": 24463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24489,
											"end": 24493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24483,
											"end": 24487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24476,
											"end": 24494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24546,
											"end": 24550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24540,
											"end": 24544,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 24530,
											"end": 24551,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 24589,
											"end": 24604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24583,
											"end": 24605,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 24679,
											"end": 24690,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24671,
											"end": 24677,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24668,
											"end": 24691,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 24665,
											"end": 24811,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 24665,
											"end": 24811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 24665,
											"end": 24811,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24723,
											"end": 24733,
											"name": "PUSH",
											"source": 3,
											"value": "F4D678B8"
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24710,
											"end": 24734,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24792,
											"end": 24796,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 24786,
											"end": 24790,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 24779,
											"end": 24797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 24665,
											"end": 24811,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 24665,
											"end": 24811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24903,
											"end": 24927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 24903,
											"end": 24927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24903,
											"end": 24927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24879,
											"end": 24928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24879,
											"end": 24928,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 25038,
											"end": 25056,
											"name": "PUSH",
											"source": 3,
											"value": "5345CDF77EB68F44C"
										},
										{
											"begin": 25032,
											"end": 25057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 25032,
											"end": 25057,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 25028,
											"end": 25066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 25028,
											"end": 25066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25028,
											"end": 25066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 25001,
											"end": 25067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25001,
											"end": 25067,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 25122,
											"end": 25142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25122,
											"end": 25142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25122,
											"end": 25142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25199,
											"end": 25221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 25199,
											"end": 25221,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 25166,
											"end": 25170,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 25155,
											"end": 25225,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22599,
											"end": 23771,
											"name": "tag",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 22599,
											"end": 23771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22820,
											"end": 22838,
											"name": "PUSH",
											"source": 3,
											"value": "5345CDF77EB68F44C"
										},
										{
											"begin": 22814,
											"end": 22839,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22899,
											"end": 22905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22880,
											"end": 22897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22876,
											"end": 22906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22996,
											"end": 23013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22978,
											"end": 22994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22975,
											"end": 23014,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 22972,
											"end": 23134,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22972,
											"end": 23134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 22972,
											"end": 23134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23046,
											"end": 23056,
											"name": "PUSH",
											"source": 3,
											"value": "E5CFE957"
										},
										{
											"begin": 23040,
											"end": 23044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23033,
											"end": 23057,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23115,
											"end": 23119,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 23109,
											"end": 23113,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 23102,
											"end": 23120,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 22972,
											"end": 23134,
											"name": "tag",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 22972,
											"end": 23134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23221,
											"end": 23237,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23201,
											"end": 23219,
											"name": "PUSH",
											"source": 3,
											"value": "5345CDF77EB68F44C"
										},
										{
											"begin": 23194,
											"end": 23238,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 23194,
											"end": 23238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23194,
											"end": 23238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23324,
											"end": 23342,
											"name": "PUSH",
											"source": 3,
											"value": "87A211A2"
										},
										{
											"begin": 23318,
											"end": 23322,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 23311,
											"end": 23343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23369,
											"end": 23371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23363,
											"end": 23367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23356,
											"end": 23372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23422,
											"end": 23426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23416,
											"end": 23420,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 23406,
											"end": 23427,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23538,
											"end": 23544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23522,
											"end": 23535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23516,
											"end": 23536,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 23512,
											"end": 23545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23497,
											"end": 23510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23490,
											"end": 23546,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 23490,
											"end": 23546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23614,
											"end": 23620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23608,
											"end": 23612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23601,
											"end": 23621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23695,
											"end": 23699,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 23689,
											"end": 23700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23685,
											"end": 23687,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 23681,
											"end": 23701,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 23678,
											"end": 23679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 23645,
											"end": 23649,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23639,
											"end": 23643,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23634,
											"end": 23702,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 237,
											"end": 526,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 237,
											"end": 526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 279,
											"end": 282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 311,
											"end": 323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 344,
											"end": 350,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 339,
											"end": 342,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 332,
											"end": 351,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 400,
											"end": 406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 393,
											"end": 397,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 391,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 382,
											"end": 398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 375,
											"end": 379,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 373,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 366,
											"end": 380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 360,
											"end": 407,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 452,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 431,
											"end": 434,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 427,
											"end": 443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 423,
											"end": 450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 416,
											"end": 454,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 515,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 504,
											"end": 511,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 499,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 487,
											"end": 502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 483,
											"end": 512,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 478,
											"end": 481,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 474,
											"end": 513,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 470,
											"end": 520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 463,
											"end": 520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 463,
											"end": 520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 463,
											"end": 520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 237,
											"end": 526,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 237,
											"end": 526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 237,
											"end": 526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 237,
											"end": 526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 237,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 531,
											"end": 751,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 531,
											"end": 751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 680,
											"end": 682,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 669,
											"end": 678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 662,
											"end": 683,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 643,
											"end": 647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 741,
											"end": 743,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 739,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 726,
											"end": 744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 718,
											"end": 724,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 700,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 700,
											"end": 745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 756,
											"end": 887,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 756,
											"end": 887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 831,
											"end": 862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 831,
											"end": 862,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 821,
											"end": 863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 821,
											"end": 863,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 811,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 811,
											"end": 881,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 877,
											"end": 878,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 879,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 892,
											"end": 1259,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 892,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 960,
											"end": 966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1018,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 996,
											"end": 1019,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 989,
											"end": 1041,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 989,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 989,
											"end": 1041,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1037,
											"end": 1038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 989,
											"end": 1041,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 989,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 1095,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 892,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 2297,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1456,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1685,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1686,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 1695,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1726,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 1695,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1827,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1827,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1908,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1967,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1917,
											"end": 1967,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1965,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1967,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1917,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2008,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2039,
											"end": 2043,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2054,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2017,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 2017,
											"end": 2072,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2068,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2070,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2017,
											"end": 2072,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 2017,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2152,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2153,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2170,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 2120,
											"end": 2170,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2120,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 2120,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2211,
											"end": 2218,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2182,
											"end": 2219,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2236,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 2179,
											"end": 2236,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2230,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2236,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 2179,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 2297,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 2297,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 2297,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 2297,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2265,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2266,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1456,
											"end": 2297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2601,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2302,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2492,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2532,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2527,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2514,
											"end": 2523,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2533,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 2550,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2853,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2606,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2665,
											"end": 2671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2697,
											"end": 2704,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2716,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2721,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2738,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 2686,
											"end": 2738,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2735,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2736,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2738,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 2686,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2783,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 2792,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3569,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3040,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3209,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3186,
											"end": 3193,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3205,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3210,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3225,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 3175,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3272,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 3281,
											"end": 3312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3409,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3413,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3491,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3463,
											"end": 3495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 3504,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3504,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3563,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3569,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3569,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3569,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 4082,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 3574,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3722,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3708,
											"end": 3717,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3699,
											"end": 3706,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3718,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3723,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 3688,
											"end": 3740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3736,
											"end": 3737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3740,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 3688,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3784,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3794,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 3819,
											"end": 3824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3794,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 3794,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3794,
											"end": 3825,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 3794,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3844,
											"end": 3849,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 3904,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3886,
											"end": 3904,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 3914,
											"end": 3947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 4082,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 4082,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3973,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3966,
											"end": 3973,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4046,
											"end": 4048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4018,
											"end": 4050,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4018,
											"end": 4050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 4082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4679,
											"end": 4905,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4679,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4793,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4779,
											"end": 4788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 4777,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4766,
											"end": 4789,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4811,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 4759,
											"end": 4811,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4797,
											"end": 4809,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4811,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 4759,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4852,
											"end": 4875,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4852,
											"end": 4875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4679,
											"end": 4905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4679,
											"end": 4905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 5069,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 4910,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 4978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5007,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5016,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5022,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5039,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 4993,
											"end": 5039,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5037,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5039,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 4993,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5057,
											"end": 5063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 5069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 5069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5433,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5074,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5236,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5231,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5237,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5252,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 5201,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5318,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5361,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5399,
											"end": 5417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 5361,
											"end": 5427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 5361,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5351,
											"end": 5427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5351,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5433,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5433,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5433,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5433,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5433,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 6353,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5853,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 5966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 5982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 6017,
											"end": 6026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6027,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6033,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6050,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 5997,
											"end": 6050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6047,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6048,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6050,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 5997,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6114,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6114,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6114,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6190,
											"end": 6192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6194,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6203,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 6162,
											"end": 6194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6203,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 6203,
											"end": 6236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6203,
											"end": 6236,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 6203,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6255,
											"end": 6262,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 6339,
											"end": 6346,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6334,
											"end": 6336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6281,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 6281,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6281,
											"end": 6347,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 6281,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6347,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 6353,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 6353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 6353,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 6353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 6353,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 6353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6725,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6358,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6432,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6489,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6473,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6462,
											"end": 6485,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6455,
											"end": 6507,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6455,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 6455,
											"end": 6507,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6500,
											"end": 6501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6505,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6455,
											"end": 6507,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 6455,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6571,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6619,
											"end": 6651,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 6619,
											"end": 6651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 6660,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6693,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 6660,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6719,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6725,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6725,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 6730,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6856,
											"end": 6860,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6845,
											"end": 6861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6861,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 6862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 6862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6825,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 6825,
											"end": 6880,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 6877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7002,
											"end": 7008,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7091,
											"end": 7100,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7082,
											"end": 7089,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7101,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7107,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7122,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 7071,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7168,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7169,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7178,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 7203,
											"end": 7208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7178,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 7178,
											"end": 7209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7178,
											"end": 7209,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 7178,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7228,
											"end": 7233,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7285,
											"end": 7287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7289,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 7257,
											"end": 7289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 7298,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7331,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 7298,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7350,
											"end": 7357,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7434,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7434,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7533,
											"end": 7535,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7518,
											"end": 7536,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7537,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7537,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7582,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 7614,
											"end": 7617,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 7582,
											"end": 7619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7619,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 7582,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7572,
											"end": 7619,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 7695,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7677,
											"end": 7696,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7677,
											"end": 7696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7697,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7697,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7796,
											"end": 7799,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 7781,
											"end": 7800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7800,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7801,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7801,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6891,
											"end": 7833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6891,
											"end": 7833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 8226,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7838,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7955,
											"end": 7964,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 7953,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7942,
											"end": 7965,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 7970,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7987,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 7935,
											"end": 7987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 7981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7985,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7935,
											"end": 7987,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 7935,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8022,
											"end": 8031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8009,
											"end": 8032,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 8066,
											"end": 8071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 8041,
											"end": 8072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8072,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 8041,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8148,
											"end": 8150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8152,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8161,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 8120,
											"end": 8152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8161,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 8161,
											"end": 8194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8418,
											"end": 8689,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 8418,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8601,
											"end": 8607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8593,
											"end": 8599,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8575,
											"end": 8608,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 8557,
											"end": 8560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8665,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8418,
											"end": 8689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8418,
											"end": 8689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8973,
											"end": 9250,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 8973,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9081,
											"end": 9090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9072,
											"end": 9079,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9064,
											"end": 9096,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9111,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9141,
											"end": 9150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9135,
											"end": 9151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9194,
											"end": 9199,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9200,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9201,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9173,
											"end": 9178,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9170,
											"end": 9202,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9160,
											"end": 9220,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9206,
											"end": 9218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9439,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 9255,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9325,
											"end": 9331,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9380,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9366,
											"end": 9375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9357,
											"end": 9364,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9353,
											"end": 9376,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9349,
											"end": 9381,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9398,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 9346,
											"end": 9398,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9392,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9396,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9398,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 9346,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9417,
											"end": 9433,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9433,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9439,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9255,
											"end": 9439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9571,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9444,
											"end": 9571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9505,
											"end": 9515,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 9500,
											"end": 9503,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9496,
											"end": 9516,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9493,
											"end": 9494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9517,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9536,
											"end": 9540,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9533,
											"end": 9534,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9541,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 9564,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9557,
											"end": 9558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9565,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9704,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 9576,
											"end": 9704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9675,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9661,
											"end": 9698,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9661,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9661,
											"end": 9698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9678,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9678,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9678,
											"end": 9696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9709,
											"end": 9834,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 9709,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9774,
											"end": 9783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9774,
											"end": 9783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9774,
											"end": 9783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9795,
											"end": 9805,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9795,
											"end": 9805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9795,
											"end": 9805,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9808,
											"end": 9826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 10007,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9839,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 9921,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 9921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 9921,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9943,
											"end": 9952,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9943,
											"end": 9952,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 9975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 9975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 9975,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9954,
											"end": 9976,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9954,
											"end": 9976,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9930,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9930,
											"end": 10001,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9981,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9981,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9981,
											"end": 9999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10229,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 10012,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10053,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10068,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 10068,
											"end": 10200,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10132,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10117,
											"end": 10120,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10113,
											"end": 10133,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10110,
											"end": 10111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10161,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10154,
											"end": 10155,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10185,
											"end": 10189,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10190,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10068,
											"end": 10200,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 10068,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10214,
											"end": 10223,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10234,
											"end": 10416,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 10234,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10291,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10346,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10332,
											"end": 10341,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10323,
											"end": 10330,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10342,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10315,
											"end": 10347,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10364,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 10312,
											"end": 10364,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10360,
											"end": 10361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10357,
											"end": 10358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10362,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10364,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 10312,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10383,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 10400,
											"end": 10409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10383,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 10383,
											"end": 10410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 12108,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 11549,
											"end": 12108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11762,
											"end": 11794,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11762,
											"end": 11794,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11744,
											"end": 11795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11744,
											"end": 11795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11826,
											"end": 11828,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11811,
											"end": 11829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 11829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11804,
											"end": 11838,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11804,
											"end": 11838,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11804,
											"end": 11838,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11874,
											"end": 11876,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11869,
											"end": 11871,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11854,
											"end": 11872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11854,
											"end": 11872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11847,
											"end": 11877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11847,
											"end": 11877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11847,
											"end": 11877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11886,
											"end": 11920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11886,
											"end": 11920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11886,
											"end": 11920,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11913,
											"end": 11919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11963,
											"end": 11969,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11957,
											"end": 11960,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11942,
											"end": 11961,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11942,
											"end": 11961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 11978,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12029,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11998,
											"end": 12020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11998,
											"end": 12020,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11998,
											"end": 12020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12022,
											"end": 12025,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11994,
											"end": 12026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11987,
											"end": 12030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11987,
											"end": 12030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11987,
											"end": 12030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11987,
											"end": 12030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12091,
											"end": 12093,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12070,
											"end": 12085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12085,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12066,
											"end": 12095,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12051,
											"end": 12096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12047,
											"end": 12102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12047,
											"end": 12102,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 12108,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11549,
											"end": 12108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12113,
											"end": 12403,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 12113,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12235,
											"end": 12237,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12223,
											"end": 12232,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12214,
											"end": 12221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12210,
											"end": 12233,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12206,
											"end": 12238,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 12203,
											"end": 12255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12251,
											"end": 12252,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12253,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12255,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 12203,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12277,
											"end": 12293,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12322,
											"end": 12354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12322,
											"end": 12354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12355,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12302,
											"end": 12373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 12302,
											"end": 12373,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12369,
											"end": 12370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12359,
											"end": 12371,
											"name": "REVERT",
											"source": 8
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol",
								"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
								"src/ERC223.sol",
								"src/ExchangeAbstract.sol",
								"src/PinusVault2.sol",
								"src/SwapAbstract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"asset()": "38d52e0f",
							"balanceOf(address)": "70a08231",
							"customCall(address,uint256,bytes)": "10ab2d01",
							"decimals()": "313ce567",
							"erc20BuyableRate()": "f86329e1",
							"erc20BuyableTime()": "e46dbd07",
							"erc20SellInhibitor()": "82e3d8bd",
							"erc20ToNativePrice(uint256)": "4206abe9",
							"erc20sBuyable()": "f4d0bd72",
							"name()": "06fdde03",
							"nameHash()": "f172a4ce",
							"nativeBuyableRate()": "7cc27b40",
							"nativeSellInhibitor()": "058d1573",
							"nativeToERC20Price(uint256)": "7b383f18",
							"nativesBuyable()": "b3ca7f2a",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"swapERC20ToNative(address,uint256,address)": "17b31167",
							"swapERC20ToNative(uint256)": "6032f600",
							"swapERC20ToNative(uint256,(uint256,uint8,bytes32,bytes32))": "6263913c",
							"swapERC20ToNative(uint256,address)": "b3841f26",
							"swapERC20ToNative(uint256,address,(uint256,uint8,bytes32,bytes32))": "94ef2103",
							"swapERC223ToNative(address,uint256,address)": "af4fc206",
							"swapNativeToERC20()": "223ecf7e",
							"swapNativeToERC20(address)": "12958a6b",
							"swapNativeToERC20(address,uint256,address)": "e5aca599",
							"symbol()": "95d89b41",
							"tokenReceived(address,uint256,bytes)": "8943ec02",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transfer(address,uint256,bytes)": "be45fd62",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2AllowanceIsFixedAtInfinity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"customCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20BuyableRate\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20BuyableTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20SellInhibitor\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"erc20ToNativePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20sBuyable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeBuyableRate\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeSellInhibitor\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesSold\",\"type\":\"uint256\"}],\"name\":\"nativeToERC20Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativesBuyable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapERC223ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nativesSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"Permit2AllowanceIsFixedAtInfinity()\":[{\"details\":\"The allowance of Permit2 is fixed at infinity.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-712 domain separator for the EIP-2612 permit.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PinusVault2.sol\":\"PinusVault2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol\":{\"keccak256\":\"0x7a6b6ee4848db6125d60425357ce1431162c8ad3a8540b9c9d546078d032aed9\",\"urls\":[\"bzz-raw://dff0d4bc5574ef47e89e364ffb711d5f4f2eea483fc92df20f77696b8b4f963d\",\"dweb:/ipfs/QmbTyL9FCYFtn4tCo7MzGjsJjhP4QbKySvbpkoGmUeFECt\"]},\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":{\"keccak256\":\"0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2\",\"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV\"]},\"src/ERC223.sol\":{\"keccak256\":\"0x2479340fcf249ff8fc1ae63db370c5c3ad56adcd332b289e99b228e191b63d7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1828bc6ee9897e6d7175d3637d5604ac6584c933827ae9bd8b691e0ed2cca769\",\"dweb:/ipfs/QmbE2xHNwy8gwS3f9fDTGTcqNfC3W9kmXx9YqLa2jRXXiV\"]},\"src/ExchangeAbstract.sol\":{\"keccak256\":\"0xfd2844061831c39e28cb691a7954bcd3c46ae0a37be990275cf7cb9fcb7a9aa9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c8899a2695debccc9f2d88c7e16896c01f1be40a486d48d89bd5c8cbe13c06e4\",\"dweb:/ipfs/QmUE4Y9xoCoZhVcJ9TKZHh1fFSyodxvsA6nzgw2wtj4FeL\"]},\"src/PinusVault2.sol\":{\"keccak256\":\"0xb462d5c5ef018f2d38055feb9463b4a4bddac6f3fdf1eeb95a753f2e3c0e22af\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4937dcc2f95cfe3c5cc07996453aad86e81c150f90179a339468716478a25d39\",\"dweb:/ipfs/QmVb4Qk163gGQsEbrNR71jrDQwD7sBmpDzvoZsDwo2MaxA\"]},\"src/SwapAbstract.sol\":{\"keccak256\":\"0xed20183c4684321e543d4fbf76ed4182aba49cd1302713f240e9bceed5ff7dc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2946ed6c20f148219a532dc6c5399bf0bca89e93543e7b26c8d269475fdb71b\",\"dweb:/ipfs/QmbSxfnP7heAKfa3UFk8UoQ3ue28eVhfd8BpLC1DZBhBRp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 794,
								"contract": "src/PinusVault2.sol:PinusVault2",
								"label": "erc20BuyableTime",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 798,
								"contract": "src/PinusVault2.sol:PinusVault2",
								"label": "_nativeBuyableTime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "src/PinusVault2.sol:PinusVault2",
								"label": "_owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/SwapAbstract.sol": {
				"SwapAbstract": {
					"abi": [
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "erc20ToNativePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nativesSold",
									"type": "uint256"
								}
							],
							"name": "nativeToERC20Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapERC20ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapERC223ToNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract SwapAbstract",
									"name": "sa",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nativesSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swapNativeToERC20",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesEarned",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "tokenReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"asset()": "38d52e0f",
							"erc20ToNativePrice(uint256)": "4206abe9",
							"nativeToERC20Price(uint256)": "7b383f18",
							"swapERC20ToNative(address,uint256,address)": "17b31167",
							"swapERC20ToNative(uint256)": "6032f600",
							"swapERC20ToNative(uint256,(uint256,uint8,bytes32,bytes32))": "6263913c",
							"swapERC20ToNative(uint256,address)": "b3841f26",
							"swapERC20ToNative(uint256,address,(uint256,uint8,bytes32,bytes32))": "94ef2103",
							"swapERC223ToNative(address,uint256,address)": "af4fc206",
							"swapNativeToERC20()": "223ecf7e",
							"swapNativeToERC20(address)": "12958a6b",
							"swapNativeToERC20(address,uint256,address)": "e5aca599",
							"tokenReceived(address,uint256,bytes)": "8943ec02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"erc20ToNativePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesSold\",\"type\":\"uint256\"}],\"name\":\"nativeToERC20Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapERC20ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapERC223ToNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SwapAbstract\",\"name\":\"sa\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nativesSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapNativeToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapAbstract.sol\":\"SwapAbstract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol\":{\"keccak256\":\"0x7a6b6ee4848db6125d60425357ce1431162c8ad3a8540b9c9d546078d032aed9\",\"urls\":[\"bzz-raw://dff0d4bc5574ef47e89e364ffb711d5f4f2eea483fc92df20f77696b8b4f963d\",\"dweb:/ipfs/QmbTyL9FCYFtn4tCo7MzGjsJjhP4QbKySvbpkoGmUeFECt\"]},\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":{\"keccak256\":\"0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2\",\"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV\"]},\"src/ERC223.sol\":{\"keccak256\":\"0x2479340fcf249ff8fc1ae63db370c5c3ad56adcd332b289e99b228e191b63d7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1828bc6ee9897e6d7175d3637d5604ac6584c933827ae9bd8b691e0ed2cca769\",\"dweb:/ipfs/QmbE2xHNwy8gwS3f9fDTGTcqNfC3W9kmXx9YqLa2jRXXiV\"]},\"src/SwapAbstract.sol\":{\"keccak256\":\"0xed20183c4684321e543d4fbf76ed4182aba49cd1302713f240e9bceed5ff7dc3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2946ed6c20f148219a532dc6c5399bf0bca89e93543e7b26c8d269475fdb71b\",\"dweb:/ipfs/QmbSxfnP7heAKfa3UFk8UoQ3ue28eVhfd8BpLC1DZBhBRp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol": {
				"ast": {
					"absolutePath": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol",
					"exportedSymbols": {
						"IERC223Recipient": [
							233
						]
					},
					"id": 234,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "IERC223Recipient",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "26:62:2",
								"text": " @title Contract that will work with ERC-223 tokens."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233
							],
							"name": "IERC223Recipient",
							"nameLocation": "109:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IERC223Recipient.ERC223TransferInfo",
									"id": 189,
									"members": [
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "token_contract",
											"nameLocation": "179:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "171:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 181,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "171:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "211:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "203:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 183,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "203:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 186,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "235:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "227:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 185,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "227:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 188,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "258:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "250:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 187,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "250:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC223TransferInfo",
									"nameLocation": "138:18:2",
									"nodeType": "StructDefinition",
									"scope": 233,
									"src": "131:138:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "tkn",
									"nameLocation": "306:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "279:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_ERC223TransferInfo_$189_storage",
										"typeString": "struct IERC223Recipient.ERC223TransferInfo"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "ERC223TransferInfo",
											"nameLocations": [
												"279:18:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 189,
											"src": "279:18:2"
										},
										"referencedDeclaration": 189,
										"src": "279:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ERC223TransferInfo_$189_storage_ptr",
											"typeString": "struct IERC223Recipient.ERC223TransferInfo"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "627:694:2",
										"statements": [
											{
												"documentation": " @dev Note that inside of the token transaction handler the actual sender of token transfer is accessible via the tkn.sender variable\n (analogue of msg.sender for Ether transfers)\n \n tkn.value - is the amount of transferred tokens\n tkn.data  - is the \"metadata\" of token transfer\n tkn.token_contract is most likely equal to msg.sender because the token contract typically invokes this function",
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 204,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1114:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC223TransferInfo_$189_storage",
																"typeString": "struct IERC223Recipient.ERC223TransferInfo storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1118:14:2",
														"memberName": "token_contract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "1114:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 207,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1139:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1114:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1114:31:2"
											},
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 211,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1155:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC223TransferInfo_$189_storage",
																"typeString": "struct IERC223Recipient.ERC223TransferInfo storage ref"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1159:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 184,
														"src": "1155:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 214,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1176:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1155:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1155:26:2"
											},
											{
												"expression": {
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 217,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1191:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC223TransferInfo_$189_storage",
																"typeString": "struct IERC223Recipient.ERC223TransferInfo storage ref"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1195:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 186,
														"src": "1191:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 220,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1212:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1191:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "1191:27:2"
											},
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 223,
															"name": "tkn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1228:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC223TransferInfo_$189_storage",
																"typeString": "struct IERC223Recipient.ERC223TransferInfo storage ref"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1232:4:2",
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 188,
														"src": "1228:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "_data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1249:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1228:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "1228:26:2"
											},
											{
												"expression": {
													"hexValue": "30783839343365633032",
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1304:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2302929922_by_1",
														"typeString": "int_const 2302929922"
													},
													"value": "0x8943ec02"
												},
												"functionReturnParameters": 203,
												"id": 230,
												"nodeType": "Return",
												"src": "1297:17:2"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "316:199:2",
										"text": " @dev Standard ERC223 function that will handle incoming token transfers.\n @param _from  Token sender address.\n @param _value Amount of tokens.\n @param _data  Transaction metadata."
									},
									"functionSelector": "8943ec02",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenReceived",
									"nameLocation": "529:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "543:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "563:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "558:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "558:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "584:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "571:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "571:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:48:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "615:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 201,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:8:2"
									},
									"scope": 233,
									"src": "520:801:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 234,
							"src": "91:1232:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1324:2"
				},
				"id": 2
			},
			"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							741
						]
					},
					"id": 742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "57:1083:3",
								"text": "@notice Simple ERC20 + EIP-2612 implementation.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\n @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\n @dev Note:\n - The ERC20 standard allows minting and transferring to and from the zero address,\n   minting and transferring zero tokens, as well as self-approvals.\n   For performance, this implementation WILL NOT revert for such actions.\n   Please add any checks with overrides if desired.\n - The `permit` function uses the ecrecover precompile (0x1).\n If you are overriding:\n - NEVER violate the ERC20 invariant:\n   the total sum of all balances must be equal to `totalSupply()`.\n - Check that the overridden function is actually used in the function you want to\n   change the behavior of. Much of the code has been manually inlined for performance."
							},
							"fullyImplemented": false,
							"id": 741,
							"linearizedBaseContracts": [
								741
							],
							"name": "ERC20",
							"nameLocation": "1158:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1453:41:3",
										"text": "@dev The total supply has overflowed."
									},
									"errorSelector": "e5cfe957",
									"id": 239,
									"name": "TotalSupplyOverflow",
									"nameLocation": "1505:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:3"
									},
									"src": "1499:28:3"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1533:38:3",
										"text": "@dev The allowance has overflowed."
									},
									"errorSelector": "f9067066",
									"id": 242,
									"name": "AllowanceOverflow",
									"nameLocation": "1582:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1599:2:3"
									},
									"src": "1576:26:3"
								},
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "1608:39:3",
										"text": "@dev The allowance has underflowed."
									},
									"errorSelector": "8301ab38",
									"id": 245,
									"name": "AllowanceUnderflow",
									"nameLocation": "1658:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:2:3"
									},
									"src": "1652:27:3"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1685:30:3",
										"text": "@dev Insufficient balance."
									},
									"errorSelector": "f4d678b8",
									"id": 248,
									"name": "InsufficientBalance",
									"nameLocation": "1726:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1745:2:3"
									},
									"src": "1720:28:3"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1754:32:3",
										"text": "@dev Insufficient allowance."
									},
									"errorSelector": "13be252b",
									"id": 251,
									"name": "InsufficientAllowance",
									"nameLocation": "1797:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:2:3"
									},
									"src": "1791:30:3"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "1827:31:3",
										"text": "@dev The permit is invalid."
									},
									"errorSelector": "ddafbaef",
									"id": 254,
									"name": "InvalidPermit",
									"nameLocation": "1869:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1882:2:3"
									},
									"src": "1863:22:3"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1891:32:3",
										"text": "@dev The permit has expired."
									},
									"errorSelector": "1a15a3cc",
									"id": 257,
									"name": "PermitExpired",
									"nameLocation": "1934:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:2:3"
									},
									"src": "1928:22:3"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1956:55:3",
										"text": "@dev The allowance of Permit2 is fixed at infinity."
									},
									"errorSelector": "3f68539a",
									"id": 260,
									"name": "Permit2AllowanceIsFixedAtInfinity",
									"nameLocation": "2022:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2055:2:3"
									},
									"src": "2016:42:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "2347:73:3",
										"text": "@dev Emitted when `amount` tokens is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 269,
									"name": "Transfer",
									"nameLocation": "2431:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2456:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2440:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2478:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2462:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2490:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2482:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:58:3"
									},
									"src": "2425:73:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "2504:85:3",
										"text": "@dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 278,
									"name": "Approval",
									"nameLocation": "2600:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2625:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2609:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2632:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2665:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2657:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:64:3"
									},
									"src": "2594:79:3"
								},
								{
									"constant": true,
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2679:65:3",
										"text": "@dev `keccak256(bytes(\"Transfer(address,address,uint256)\"))`."
									},
									"id": 282,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "2774:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "2749:127:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 280,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2749:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 281,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2810:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "2883:65:3",
										"text": "@dev `keccak256(bytes(\"Approval(address,address,uint256)\"))`."
									},
									"id": 286,
									"mutability": "constant",
									"name": "_APPROVAL_EVENT_SIGNATURE",
									"nameLocation": "2978:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "2953:127:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 284,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2953:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307838633562653165356562656337643562643134663731343237643165383466336464303331346330663762323239316535623230306163386337633362393235",
										"id": 285,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3014:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63486140976153616755203102783360879283472101686154884697241723088393386309925_by_1",
											"typeString": "int_const 6348...(69 digits omitted)...9925"
										},
										"value": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3370:47:3",
										"text": "@dev The storage slot for the total supply."
									},
									"id": 290,
									"mutability": "constant",
									"name": "_TOTAL_SUPPLY_SLOT",
									"nameLocation": "3447:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "3422:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3422:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078303533343563646637376562363866343463",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3468:20:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96006856662521017420_by_1",
											"typeString": "int_const 96006856662521017420"
										},
										"value": "0x05345cdf77eb68f44c"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "3495:203:3",
										"text": "@dev The balance slot of `owner` is given by:\n ```\n     mstore(0x0c, _BALANCE_SLOT_SEED)\n     mstore(0x00, owner)\n     let balanceSlot := keccak256(0x0c, 0x20)\n ```"
									},
									"id": 294,
									"mutability": "constant",
									"name": "_BALANCE_SLOT_SEED",
									"nameLocation": "3728:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "3703:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 292,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3703:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783837613231316132",
										"id": 293,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3749:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2275545506_by_1",
											"typeString": "int_const 2275545506"
										},
										"value": "0x87a211a2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "3766:256:3",
										"text": "@dev The allowance slot of (`owner`, `spender`) is given by:\n ```\n     mstore(0x20, spender)\n     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n     mstore(0x00, owner)\n     let allowanceSlot := keccak256(0x0c, 0x34)\n ```"
									},
									"id": 298,
									"mutability": "constant",
									"name": "_ALLOWANCE_SLOT_SEED",
									"nameLocation": "4052:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "4027:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 296,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4027:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783766356539663230",
										"id": 297,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4075:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2136907552_by_1",
											"typeString": "int_const 2136907552"
										},
										"value": "0x7f5e9f20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "4092:198:3",
										"text": "@dev The nonce slot of `owner` is given by:\n ```\n     mstore(0x0c, _NONCES_SLOT_SEED)\n     mstore(0x00, owner)\n     let nonceSlot := keccak256(0x0c, 0x20)\n ```"
									},
									"id": 302,
									"mutability": "constant",
									"name": "_NONCES_SLOT_SEED",
									"nameLocation": "4320:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "4295:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 300,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4295:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783338333737353038",
										"id": 301,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4340:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_943158536_by_1",
											"typeString": "int_const 943158536"
										},
										"value": "0x38377508"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4640:46:3",
										"text": "@dev `(_NONCES_SLOT_SEED << 16) | 0x1901`."
									},
									"id": 306,
									"mutability": "constant",
									"name": "_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX",
									"nameLocation": "4716:39:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "4691:81:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 304,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4691:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078333833373735303831393031",
										"id": 305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4758:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_61810837821697_by_1",
											"typeString": "int_const 61810837821697"
										},
										"value": "0x383775081901"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "4779:107:3",
										"text": "@dev `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`."
									},
									"id": 310,
									"mutability": "constant",
									"name": "_DOMAIN_TYPEHASH",
									"nameLocation": "4916:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "4891:118:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 308,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4891:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307838623733633363363962623866653364353132656363346366373539636337393233396637623137396230666661636161396137356435323262333934303066",
										"id": 309,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4943:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
											"typeString": "int_const 6307...(69 digits omitted)...1551"
										},
										"value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "5016:99:3",
										"text": "@dev `keccak256(\"1\")`.\n If you need to use a different version, override `_versionHash`."
									},
									"id": 314,
									"mutability": "constant",
									"name": "_DEFAULT_VERSION_HASH",
									"nameLocation": "5145:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "5120:123:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 312,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5120:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863383965666461613534633066323063376164663631323838326466303935306635613935313633376530333037636463623463363732663239386238626336",
										"id": 313,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5177:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1",
											"typeString": "int_const 9074...(69 digits omitted)...1126"
										},
										"value": "0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "5250:107:3",
										"text": "@dev `keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`."
									},
									"id": 318,
									"mutability": "constant",
									"name": "_PERMIT_TYPEHASH",
									"nameLocation": "5387:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "5362:118:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 316,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5362:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 317,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5414:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "5487:340:3",
										"text": "@dev The canonical Permit2 address.\n For signature-based allowance granting for single transaction ERC20 `transferFrom`.\n To enable, override `_givePermit2InfiniteAllowance()`.\n [Github](https://github.com/Uniswap/permit2)\n [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)"
									},
									"id": 322,
									"mutability": "constant",
									"name": "_PERMIT2",
									"nameLocation": "5858:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "5832:79:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 320,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5832:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
										"id": 321,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5869:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "6201:39:3",
										"text": "@dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6254:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6258:2:3"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "6290:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6290:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6289:15:3"
									},
									"scope": 741,
									"src": "6245:60:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "6311:41:3",
										"text": "@dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6366:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6372:2:3"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "6404:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6404:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6403:15:3"
									},
									"scope": 741,
									"src": "6357:62:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "6536:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6553:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 339,
												"id": 341,
												"nodeType": "Return",
												"src": "6546:9:3"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "6425:50:3",
										"text": "@dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "6489:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6497:2:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6529:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 337,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6529:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6528:7:3"
									},
									"scope": 741,
									"src": "6480:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6975:127:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7037:59:3",
													"nodeType": "YulBlock",
													"src": "7037:59:3",
													"statements": [
														{
															"nativeSrc": "7051:35:3",
															"nodeType": "YulAssignment",
															"src": "7051:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nativeSrc": "7067:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "7067:18:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "7061:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "7061:5:3"
																},
																"nativeSrc": "7061:25:3",
																"nodeType": "YulFunctionCall",
																"src": "7061:25:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7051:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7051:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "7067:18:3",
														"valueSize": 1
													},
													{
														"declaration": 347,
														"isOffset": false,
														"isSlot": false,
														"src": "7051:6:3",
														"valueSize": 1
													}
												],
												"id": 349,
												"nodeType": "InlineAssembly",
												"src": "7028:68:3"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "6851:51:3",
										"text": "@dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6916:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6927:2:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6967:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6959:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6959:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6958:16:3"
									},
									"scope": 741,
									"src": "6907:195:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7247:207:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7309:139:3",
													"nodeType": "YulBlock",
													"src": "7309:139:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7330:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7330:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nativeSrc": "7336:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "7336:18:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7323:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:3"
																},
																"nativeSrc": "7323:32:3",
																"nodeType": "YulFunctionCall",
																"src": "7323:32:3"
															},
															"nativeSrc": "7323:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "7323:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7375:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7375:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "7381:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "7381:5:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7368:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:3"
																},
																"nativeSrc": "7368:19:3",
																"nodeType": "YulFunctionCall",
																"src": "7368:19:3"
															},
															"nativeSrc": "7368:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "7368:19:3"
														},
														{
															"nativeSrc": "7400:38:3",
															"nodeType": "YulAssignment",
															"src": "7400:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7426:4:3",
																				"nodeType": "YulLiteral",
																				"src": "7426:4:3",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7432:4:3",
																				"nodeType": "YulLiteral",
																				"src": "7432:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "7416:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "7416:9:3"
																		},
																		"nativeSrc": "7416:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7416:21:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "7410:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "7410:5:3"
																},
																"nativeSrc": "7410:28:3",
																"nodeType": "YulFunctionCall",
																"src": "7410:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7400:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 294,
														"isOffset": false,
														"isSlot": false,
														"src": "7336:18:3",
														"valueSize": 1
													},
													{
														"declaration": 354,
														"isOffset": false,
														"isSlot": false,
														"src": "7381:5:3",
														"valueSize": 1
													},
													{
														"declaration": 357,
														"isOffset": false,
														"isSlot": false,
														"src": "7400:6:3",
														"valueSize": 1
													}
												],
												"id": 359,
												"nodeType": "InlineAssembly",
												"src": "7300:148:3"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "7108:55:3",
										"text": "@dev Returns the amount of tokens owned by `owner`."
									},
									"functionSelector": "70a08231",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7177:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7195:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7187:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7186:15:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7239:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7231:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7230:16:3"
									},
									"scope": 741,
									"src": "7168:286:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "7681:363:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 371,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "7695:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7695:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "IfStatement",
												"src": "7691:111:3",
												"trueBody": {
													"id": 383,
													"nodeType": "Block",
													"src": "7728:74:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 373,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "7746:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 374,
																	"name": "_PERMIT2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "7757:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7746:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 382,
															"nodeType": "IfStatement",
															"src": "7742:49:3",
															"trueBody": {
																"expression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7779:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 377,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7779:7:3",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 376,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7774:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7774:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7788:3:3",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7774:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 370,
																"id": 381,
																"nodeType": "Return",
																"src": "7767:24:3"
															}
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "7863:175:3",
													"nodeType": "YulBlock",
													"src": "7863:175:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7884:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7884:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "7890:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "7890:7:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7877:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:3"
																},
																"nativeSrc": "7877:21:3",
																"nodeType": "YulFunctionCall",
																"src": "7877:21:3"
															},
															"nativeSrc": "7877:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "7877:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7918:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7918:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nativeSrc": "7924:20:3",
																		"nodeType": "YulIdentifier",
																		"src": "7924:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7911:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:3"
																},
																"nativeSrc": "7911:34:3",
																"nodeType": "YulFunctionCall",
																"src": "7911:34:3"
															},
															"nativeSrc": "7911:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "7911:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7965:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7965:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "7971:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "7971:5:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7958:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7958:6:3"
																},
																"nativeSrc": "7958:19:3",
																"nodeType": "YulFunctionCall",
																"src": "7958:19:3"
															},
															"nativeSrc": "7958:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "7958:19:3"
														},
														{
															"nativeSrc": "7990:38:3",
															"nodeType": "YulAssignment",
															"src": "7990:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8016:4:3",
																				"nodeType": "YulLiteral",
																				"src": "8016:4:3",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8022:4:3",
																				"nodeType": "YulLiteral",
																				"src": "8022:4:3",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "8006:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "8006:9:3"
																		},
																		"nativeSrc": "8006:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8006:21:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "8000:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "8000:5:3"
																},
																"nativeSrc": "8000:28:3",
																"nodeType": "YulFunctionCall",
																"src": "8000:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7990:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 298,
														"isOffset": false,
														"isSlot": false,
														"src": "7924:20:3",
														"valueSize": 1
													},
													{
														"declaration": 364,
														"isOffset": false,
														"isSlot": false,
														"src": "7971:5:3",
														"valueSize": 1
													},
													{
														"declaration": 369,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:6:3",
														"valueSize": 1
													},
													{
														"declaration": 366,
														"isOffset": false,
														"isSlot": false,
														"src": "7890:7:3",
														"valueSize": 1
													}
												],
												"id": 385,
												"nodeType": "InlineAssembly",
												"src": "7854:184:3"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "7460:84:3",
										"text": "@dev Returns the amount of tokens that `spender` can spend on behalf of `owner`."
									},
									"functionSelector": "dd62ed3e",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "7558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "7568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "7583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7567:32:3"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7669:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "7661:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7660:16:3"
									},
									"scope": 741,
									"src": "7549:495:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "8255:949:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "8269:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8269:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 401,
												"nodeType": "IfStatement",
												"src": "8265:447:3",
												"trueBody": {
													"id": 400,
													"nodeType": "Block",
													"src": "8302:410:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "8372:330:3",
																"nodeType": "YulBlock",
																"src": "8372:330:3",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8543:145:3",
																			"nodeType": "YulBlock",
																			"src": "8543:145:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8572:4:3",
																								"nodeType": "YulLiteral",
																								"src": "8572:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8578:10:3",
																								"nodeType": "YulLiteral",
																								"src": "8578:10:3",
																								"type": "",
																								"value": "0x3f68539a"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "8565:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "8565:6:3"
																						},
																						"nativeSrc": "8565:24:3",
																						"nodeType": "YulFunctionCall",
																						"src": "8565:24:3"
																					},
																					"nativeSrc": "8565:24:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "8565:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8659:4:3",
																								"nodeType": "YulLiteral",
																								"src": "8659:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8665:4:3",
																								"nodeType": "YulLiteral",
																								"src": "8665:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "8652:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "8652:6:3"
																						},
																						"nativeSrc": "8652:18:3",
																						"nodeType": "YulFunctionCall",
																						"src": "8652:18:3"
																					},
																					"nativeSrc": "8652:18:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "8652:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8487:2:3",
																											"nodeType": "YulLiteral",
																											"src": "8487:2:3",
																											"type": "",
																											"value": "96"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "8495:2:3",
																													"nodeType": "YulLiteral",
																													"src": "8495:2:3",
																													"type": "",
																													"value": "96"
																												},
																												{
																													"name": "spender",
																													"nativeSrc": "8499:7:3",
																													"nodeType": "YulIdentifier",
																													"src": "8499:7:3"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nativeSrc": "8491:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "8491:3:3"
																											},
																											"nativeSrc": "8491:16:3",
																											"nodeType": "YulFunctionCall",
																											"src": "8491:16:3"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "8483:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "8483:3:3"
																									},
																									"nativeSrc": "8483:25:3",
																									"nodeType": "YulFunctionCall",
																									"src": "8483:25:3"
																								},
																								{
																									"name": "_PERMIT2",
																									"nativeSrc": "8510:8:3",
																									"nodeType": "YulIdentifier",
																									"src": "8510:8:3"
																								}
																							],
																							"functionName": {
																								"name": "xor",
																								"nativeSrc": "8479:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "8479:3:3"
																							},
																							"nativeSrc": "8479:40:3",
																							"nodeType": "YulFunctionCall",
																							"src": "8479:40:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "amount",
																											"nativeSrc": "8532:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "8532:6:3"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "8528:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "8528:3:3"
																									},
																									"nativeSrc": "8528:11:3",
																									"nodeType": "YulFunctionCall",
																									"src": "8528:11:3"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "8521:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "8521:6:3"
																							},
																							"nativeSrc": "8521:19:3",
																							"nodeType": "YulFunctionCall",
																							"src": "8521:19:3"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "8476:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "8476:2:3"
																					},
																					"nativeSrc": "8476:65:3",
																					"nodeType": "YulFunctionCall",
																					"src": "8476:65:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "8469:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "8469:6:3"
																			},
																			"nativeSrc": "8469:73:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8469:73:3"
																		},
																		"nativeSrc": "8466:222:3",
																		"nodeType": "YulIf",
																		"src": "8466:222:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 322,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8510:8:3",
																	"valueSize": 1
																},
																{
																	"declaration": 392,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8532:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 390,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8499:7:3",
																	"valueSize": 1
																}
															],
															"id": 399,
															"nodeType": "InlineAssembly",
															"src": "8363:339:3"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "8773:404:3",
													"nodeType": "YulBlock",
													"src": "8773:404:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8858:4:3",
																		"nodeType": "YulLiteral",
																		"src": "8858:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "8864:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "8864:7:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8851:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8851:6:3"
																},
																"nativeSrc": "8851:21:3",
																"nodeType": "YulFunctionCall",
																"src": "8851:21:3"
															},
															"nativeSrc": "8851:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "8851:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8892:4:3",
																		"nodeType": "YulLiteral",
																		"src": "8892:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nativeSrc": "8898:20:3",
																		"nodeType": "YulIdentifier",
																		"src": "8898:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8885:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8885:6:3"
																},
																"nativeSrc": "8885:34:3",
																"nodeType": "YulFunctionCall",
																"src": "8885:34:3"
															},
															"nativeSrc": "8885:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "8885:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8939:4:3",
																		"nodeType": "YulLiteral",
																		"src": "8939:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "8945:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "8945:6:3"
																		},
																		"nativeSrc": "8945:8:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8945:8:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8932:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:3"
																},
																"nativeSrc": "8932:22:3",
																"nodeType": "YulFunctionCall",
																"src": "8932:22:3"
															},
															"nativeSrc": "8932:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "8932:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8984:4:3",
																				"nodeType": "YulLiteral",
																				"src": "8984:4:3",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8990:4:3",
																				"nodeType": "YulLiteral",
																				"src": "8990:4:3",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "8974:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "8974:9:3"
																		},
																		"nativeSrc": "8974:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8974:21:3"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "8997:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8997:6:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "8967:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8967:6:3"
																},
																"nativeSrc": "8967:37:3",
																"nodeType": "YulFunctionCall",
																"src": "8967:37:3"
															},
															"nativeSrc": "8967:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "8967:37:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9066:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9066:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "9072:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "9072:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9059:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9059:6:3"
																},
																"nativeSrc": "9059:20:3",
																"nodeType": "YulFunctionCall",
																"src": "9059:20:3"
															},
															"nativeSrc": "9059:20:3",
															"nodeType": "YulExpressionStatement",
															"src": "9059:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9097:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9097:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9103:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9103:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nativeSrc": "9109:25:3",
																		"nodeType": "YulIdentifier",
																		"src": "9109:25:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "9136:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "9136:6:3"
																		},
																		"nativeSrc": "9136:8:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9136:8:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9150:2:3",
																				"nodeType": "YulLiteral",
																				"src": "9150:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9160:4:3",
																						"nodeType": "YulLiteral",
																						"src": "9160:4:3",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "9154:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "9154:5:3"
																				},
																				"nativeSrc": "9154:11:3",
																				"nodeType": "YulFunctionCall",
																				"src": "9154:11:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9146:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:3"
																		},
																		"nativeSrc": "9146:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9146:20:3"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "9092:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9092:4:3"
																},
																"nativeSrc": "9092:75:3",
																"nodeType": "YulFunctionCall",
																"src": "9092:75:3"
															},
															"nativeSrc": "9092:75:3",
															"nodeType": "YulExpressionStatement",
															"src": "9092:75:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 298,
														"isOffset": false,
														"isSlot": false,
														"src": "8898:20:3",
														"valueSize": 1
													},
													{
														"declaration": 286,
														"isOffset": false,
														"isSlot": false,
														"src": "9109:25:3",
														"valueSize": 1
													},
													{
														"declaration": 392,
														"isOffset": false,
														"isSlot": false,
														"src": "8997:6:3",
														"valueSize": 1
													},
													{
														"declaration": 392,
														"isOffset": false,
														"isSlot": false,
														"src": "9072:6:3",
														"valueSize": 1
													},
													{
														"declaration": 390,
														"isOffset": false,
														"isSlot": false,
														"src": "8864:7:3",
														"valueSize": 1
													}
												],
												"id": 402,
												"nodeType": "InlineAssembly",
												"src": "8764:413:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9193:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 396,
												"id": 404,
												"nodeType": "Return",
												"src": "9186:11:3"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "8050:120:3",
										"text": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Emits a {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8184:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8200:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "8192:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8217:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "8209:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8209:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8191:33:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "8249:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8249:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8248:6:3"
									},
									"scope": 741,
									"src": "8175:1029:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "9467:1330:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 417,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9498:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9502:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9498:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "9510:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "9514:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 416,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "9477:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9477:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "9477:44:3"
											},
											{
												"AST": {
													"nativeSrc": "9583:1134:3",
													"nodeType": "YulBlock",
													"src": "9583:1134:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9664:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9664:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nativeSrc": "9670:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "9670:18:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9657:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:3"
																},
																"nativeSrc": "9657:32:3",
																"nodeType": "YulFunctionCall",
																"src": "9657:32:3"
															},
															"nativeSrc": "9657:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "9657:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9709:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9709:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "9715:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "9715:6:3"
																		},
																		"nativeSrc": "9715:8:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9715:8:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9702:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9702:6:3"
																},
																"nativeSrc": "9702:22:3",
																"nodeType": "YulFunctionCall",
																"src": "9702:22:3"
															},
															"nativeSrc": "9702:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "9702:22:3"
														},
														{
															"nativeSrc": "9737:44:3",
															"nodeType": "YulVariableDeclaration",
															"src": "9737:44:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9770:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9770:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9776:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9776:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9760:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "9760:9:3"
																},
																"nativeSrc": "9760:21:3",
																"nodeType": "YulFunctionCall",
																"src": "9760:21:3"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nativeSrc": "9741:15:3",
																	"nodeType": "YulTypedName",
																	"src": "9741:15:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9794:41:3",
															"nodeType": "YulVariableDeclaration",
															"src": "9794:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "9819:15:3",
																		"nodeType": "YulIdentifier",
																		"src": "9819:15:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "9813:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "9813:5:3"
																},
																"nativeSrc": "9813:22:3",
																"nodeType": "YulFunctionCall",
																"src": "9813:22:3"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nativeSrc": "9798:11:3",
																	"nodeType": "YulTypedName",
																	"src": "9798:11:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9922:119:3",
																"nodeType": "YulBlock",
																"src": "9922:119:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9947:4:3",
																					"nodeType": "YulLiteral",
																					"src": "9947:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9953:10:3",
																					"nodeType": "YulLiteral",
																					"src": "9953:10:3",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9940:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9940:6:3"
																			},
																			"nativeSrc": "9940:24:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9940:24:3"
																		},
																		"nativeSrc": "9940:24:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "9940:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10016:4:3",
																					"nodeType": "YulLiteral",
																					"src": "10016:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10022:4:3",
																					"nodeType": "YulLiteral",
																					"src": "10022:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10009:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "10009:6:3"
																			},
																			"nativeSrc": "10009:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "10009:18:3"
																		},
																		"nativeSrc": "10009:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "10009:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "9901:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "9901:6:3"
																	},
																	{
																		"name": "fromBalance",
																		"nativeSrc": "9909:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "9909:11:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9898:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "9898:2:3"
																},
																"nativeSrc": "9898:23:3",
																"nodeType": "YulFunctionCall",
																"src": "9898:23:3"
															},
															"nativeSrc": "9895:146:3",
															"nodeType": "YulIf",
															"src": "9895:146:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "10116:15:3",
																		"nodeType": "YulIdentifier",
																		"src": "10116:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "10137:11:3",
																				"nodeType": "YulIdentifier",
																				"src": "10137:11:3"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "10150:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "10150:6:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10133:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10133:3:3"
																		},
																		"nativeSrc": "10133:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10133:24:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10109:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10109:6:3"
																},
																"nativeSrc": "10109:49:3",
																"nodeType": "YulFunctionCall",
																"src": "10109:49:3"
															},
															"nativeSrc": "10109:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "10109:49:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10227:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10227:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "10233:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "10233:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10220:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:3"
																},
																"nativeSrc": "10220:16:3",
																"nodeType": "YulFunctionCall",
																"src": "10220:16:3"
															},
															"nativeSrc": "10220:16:3",
															"nodeType": "YulExpressionStatement",
															"src": "10220:16:3"
														},
														{
															"nativeSrc": "10249:42:3",
															"nodeType": "YulVariableDeclaration",
															"src": "10249:42:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10280:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10280:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10286:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10286:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10270:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "10270:9:3"
																},
																"nativeSrc": "10270:21:3",
																"nodeType": "YulFunctionCall",
																"src": "10270:21:3"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nativeSrc": "10253:13:3",
																	"nodeType": "YulTypedName",
																	"src": "10253:13:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nativeSrc": "10495:13:3",
																		"nodeType": "YulIdentifier",
																		"src": "10495:13:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nativeSrc": "10520:13:3",
																						"nodeType": "YulIdentifier",
																						"src": "10520:13:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "10514:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "10514:5:3"
																				},
																				"nativeSrc": "10514:20:3",
																				"nodeType": "YulFunctionCall",
																				"src": "10514:20:3"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "10536:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "10536:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10510:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10510:3:3"
																		},
																		"nativeSrc": "10510:33:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10510:33:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10488:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10488:6:3"
																},
																"nativeSrc": "10488:56:3",
																"nodeType": "YulFunctionCall",
																"src": "10488:56:3"
															},
															"nativeSrc": "10488:56:3",
															"nodeType": "YulExpressionStatement",
															"src": "10488:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10606:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10606:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "10612:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10612:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10599:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10599:6:3"
																},
																"nativeSrc": "10599:20:3",
																"nodeType": "YulFunctionCall",
																"src": "10599:20:3"
															},
															"nativeSrc": "10599:20:3",
															"nodeType": "YulExpressionStatement",
															"src": "10599:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10637:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10637:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10643:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10643:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "10649:25:3",
																		"nodeType": "YulIdentifier",
																		"src": "10649:25:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "10676:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "10676:6:3"
																		},
																		"nativeSrc": "10676:8:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:8:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10690:2:3",
																				"nodeType": "YulLiteral",
																				"src": "10690:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10700:4:3",
																						"nodeType": "YulLiteral",
																						"src": "10700:4:3",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "10694:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "10694:5:3"
																				},
																				"nativeSrc": "10694:11:3",
																				"nodeType": "YulFunctionCall",
																				"src": "10694:11:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10686:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10686:3:3"
																		},
																		"nativeSrc": "10686:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10686:20:3"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "10632:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10632:4:3"
																},
																"nativeSrc": "10632:75:3",
																"nodeType": "YulFunctionCall",
																"src": "10632:75:3"
															},
															"nativeSrc": "10632:75:3",
															"nodeType": "YulExpressionStatement",
															"src": "10632:75:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 294,
														"isOffset": false,
														"isSlot": false,
														"src": "9670:18:3",
														"valueSize": 1
													},
													{
														"declaration": 282,
														"isOffset": false,
														"isSlot": false,
														"src": "10649:25:3",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "10150:6:3",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "10536:6:3",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "10612:6:3",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "9901:6:3",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "10233:2:3",
														"valueSize": 1
													}
												],
												"id": 423,
												"nodeType": "InlineAssembly",
												"src": "9574:1143:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 425,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10746:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10750:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10746:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "10758:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "10762:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 424,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "10726:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10726:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "10726:43:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10786:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 415,
												"id": 432,
												"nodeType": "Return",
												"src": "10779:11:3"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "9210:176:3",
										"text": "@dev Transfer `amount` tokens from the caller to `to`.\n Requirements:\n - `from` must at least have `amount`.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "9400:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9417:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9409:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9429:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9421:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9421:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9408:28:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9461:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9461:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9460:6:3"
									},
									"scope": 741,
									"src": "9391:1406:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "11259:4659:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "11290:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "11296:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "11300:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "11269:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11269:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "11269:38:3"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 452,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "11391:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11391:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "13702:2142:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "13772:2062:3",
																"nodeType": "YulBlock",
																"src": "13772:2062:3",
																"statements": [
																	{
																		"nativeSrc": "13790:26:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13790:26:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13807:2:3",
																					"nodeType": "YulLiteral",
																					"src": "13807:2:3",
																					"type": "",
																					"value": "96"
																				},
																				{
																					"name": "from",
																					"nativeSrc": "13811:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "13811:4:3"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "13803:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "13803:3:3"
																			},
																			"nativeSrc": "13803:13:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13803:13:3"
																		},
																		"variables": [
																			{
																				"name": "from_",
																				"nativeSrc": "13794:5:3",
																				"nodeType": "YulTypedName",
																				"src": "13794:5:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13906:4:3",
																					"nodeType": "YulLiteral",
																					"src": "13906:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "caller",
																						"nativeSrc": "13912:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "13912:6:3"
																					},
																					"nativeSrc": "13912:8:3",
																					"nodeType": "YulFunctionCall",
																					"src": "13912:8:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13899:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "13899:6:3"
																			},
																			"nativeSrc": "13899:22:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13899:22:3"
																		},
																		"nativeSrc": "13899:22:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13899:22:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13945:4:3",
																					"nodeType": "YulLiteral",
																					"src": "13945:4:3",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"arguments": [
																						{
																							"name": "from_",
																							"nativeSrc": "13954:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "13954:5:3"
																						},
																						{
																							"name": "_ALLOWANCE_SLOT_SEED",
																							"nativeSrc": "13961:20:3",
																							"nodeType": "YulIdentifier",
																							"src": "13961:20:3"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "13951:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "13951:2:3"
																					},
																					"nativeSrc": "13951:31:3",
																					"nodeType": "YulFunctionCall",
																					"src": "13951:31:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13938:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "13938:6:3"
																			},
																			"nativeSrc": "13938:45:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13938:45:3"
																		},
																		"nativeSrc": "13938:45:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13938:45:3"
																	},
																	{
																		"nativeSrc": "14000:42:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14000:42:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14031:4:3",
																					"nodeType": "YulLiteral",
																					"src": "14031:4:3",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14037:4:3",
																					"nodeType": "YulLiteral",
																					"src": "14037:4:3",
																					"type": "",
																					"value": "0x34"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "14021:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "14021:9:3"
																			},
																			"nativeSrc": "14021:21:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14021:21:3"
																		},
																		"variables": [
																			{
																				"name": "allowanceSlot",
																				"nativeSrc": "14004:13:3",
																				"nodeType": "YulTypedName",
																				"src": "14004:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14059:38:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14059:38:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "allowanceSlot",
																					"nativeSrc": "14083:13:3",
																					"nodeType": "YulIdentifier",
																					"src": "14083:13:3"
																				}
																			],
																			"functionName": {
																				"name": "sload",
																				"nativeSrc": "14077:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "14077:5:3"
																			},
																			"nativeSrc": "14077:20:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14077:20:3"
																		},
																		"variables": [
																			{
																				"name": "allowance_",
																				"nativeSrc": "14063:10:3",
																				"nodeType": "YulTypedName",
																				"src": "14063:10:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14203:428:3",
																			"nodeType": "YulBlock",
																			"src": "14203:428:3",
																			"statements": [
																				{
																					"body": {
																						"nativeSrc": "14336:145:3",
																						"nodeType": "YulBlock",
																						"src": "14336:145:3",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "14369:4:3",
																											"nodeType": "YulLiteral",
																											"src": "14369:4:3",
																											"type": "",
																											"value": "0x00"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "14375:10:3",
																											"nodeType": "YulLiteral",
																											"src": "14375:10:3",
																											"type": "",
																											"value": "0x13be252b"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nativeSrc": "14362:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "14362:6:3"
																									},
																									"nativeSrc": "14362:24:3",
																									"nodeType": "YulFunctionCall",
																									"src": "14362:24:3"
																								},
																								"nativeSrc": "14362:24:3",
																								"nodeType": "YulExpressionStatement",
																								"src": "14362:24:3"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "14448:4:3",
																											"nodeType": "YulLiteral",
																											"src": "14448:4:3",
																											"type": "",
																											"value": "0x1c"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "14454:4:3",
																											"nodeType": "YulLiteral",
																											"src": "14454:4:3",
																											"type": "",
																											"value": "0x04"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nativeSrc": "14441:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "14441:6:3"
																									},
																									"nativeSrc": "14441:18:3",
																									"nodeType": "YulFunctionCall",
																									"src": "14441:18:3"
																								},
																								"nativeSrc": "14441:18:3",
																								"nodeType": "YulExpressionStatement",
																								"src": "14441:18:3"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "amount",
																								"nativeSrc": "14316:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "14316:6:3"
																							},
																							{
																								"name": "allowance_",
																								"nativeSrc": "14324:10:3",
																								"nodeType": "YulIdentifier",
																								"src": "14324:10:3"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nativeSrc": "14313:2:3",
																							"nodeType": "YulIdentifier",
																							"src": "14313:2:3"
																						},
																						"nativeSrc": "14313:22:3",
																						"nodeType": "YulFunctionCall",
																						"src": "14313:22:3"
																					},
																					"nativeSrc": "14310:171:3",
																					"nodeType": "YulIf",
																					"src": "14310:171:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "allowanceSlot",
																								"nativeSrc": "14574:13:3",
																								"nodeType": "YulIdentifier",
																								"src": "14574:13:3"
																							},
																							{
																								"arguments": [
																									{
																										"name": "allowance_",
																										"nativeSrc": "14593:10:3",
																										"nodeType": "YulIdentifier",
																										"src": "14593:10:3"
																									},
																									{
																										"name": "amount",
																										"nativeSrc": "14605:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "14605:6:3"
																									}
																								],
																								"functionName": {
																									"name": "sub",
																									"nativeSrc": "14589:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "14589:3:3"
																								},
																								"nativeSrc": "14589:23:3",
																								"nodeType": "YulFunctionCall",
																								"src": "14589:23:3"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "14567:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "14567:6:3"
																						},
																						"nativeSrc": "14567:46:3",
																						"nodeType": "YulFunctionCall",
																						"src": "14567:46:3"
																					},
																					"nativeSrc": "14567:46:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "14567:46:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "allowance_",
																					"nativeSrc": "14191:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "14191:10:3"
																				}
																			],
																			"functionName": {
																				"name": "not",
																				"nativeSrc": "14187:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "14187:3:3"
																			},
																			"nativeSrc": "14187:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14187:15:3"
																		},
																		"nativeSrc": "14184:447:3",
																		"nodeType": "YulIf",
																		"src": "14184:447:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14719:4:3",
																					"nodeType": "YulLiteral",
																					"src": "14719:4:3",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"arguments": [
																						{
																							"name": "from_",
																							"nativeSrc": "14728:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "14728:5:3"
																						},
																						{
																							"name": "_BALANCE_SLOT_SEED",
																							"nativeSrc": "14735:18:3",
																							"nodeType": "YulIdentifier",
																							"src": "14735:18:3"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "14725:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "14725:2:3"
																					},
																					"nativeSrc": "14725:29:3",
																					"nodeType": "YulFunctionCall",
																					"src": "14725:29:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14712:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "14712:6:3"
																			},
																			"nativeSrc": "14712:43:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14712:43:3"
																		},
																		"nativeSrc": "14712:43:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "14712:43:3"
																	},
																	{
																		"nativeSrc": "14772:44:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14772:44:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14805:4:3",
																					"nodeType": "YulLiteral",
																					"src": "14805:4:3",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14811:4:3",
																					"nodeType": "YulLiteral",
																					"src": "14811:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "14795:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "14795:9:3"
																			},
																			"nativeSrc": "14795:21:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14795:21:3"
																		},
																		"variables": [
																			{
																				"name": "fromBalanceSlot",
																				"nativeSrc": "14776:15:3",
																				"nodeType": "YulTypedName",
																				"src": "14776:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14833:41:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14833:41:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "fromBalanceSlot",
																					"nativeSrc": "14858:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "14858:15:3"
																				}
																			],
																			"functionName": {
																				"name": "sload",
																				"nativeSrc": "14852:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "14852:5:3"
																			},
																			"nativeSrc": "14852:22:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14852:22:3"
																		},
																		"variables": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "14837:11:3",
																				"nodeType": "YulTypedName",
																				"src": "14837:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14969:131:3",
																			"nodeType": "YulBlock",
																			"src": "14969:131:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14998:4:3",
																								"nodeType": "YulLiteral",
																								"src": "14998:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15004:10:3",
																								"nodeType": "YulLiteral",
																								"src": "15004:10:3",
																								"type": "",
																								"value": "0xf4d678b8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "14991:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "14991:6:3"
																						},
																						"nativeSrc": "14991:24:3",
																						"nodeType": "YulFunctionCall",
																						"src": "14991:24:3"
																					},
																					"nativeSrc": "14991:24:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "14991:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15071:4:3",
																								"nodeType": "YulLiteral",
																								"src": "15071:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15077:4:3",
																								"nodeType": "YulLiteral",
																								"src": "15077:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "15064:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "15064:6:3"
																						},
																						"nativeSrc": "15064:18:3",
																						"nodeType": "YulFunctionCall",
																						"src": "15064:18:3"
																					},
																					"nativeSrc": "15064:18:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "15064:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nativeSrc": "14948:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "14948:6:3"
																				},
																				{
																					"name": "fromBalance",
																					"nativeSrc": "14956:11:3",
																					"nodeType": "YulIdentifier",
																					"src": "14956:11:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "14945:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "14945:2:3"
																			},
																			"nativeSrc": "14945:23:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14945:23:3"
																		},
																		"nativeSrc": "14942:158:3",
																		"nodeType": "YulIf",
																		"src": "14942:158:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fromBalanceSlot",
																					"nativeSrc": "15183:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "15183:15:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "fromBalance",
																							"nativeSrc": "15204:11:3",
																							"nodeType": "YulIdentifier",
																							"src": "15204:11:3"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "15217:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "15217:6:3"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "15200:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "15200:3:3"
																					},
																					"nativeSrc": "15200:24:3",
																					"nodeType": "YulFunctionCall",
																					"src": "15200:24:3"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "15176:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "15176:6:3"
																			},
																			"nativeSrc": "15176:49:3",
																			"nodeType": "YulFunctionCall",
																			"src": "15176:49:3"
																		},
																		"nativeSrc": "15176:49:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "15176:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15302:4:3",
																					"nodeType": "YulLiteral",
																					"src": "15302:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nativeSrc": "15308:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "15308:2:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15295:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "15295:6:3"
																			},
																			"nativeSrc": "15295:16:3",
																			"nodeType": "YulFunctionCall",
																			"src": "15295:16:3"
																		},
																		"nativeSrc": "15295:16:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "15295:16:3"
																	},
																	{
																		"nativeSrc": "15328:42:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15328:42:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15359:4:3",
																					"nodeType": "YulLiteral",
																					"src": "15359:4:3",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15365:4:3",
																					"nodeType": "YulLiteral",
																					"src": "15365:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "15349:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "15349:9:3"
																			},
																			"nativeSrc": "15349:21:3",
																			"nodeType": "YulFunctionCall",
																			"src": "15349:21:3"
																		},
																		"variables": [
																			{
																				"name": "toBalanceSlot",
																				"nativeSrc": "15332:13:3",
																				"nodeType": "YulTypedName",
																				"src": "15332:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "toBalanceSlot",
																					"nativeSrc": "15590:13:3",
																					"nodeType": "YulIdentifier",
																					"src": "15590:13:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "toBalanceSlot",
																									"nativeSrc": "15615:13:3",
																									"nodeType": "YulIdentifier",
																									"src": "15615:13:3"
																								}
																							],
																							"functionName": {
																								"name": "sload",
																								"nativeSrc": "15609:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "15609:5:3"
																							},
																							"nativeSrc": "15609:20:3",
																							"nodeType": "YulFunctionCall",
																							"src": "15609:20:3"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "15631:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "15631:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15605:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "15605:3:3"
																					},
																					"nativeSrc": "15605:33:3",
																					"nodeType": "YulFunctionCall",
																					"src": "15605:33:3"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "15583:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "15583:6:3"
																			},
																			"nativeSrc": "15583:56:3",
																			"nodeType": "YulFunctionCall",
																			"src": "15583:56:3"
																		},
																		"nativeSrc": "15583:56:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "15583:56:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15709:4:3",
																					"nodeType": "YulLiteral",
																					"src": "15709:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "15715:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "15715:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15702:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "15702:6:3"
																			},
																			"nativeSrc": "15702:20:3",
																			"nodeType": "YulFunctionCall",
																			"src": "15702:20:3"
																		},
																		"nativeSrc": "15702:20:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "15702:20:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15744:4:3",
																					"nodeType": "YulLiteral",
																					"src": "15744:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15750:4:3",
																					"nodeType": "YulLiteral",
																					"src": "15750:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"name": "_TRANSFER_EVENT_SIGNATURE",
																					"nativeSrc": "15756:25:3",
																					"nodeType": "YulIdentifier",
																					"src": "15756:25:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15787:2:3",
																							"nodeType": "YulLiteral",
																							"src": "15787:2:3",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"name": "from_",
																							"nativeSrc": "15791:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "15791:5:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "15783:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "15783:3:3"
																					},
																					"nativeSrc": "15783:14:3",
																					"nodeType": "YulFunctionCall",
																					"src": "15783:14:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15803:2:3",
																							"nodeType": "YulLiteral",
																							"src": "15803:2:3",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "15813:4:3",
																									"nodeType": "YulLiteral",
																									"src": "15813:4:3",
																									"type": "",
																									"value": "0x0c"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "15807:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "15807:5:3"
																							},
																							"nativeSrc": "15807:11:3",
																							"nodeType": "YulFunctionCall",
																							"src": "15807:11:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "15799:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "15799:3:3"
																					},
																					"nativeSrc": "15799:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "15799:20:3"
																				}
																			],
																			"functionName": {
																				"name": "log3",
																				"nativeSrc": "15739:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "15739:4:3"
																			},
																			"nativeSrc": "15739:81:3",
																			"nodeType": "YulFunctionCall",
																			"src": "15739:81:3"
																		},
																		"nativeSrc": "15739:81:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "15739:81:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 298,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13961:20:3",
																	"valueSize": 1
																},
																{
																	"declaration": 294,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14735:18:3",
																	"valueSize": 1
																},
																{
																	"declaration": 282,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15756:25:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14316:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14605:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14948:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15217:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15631:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15715:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 437,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13811:4:3",
																	"valueSize": 1
																},
																{
																	"declaration": 439,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15308:2:3",
																	"valueSize": 1
																}
															],
															"id": 456,
															"nodeType": "InlineAssembly",
															"src": "13763:2071:3"
														}
													]
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "11387:4457:3",
												"trueBody": {
													"id": 455,
													"nodeType": "Block",
													"src": "11424:2272:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "11494:2192:3",
																"nodeType": "YulBlock",
																"src": "11494:2192:3",
																"statements": [
																	{
																		"nativeSrc": "11512:26:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11512:26:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11529:2:3",
																					"nodeType": "YulLiteral",
																					"src": "11529:2:3",
																					"type": "",
																					"value": "96"
																				},
																				{
																					"name": "from",
																					"nativeSrc": "11533:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "11533:4:3"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "11525:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "11525:3:3"
																			},
																			"nativeSrc": "11525:13:3",
																			"nodeType": "YulFunctionCall",
																			"src": "11525:13:3"
																		},
																		"variables": [
																			{
																				"name": "from_",
																				"nativeSrc": "11516:5:3",
																				"nodeType": "YulTypedName",
																				"src": "11516:5:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11589:894:3",
																			"nodeType": "YulBlock",
																			"src": "11589:894:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11688:4:3",
																								"nodeType": "YulLiteral",
																								"src": "11688:4:3",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "caller",
																									"nativeSrc": "11694:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "11694:6:3"
																								},
																								"nativeSrc": "11694:8:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11694:8:3"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "11681:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "11681:6:3"
																						},
																						"nativeSrc": "11681:22:3",
																						"nodeType": "YulFunctionCall",
																						"src": "11681:22:3"
																					},
																					"nativeSrc": "11681:22:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "11681:22:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11731:4:3",
																								"nodeType": "YulLiteral",
																								"src": "11731:4:3",
																								"type": "",
																								"value": "0x0c"
																							},
																							{
																								"arguments": [
																									{
																										"name": "from_",
																										"nativeSrc": "11740:5:3",
																										"nodeType": "YulIdentifier",
																										"src": "11740:5:3"
																									},
																									{
																										"name": "_ALLOWANCE_SLOT_SEED",
																										"nativeSrc": "11747:20:3",
																										"nodeType": "YulIdentifier",
																										"src": "11747:20:3"
																									}
																								],
																								"functionName": {
																									"name": "or",
																									"nativeSrc": "11737:2:3",
																									"nodeType": "YulIdentifier",
																									"src": "11737:2:3"
																								},
																								"nativeSrc": "11737:31:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11737:31:3"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "11724:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "11724:6:3"
																						},
																						"nativeSrc": "11724:45:3",
																						"nodeType": "YulFunctionCall",
																						"src": "11724:45:3"
																					},
																					"nativeSrc": "11724:45:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "11724:45:3"
																				},
																				{
																					"nativeSrc": "11790:42:3",
																					"nodeType": "YulVariableDeclaration",
																					"src": "11790:42:3",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11821:4:3",
																								"nodeType": "YulLiteral",
																								"src": "11821:4:3",
																								"type": "",
																								"value": "0x0c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11827:4:3",
																								"nodeType": "YulLiteral",
																								"src": "11827:4:3",
																								"type": "",
																								"value": "0x34"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nativeSrc": "11811:9:3",
																							"nodeType": "YulIdentifier",
																							"src": "11811:9:3"
																						},
																						"nativeSrc": "11811:21:3",
																						"nodeType": "YulFunctionCall",
																						"src": "11811:21:3"
																					},
																					"variables": [
																						{
																							"name": "allowanceSlot",
																							"nativeSrc": "11794:13:3",
																							"nodeType": "YulTypedName",
																							"src": "11794:13:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nativeSrc": "11853:38:3",
																					"nodeType": "YulVariableDeclaration",
																					"src": "11853:38:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "allowanceSlot",
																								"nativeSrc": "11877:13:3",
																								"nodeType": "YulIdentifier",
																								"src": "11877:13:3"
																							}
																						],
																						"functionName": {
																							"name": "sload",
																							"nativeSrc": "11871:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "11871:5:3"
																						},
																						"nativeSrc": "11871:20:3",
																						"nodeType": "YulFunctionCall",
																						"src": "11871:20:3"
																					},
																					"variables": [
																						{
																							"name": "allowance_",
																							"nativeSrc": "11857:10:3",
																							"nodeType": "YulTypedName",
																							"src": "11857:10:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"body": {
																						"nativeSrc": "12005:460:3",
																						"nodeType": "YulBlock",
																						"src": "12005:460:3",
																						"statements": [
																							{
																								"body": {
																									"nativeSrc": "12146:157:3",
																									"nodeType": "YulBlock",
																									"src": "12146:157:3",
																									"statements": [
																										{
																											"expression": {
																												"arguments": [
																													{
																														"kind": "number",
																														"nativeSrc": "12183:4:3",
																														"nodeType": "YulLiteral",
																														"src": "12183:4:3",
																														"type": "",
																														"value": "0x00"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "12189:10:3",
																														"nodeType": "YulLiteral",
																														"src": "12189:10:3",
																														"type": "",
																														"value": "0x13be252b"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nativeSrc": "12176:6:3",
																													"nodeType": "YulIdentifier",
																													"src": "12176:6:3"
																												},
																												"nativeSrc": "12176:24:3",
																												"nodeType": "YulFunctionCall",
																												"src": "12176:24:3"
																											},
																											"nativeSrc": "12176:24:3",
																											"nodeType": "YulExpressionStatement",
																											"src": "12176:24:3"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"kind": "number",
																														"nativeSrc": "12266:4:3",
																														"nodeType": "YulLiteral",
																														"src": "12266:4:3",
																														"type": "",
																														"value": "0x1c"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "12272:4:3",
																														"nodeType": "YulLiteral",
																														"src": "12272:4:3",
																														"type": "",
																														"value": "0x04"
																													}
																												],
																												"functionName": {
																													"name": "revert",
																													"nativeSrc": "12259:6:3",
																													"nodeType": "YulIdentifier",
																													"src": "12259:6:3"
																												},
																												"nativeSrc": "12259:18:3",
																												"nodeType": "YulFunctionCall",
																												"src": "12259:18:3"
																											},
																											"nativeSrc": "12259:18:3",
																											"nodeType": "YulExpressionStatement",
																											"src": "12259:18:3"
																										}
																									]
																								},
																								"condition": {
																									"arguments": [
																										{
																											"name": "amount",
																											"nativeSrc": "12126:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "12126:6:3"
																										},
																										{
																											"name": "allowance_",
																											"nativeSrc": "12134:10:3",
																											"nodeType": "YulIdentifier",
																											"src": "12134:10:3"
																										}
																									],
																									"functionName": {
																										"name": "gt",
																										"nativeSrc": "12123:2:3",
																										"nodeType": "YulIdentifier",
																										"src": "12123:2:3"
																									},
																									"nativeSrc": "12123:22:3",
																									"nodeType": "YulFunctionCall",
																									"src": "12123:22:3"
																								},
																								"nativeSrc": "12120:183:3",
																								"nodeType": "YulIf",
																								"src": "12120:183:3"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "allowanceSlot",
																											"nativeSrc": "12404:13:3",
																											"nodeType": "YulIdentifier",
																											"src": "12404:13:3"
																										},
																										{
																											"arguments": [
																												{
																													"name": "allowance_",
																													"nativeSrc": "12423:10:3",
																													"nodeType": "YulIdentifier",
																													"src": "12423:10:3"
																												},
																												{
																													"name": "amount",
																													"nativeSrc": "12435:6:3",
																													"nodeType": "YulIdentifier",
																													"src": "12435:6:3"
																												}
																											],
																											"functionName": {
																												"name": "sub",
																												"nativeSrc": "12419:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "12419:3:3"
																											},
																											"nativeSrc": "12419:23:3",
																											"nodeType": "YulFunctionCall",
																											"src": "12419:23:3"
																										}
																									],
																									"functionName": {
																										"name": "sstore",
																										"nativeSrc": "12397:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "12397:6:3"
																									},
																									"nativeSrc": "12397:46:3",
																									"nodeType": "YulFunctionCall",
																									"src": "12397:46:3"
																								},
																								"nativeSrc": "12397:46:3",
																								"nodeType": "YulExpressionStatement",
																								"src": "12397:46:3"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "allowance_",
																								"nativeSrc": "11993:10:3",
																								"nodeType": "YulIdentifier",
																								"src": "11993:10:3"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "11989:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "11989:3:3"
																						},
																						"nativeSrc": "11989:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "11989:15:3"
																					},
																					"nativeSrc": "11986:479:3",
																					"nodeType": "YulIf",
																					"src": "11986:479:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "caller",
																								"nativeSrc": "11568:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "11568:6:3"
																							},
																							"nativeSrc": "11568:8:3",
																							"nodeType": "YulFunctionCall",
																							"src": "11568:8:3"
																						},
																						{
																							"name": "_PERMIT2",
																							"nativeSrc": "11578:8:3",
																							"nodeType": "YulIdentifier",
																							"src": "11578:8:3"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nativeSrc": "11565:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "11565:2:3"
																					},
																					"nativeSrc": "11565:22:3",
																					"nodeType": "YulFunctionCall",
																					"src": "11565:22:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "11558:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "11558:6:3"
																			},
																			"nativeSrc": "11558:30:3",
																			"nodeType": "YulFunctionCall",
																			"src": "11558:30:3"
																		},
																		"nativeSrc": "11555:928:3",
																		"nodeType": "YulIf",
																		"src": "11555:928:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12571:4:3",
																					"nodeType": "YulLiteral",
																					"src": "12571:4:3",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"arguments": [
																						{
																							"name": "from_",
																							"nativeSrc": "12580:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "12580:5:3"
																						},
																						{
																							"name": "_BALANCE_SLOT_SEED",
																							"nativeSrc": "12587:18:3",
																							"nodeType": "YulIdentifier",
																							"src": "12587:18:3"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "12577:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "12577:2:3"
																					},
																					"nativeSrc": "12577:29:3",
																					"nodeType": "YulFunctionCall",
																					"src": "12577:29:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12564:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "12564:6:3"
																			},
																			"nativeSrc": "12564:43:3",
																			"nodeType": "YulFunctionCall",
																			"src": "12564:43:3"
																		},
																		"nativeSrc": "12564:43:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "12564:43:3"
																	},
																	{
																		"nativeSrc": "12624:44:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12624:44:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12657:4:3",
																					"nodeType": "YulLiteral",
																					"src": "12657:4:3",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12663:4:3",
																					"nodeType": "YulLiteral",
																					"src": "12663:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "12647:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12647:9:3"
																			},
																			"nativeSrc": "12647:21:3",
																			"nodeType": "YulFunctionCall",
																			"src": "12647:21:3"
																		},
																		"variables": [
																			{
																				"name": "fromBalanceSlot",
																				"nativeSrc": "12628:15:3",
																				"nodeType": "YulTypedName",
																				"src": "12628:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12685:41:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12685:41:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "fromBalanceSlot",
																					"nativeSrc": "12710:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "12710:15:3"
																				}
																			],
																			"functionName": {
																				"name": "sload",
																				"nativeSrc": "12704:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "12704:5:3"
																			},
																			"nativeSrc": "12704:22:3",
																			"nodeType": "YulFunctionCall",
																			"src": "12704:22:3"
																		},
																		"variables": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "12689:11:3",
																				"nodeType": "YulTypedName",
																				"src": "12689:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12821:131:3",
																			"nodeType": "YulBlock",
																			"src": "12821:131:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12850:4:3",
																								"nodeType": "YulLiteral",
																								"src": "12850:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12856:10:3",
																								"nodeType": "YulLiteral",
																								"src": "12856:10:3",
																								"type": "",
																								"value": "0xf4d678b8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "12843:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "12843:6:3"
																						},
																						"nativeSrc": "12843:24:3",
																						"nodeType": "YulFunctionCall",
																						"src": "12843:24:3"
																					},
																					"nativeSrc": "12843:24:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "12843:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12923:4:3",
																								"nodeType": "YulLiteral",
																								"src": "12923:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12929:4:3",
																								"nodeType": "YulLiteral",
																								"src": "12929:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "12916:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "12916:6:3"
																						},
																						"nativeSrc": "12916:18:3",
																						"nodeType": "YulFunctionCall",
																						"src": "12916:18:3"
																					},
																					"nativeSrc": "12916:18:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "12916:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nativeSrc": "12800:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "12800:6:3"
																				},
																				{
																					"name": "fromBalance",
																					"nativeSrc": "12808:11:3",
																					"nodeType": "YulIdentifier",
																					"src": "12808:11:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "12797:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "12797:2:3"
																			},
																			"nativeSrc": "12797:23:3",
																			"nodeType": "YulFunctionCall",
																			"src": "12797:23:3"
																		},
																		"nativeSrc": "12794:158:3",
																		"nodeType": "YulIf",
																		"src": "12794:158:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fromBalanceSlot",
																					"nativeSrc": "13035:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "13035:15:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "fromBalance",
																							"nativeSrc": "13056:11:3",
																							"nodeType": "YulIdentifier",
																							"src": "13056:11:3"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "13069:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "13069:6:3"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "13052:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "13052:3:3"
																					},
																					"nativeSrc": "13052:24:3",
																					"nodeType": "YulFunctionCall",
																					"src": "13052:24:3"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "13028:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "13028:6:3"
																			},
																			"nativeSrc": "13028:49:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13028:49:3"
																		},
																		"nativeSrc": "13028:49:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13028:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13154:4:3",
																					"nodeType": "YulLiteral",
																					"src": "13154:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nativeSrc": "13160:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "13160:2:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13147:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "13147:6:3"
																			},
																			"nativeSrc": "13147:16:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13147:16:3"
																		},
																		"nativeSrc": "13147:16:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13147:16:3"
																	},
																	{
																		"nativeSrc": "13180:42:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13180:42:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13211:4:3",
																					"nodeType": "YulLiteral",
																					"src": "13211:4:3",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13217:4:3",
																					"nodeType": "YulLiteral",
																					"src": "13217:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "13201:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13201:9:3"
																			},
																			"nativeSrc": "13201:21:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13201:21:3"
																		},
																		"variables": [
																			{
																				"name": "toBalanceSlot",
																				"nativeSrc": "13184:13:3",
																				"nodeType": "YulTypedName",
																				"src": "13184:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "toBalanceSlot",
																					"nativeSrc": "13442:13:3",
																					"nodeType": "YulIdentifier",
																					"src": "13442:13:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "toBalanceSlot",
																									"nativeSrc": "13467:13:3",
																									"nodeType": "YulIdentifier",
																									"src": "13467:13:3"
																								}
																							],
																							"functionName": {
																								"name": "sload",
																								"nativeSrc": "13461:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "13461:5:3"
																							},
																							"nativeSrc": "13461:20:3",
																							"nodeType": "YulFunctionCall",
																							"src": "13461:20:3"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "13483:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "13483:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13457:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "13457:3:3"
																					},
																					"nativeSrc": "13457:33:3",
																					"nodeType": "YulFunctionCall",
																					"src": "13457:33:3"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "13435:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "13435:6:3"
																			},
																			"nativeSrc": "13435:56:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13435:56:3"
																		},
																		"nativeSrc": "13435:56:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13435:56:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13561:4:3",
																					"nodeType": "YulLiteral",
																					"src": "13561:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "13567:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "13567:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13554:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "13554:6:3"
																			},
																			"nativeSrc": "13554:20:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13554:20:3"
																		},
																		"nativeSrc": "13554:20:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13554:20:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13596:4:3",
																					"nodeType": "YulLiteral",
																					"src": "13596:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13602:4:3",
																					"nodeType": "YulLiteral",
																					"src": "13602:4:3",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"name": "_TRANSFER_EVENT_SIGNATURE",
																					"nativeSrc": "13608:25:3",
																					"nodeType": "YulIdentifier",
																					"src": "13608:25:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13639:2:3",
																							"nodeType": "YulLiteral",
																							"src": "13639:2:3",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"name": "from_",
																							"nativeSrc": "13643:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "13643:5:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "13635:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "13635:3:3"
																					},
																					"nativeSrc": "13635:14:3",
																					"nodeType": "YulFunctionCall",
																					"src": "13635:14:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13655:2:3",
																							"nodeType": "YulLiteral",
																							"src": "13655:2:3",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13665:4:3",
																									"nodeType": "YulLiteral",
																									"src": "13665:4:3",
																									"type": "",
																									"value": "0x0c"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "13659:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "13659:5:3"
																							},
																							"nativeSrc": "13659:11:3",
																							"nodeType": "YulFunctionCall",
																							"src": "13659:11:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "13651:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "13651:3:3"
																					},
																					"nativeSrc": "13651:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "13651:20:3"
																				}
																			],
																			"functionName": {
																				"name": "log3",
																				"nativeSrc": "13591:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "13591:4:3"
																			},
																			"nativeSrc": "13591:81:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13591:81:3"
																		},
																		"nativeSrc": "13591:81:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13591:81:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 298,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11747:20:3",
																	"valueSize": 1
																},
																{
																	"declaration": 294,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12587:18:3",
																	"valueSize": 1
																},
																{
																	"declaration": 322,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11578:8:3",
																	"valueSize": 1
																},
																{
																	"declaration": 282,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13608:25:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12126:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12435:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12800:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13069:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13483:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 441,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13567:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 437,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11533:4:3",
																	"valueSize": 1
																},
																{
																	"declaration": 439,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13160:2:3",
																	"valueSize": 1
																}
															],
															"id": 454,
															"nodeType": "InlineAssembly",
															"src": "11485:2201:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 460,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "15873:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "15879:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "15883:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "15853:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15853:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "15853:37:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15907:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 445,
												"id": 466,
												"nodeType": "Return",
												"src": "15900:11:3"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "10803:357:3",
										"text": "@dev Transfers `amount` tokens from `from` to `to`.\n Note: Does not update the allowance if it is the maximum uint256 value.\n Requirements:\n - `from` must at least have `amount`.\n - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11174:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11195:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "11187:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11209:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "11201:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11221:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "11213:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11213:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11186:42:3"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "11253:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11253:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11252:6:3"
									},
									"scope": 741,
									"src": "11165:4753:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "16425:2:3",
										"statements": []
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "16207:137:3",
										"text": "@dev For more performance, override to return the constant value\n of `keccak256(bytes(name()))` if `name()` will never change."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_constantNameHash",
									"nameLocation": "16358:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16375:2:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16417:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "16409:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16409:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16408:16:3"
									},
									"scope": 741,
									"src": "16349:78:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "16572:47:3",
										"statements": [
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "16582:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 482,
														"name": "_DEFAULT_VERSION_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "16591:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "16582:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "16582:30:3"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "16433:63:3",
										"text": "@dev If you need a different value, override this function."
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_versionHash",
									"nameLocation": "16510:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16522:2:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16564:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "16556:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16556:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16555:16:3"
									},
									"scope": 741,
									"src": "16501:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "16744:262:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16806:194:3",
													"nodeType": "YulBlock",
													"src": "16806:194:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16827:4:3",
																		"nodeType": "YulLiteral",
																		"src": "16827:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED",
																		"nativeSrc": "16833:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "16833:17:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16820:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "16820:6:3"
																},
																"nativeSrc": "16820:31:3",
																"nodeType": "YulFunctionCall",
																"src": "16820:31:3"
															},
															"nativeSrc": "16820:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "16820:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16871:4:3",
																		"nodeType": "YulLiteral",
																		"src": "16871:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "16877:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "16877:5:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16864:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "16864:6:3"
																},
																"nativeSrc": "16864:19:3",
																"nodeType": "YulFunctionCall",
																"src": "16864:19:3"
															},
															"nativeSrc": "16864:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "16864:19:3"
														},
														{
															"nativeSrc": "16896:38:3",
															"nodeType": "YulVariableDeclaration",
															"src": "16896:38:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16923:4:3",
																		"nodeType": "YulLiteral",
																		"src": "16923:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16929:4:3",
																		"nodeType": "YulLiteral",
																		"src": "16929:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16913:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "16913:9:3"
																},
																"nativeSrc": "16913:21:3",
																"nodeType": "YulFunctionCall",
																"src": "16913:21:3"
															},
															"variables": [
																{
																	"name": "nonceSlot",
																	"nativeSrc": "16900:9:3",
																	"nodeType": "YulTypedName",
																	"src": "16900:9:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nativeSrc": "16954:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "16954:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16969:1:3",
																				"nodeType": "YulLiteral",
																				"src": "16969:1:3",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "nonceSlot",
																						"nativeSrc": "16978:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "16978:9:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16972:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "16972:5:3"
																				},
																				"nativeSrc": "16972:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "16972:16:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16965:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "16965:3:3"
																		},
																		"nativeSrc": "16965:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "16965:24:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16947:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "16947:6:3"
																},
																"nativeSrc": "16947:43:3",
																"nodeType": "YulFunctionCall",
																"src": "16947:43:3"
															},
															"nativeSrc": "16947:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "16947:43:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 302,
														"isOffset": false,
														"isSlot": false,
														"src": "16833:17:3",
														"valueSize": 1
													},
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "16877:5:3",
														"valueSize": 1
													}
												],
												"id": 492,
												"nodeType": "InlineAssembly",
												"src": "16797:203:3"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "16625:57:3",
										"text": "@dev For inheriting contracts to increment the nonce."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_incrementNonce",
									"nameLocation": "16696:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16720:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "16712:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16711:15:3"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16744:0:3"
									},
									"scope": 741,
									"src": "16687:319:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "17213:264:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17275:196:3",
													"nodeType": "YulBlock",
													"src": "17275:196:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17354:4:3",
																		"nodeType": "YulLiteral",
																		"src": "17354:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED",
																		"nativeSrc": "17360:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "17360:17:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17347:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "17347:6:3"
																},
																"nativeSrc": "17347:31:3",
																"nodeType": "YulFunctionCall",
																"src": "17347:31:3"
															},
															"nativeSrc": "17347:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "17347:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17398:4:3",
																		"nodeType": "YulLiteral",
																		"src": "17398:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "17404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "17404:5:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17391:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "17391:6:3"
																},
																"nativeSrc": "17391:19:3",
																"nodeType": "YulFunctionCall",
																"src": "17391:19:3"
															},
															"nativeSrc": "17391:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "17391:19:3"
														},
														{
															"nativeSrc": "17423:38:3",
															"nodeType": "YulAssignment",
															"src": "17423:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17449:4:3",
																				"nodeType": "YulLiteral",
																				"src": "17449:4:3",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17455:4:3",
																				"nodeType": "YulLiteral",
																				"src": "17455:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "17439:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "17439:9:3"
																		},
																		"nativeSrc": "17439:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "17439:21:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "17433:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "17433:5:3"
																},
																"nativeSrc": "17433:28:3",
																"nodeType": "YulFunctionCall",
																"src": "17433:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17423:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "17423:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 302,
														"isOffset": false,
														"isSlot": false,
														"src": "17360:17:3",
														"valueSize": 1
													},
													{
														"declaration": 497,
														"isOffset": false,
														"isSlot": false,
														"src": "17404:5:3",
														"valueSize": 1
													},
													{
														"declaration": 500,
														"isOffset": false,
														"isSlot": false,
														"src": "17423:6:3",
														"valueSize": 1
													}
												],
												"id": 502,
												"nodeType": "InlineAssembly",
												"src": "17266:205:3"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "17012:120:3",
										"text": "@dev Returns the current nonce for `owner`.\n This value is used to compute the signature for EIP-2612 permit."
									},
									"functionSelector": "7ecebe00",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "17146:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17161:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "17153:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17152:15:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17205:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "17197:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17197:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17196:16:3"
									},
									"scope": 741,
									"src": "17137:340:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "17850:3527:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 522,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "17864:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17864:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "17860:445:3",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "17897:408:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "17967:328:3",
																"nodeType": "YulBlock",
																"src": "17967:328:3",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "18136:145:3",
																			"nodeType": "YulBlock",
																			"src": "18136:145:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18165:4:3",
																								"nodeType": "YulLiteral",
																								"src": "18165:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18171:10:3",
																								"nodeType": "YulLiteral",
																								"src": "18171:10:3",
																								"type": "",
																								"value": "0x3f68539a"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "18158:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "18158:6:3"
																						},
																						"nativeSrc": "18158:24:3",
																						"nodeType": "YulFunctionCall",
																						"src": "18158:24:3"
																					},
																					"nativeSrc": "18158:24:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "18158:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18252:4:3",
																								"nodeType": "YulLiteral",
																								"src": "18252:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18258:4:3",
																								"nodeType": "YulLiteral",
																								"src": "18258:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "18245:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "18245:6:3"
																						},
																						"nativeSrc": "18245:18:3",
																						"nodeType": "YulFunctionCall",
																						"src": "18245:18:3"
																					},
																					"nativeSrc": "18245:18:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "18245:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "18081:2:3",
																											"nodeType": "YulLiteral",
																											"src": "18081:2:3",
																											"type": "",
																											"value": "96"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "18089:2:3",
																													"nodeType": "YulLiteral",
																													"src": "18089:2:3",
																													"type": "",
																													"value": "96"
																												},
																												{
																													"name": "spender",
																													"nativeSrc": "18093:7:3",
																													"nodeType": "YulIdentifier",
																													"src": "18093:7:3"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nativeSrc": "18085:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "18085:3:3"
																											},
																											"nativeSrc": "18085:16:3",
																											"nodeType": "YulFunctionCall",
																											"src": "18085:16:3"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "18077:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "18077:3:3"
																									},
																									"nativeSrc": "18077:25:3",
																									"nodeType": "YulFunctionCall",
																									"src": "18077:25:3"
																								},
																								{
																									"name": "_PERMIT2",
																									"nativeSrc": "18104:8:3",
																									"nodeType": "YulIdentifier",
																									"src": "18104:8:3"
																								}
																							],
																							"functionName": {
																								"name": "xor",
																								"nativeSrc": "18073:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "18073:3:3"
																							},
																							"nativeSrc": "18073:40:3",
																							"nodeType": "YulFunctionCall",
																							"src": "18073:40:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "18126:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "18126:5:3"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "18122:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "18122:3:3"
																									},
																									"nativeSrc": "18122:10:3",
																									"nodeType": "YulFunctionCall",
																									"src": "18122:10:3"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "18115:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "18115:6:3"
																							},
																							"nativeSrc": "18115:18:3",
																							"nodeType": "YulFunctionCall",
																							"src": "18115:18:3"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "18070:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "18070:2:3"
																					},
																					"nativeSrc": "18070:64:3",
																					"nodeType": "YulFunctionCall",
																					"src": "18070:64:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "18063:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "18063:6:3"
																			},
																			"nativeSrc": "18063:72:3",
																			"nodeType": "YulFunctionCall",
																			"src": "18063:72:3"
																		},
																		"nativeSrc": "18060:221:3",
																		"nodeType": "YulIf",
																		"src": "18060:221:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 322,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18104:8:3",
																	"valueSize": 1
																},
																{
																	"declaration": 509,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18093:7:3",
																	"valueSize": 1
																},
																{
																	"declaration": 511,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18126:5:3",
																	"valueSize": 1
																}
															],
															"id": 524,
															"nodeType": "InlineAssembly",
															"src": "17958:337:3"
														}
													]
												}
											},
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "nameHash",
														"nameLocation": "18322:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "18314:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 527,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "18314:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_constantNameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "18333:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18333:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18314:38:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 532,
														"name": "nameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "18460:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18480:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18472:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 533,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "18472:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18472:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "18460:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 548,
												"nodeType": "IfStatement",
												"src": "18456:63:3",
												"trueBody": {
													"expression": {
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 538,
															"name": "nameHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "18484:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 542,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 328,
																				"src": "18511:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																					"typeString": "function () view returns (string memory)"
																				}
																			},
																			"id": 543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18511:6:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18505:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 540,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "18505:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18505:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 539,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "18495:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18495:24:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "18484:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 547,
													"nodeType": "ExpressionStatement",
													"src": "18484:35:3"
												}
											},
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "versionHash",
														"nameLocation": "18537:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "18529:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 549,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "18529:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 551,
														"name": "_versionHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "18551:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18551:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18529:36:3"
											},
											{
												"AST": {
													"nativeSrc": "18627:2744:3",
													"nodeType": "YulBlock",
													"src": "18627:2744:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "18743:113:3",
																"nodeType": "YulBlock",
																"src": "18743:113:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18768:4:3",
																					"nodeType": "YulLiteral",
																					"src": "18768:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18774:10:3",
																					"nodeType": "YulLiteral",
																					"src": "18774:10:3",
																					"type": "",
																					"value": "0x1a15a3cc"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "18761:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "18761:6:3"
																			},
																			"nativeSrc": "18761:24:3",
																			"nodeType": "YulFunctionCall",
																			"src": "18761:24:3"
																		},
																		"nativeSrc": "18761:24:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "18761:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18831:4:3",
																					"nodeType": "YulLiteral",
																					"src": "18831:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18837:4:3",
																					"nodeType": "YulLiteral",
																					"src": "18837:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18824:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "18824:6:3"
																			},
																			"nativeSrc": "18824:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "18824:18:3"
																		},
																		"nativeSrc": "18824:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "18824:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "timestamp",
																			"nativeSrc": "18720:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "18720:9:3"
																		},
																		"nativeSrc": "18720:11:3",
																		"nodeType": "YulFunctionCall",
																		"src": "18720:11:3"
																	},
																	{
																		"name": "deadline",
																		"nativeSrc": "18733:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "18733:8:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18717:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "18717:2:3"
																},
																"nativeSrc": "18717:25:3",
																"nodeType": "YulFunctionCall",
																"src": "18717:25:3"
															},
															"nativeSrc": "18714:142:3",
															"nodeType": "YulIf",
															"src": "18714:142:3"
														},
														{
															"nativeSrc": "18869:20:3",
															"nodeType": "YulVariableDeclaration",
															"src": "18869:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18884:4:3",
																		"nodeType": "YulLiteral",
																		"src": "18884:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18878:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "18878:5:3"
																},
																"nativeSrc": "18878:11:3",
																"nodeType": "YulFunctionCall",
																"src": "18878:11:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "18873:1:3",
																	"nodeType": "YulTypedName",
																	"src": "18873:1:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18975:32:3",
															"nodeType": "YulAssignment",
															"src": "18975:32:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18988:2:3",
																		"nodeType": "YulLiteral",
																		"src": "18988:2:3",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18996:2:3",
																				"nodeType": "YulLiteral",
																				"src": "18996:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "19000:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "19000:5:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "18992:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "18992:3:3"
																		},
																		"nativeSrc": "18992:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "18992:14:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18984:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "18984:3:3"
																},
																"nativeSrc": "18984:23:3",
																"nodeType": "YulFunctionCall",
																"src": "18984:23:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "18975:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "18975:5:3"
																}
															]
														},
														{
															"nativeSrc": "19020:36:3",
															"nodeType": "YulAssignment",
															"src": "19020:36:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19035:2:3",
																		"nodeType": "YulLiteral",
																		"src": "19035:2:3",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19043:2:3",
																				"nodeType": "YulLiteral",
																				"src": "19043:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "spender",
																				"nativeSrc": "19047:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "19047:7:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "19039:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19039:3:3"
																		},
																		"nativeSrc": "19039:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19039:16:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "19031:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "19031:3:3"
																},
																"nativeSrc": "19031:25:3",
																"nodeType": "YulFunctionCall",
																"src": "19031:25:3"
															},
															"variableNames": [
																{
																	"name": "spender",
																	"nativeSrc": "19020:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "19020:7:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19134:4:3",
																		"nodeType": "YulLiteral",
																		"src": "19134:4:3",
																		"type": "",
																		"value": "0x0e"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX",
																		"nativeSrc": "19140:39:3",
																		"nodeType": "YulIdentifier",
																		"src": "19140:39:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19127:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19127:6:3"
																},
																"nativeSrc": "19127:53:3",
																"nodeType": "YulFunctionCall",
																"src": "19127:53:3"
															},
															"nativeSrc": "19127:53:3",
															"nodeType": "YulExpressionStatement",
															"src": "19127:53:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19200:4:3",
																		"nodeType": "YulLiteral",
																		"src": "19200:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "19206:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "19206:5:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19193:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19193:6:3"
																},
																"nativeSrc": "19193:19:3",
																"nodeType": "YulFunctionCall",
																"src": "19193:19:3"
															},
															"nativeSrc": "19193:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "19193:19:3"
														},
														{
															"nativeSrc": "19225:38:3",
															"nodeType": "YulVariableDeclaration",
															"src": "19225:38:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19252:4:3",
																		"nodeType": "YulLiteral",
																		"src": "19252:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19258:4:3",
																		"nodeType": "YulLiteral",
																		"src": "19258:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "19242:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "19242:9:3"
																},
																"nativeSrc": "19242:21:3",
																"nodeType": "YulFunctionCall",
																"src": "19242:21:3"
															},
															"variables": [
																{
																	"name": "nonceSlot",
																	"nativeSrc": "19229:9:3",
																	"nodeType": "YulTypedName",
																	"src": "19229:9:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19276:34:3",
															"nodeType": "YulVariableDeclaration",
															"src": "19276:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nativeSrc": "19300:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "19300:9:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "19294:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "19294:5:3"
																},
																"nativeSrc": "19294:16:3",
																"nodeType": "YulFunctionCall",
																"src": "19294:16:3"
															},
															"variables": [
																{
																	"name": "nonceValue",
																	"nativeSrc": "19280:10:3",
																	"nodeType": "YulTypedName",
																	"src": "19280:10:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "19375:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "19375:1:3"
																	},
																	{
																		"name": "_DOMAIN_TYPEHASH",
																		"nativeSrc": "19378:16:3",
																		"nodeType": "YulIdentifier",
																		"src": "19378:16:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19368:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19368:6:3"
																},
																"nativeSrc": "19368:27:3",
																"nodeType": "YulFunctionCall",
																"src": "19368:27:3"
															},
															"nativeSrc": "19368:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "19368:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19419:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19419:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19422:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19422:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19415:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19415:3:3"
																		},
																		"nativeSrc": "19415:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19415:12:3"
																	},
																	{
																		"name": "nameHash",
																		"nativeSrc": "19429:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "19429:8:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19408:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19408:6:3"
																},
																"nativeSrc": "19408:30:3",
																"nodeType": "YulFunctionCall",
																"src": "19408:30:3"
															},
															"nativeSrc": "19408:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "19408:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19462:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19462:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19465:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19465:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19458:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19458:3:3"
																		},
																		"nativeSrc": "19458:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19458:12:3"
																	},
																	{
																		"name": "versionHash",
																		"nativeSrc": "19472:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "19472:11:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19451:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19451:6:3"
																},
																"nativeSrc": "19451:33:3",
																"nodeType": "YulFunctionCall",
																"src": "19451:33:3"
															},
															"nativeSrc": "19451:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "19451:33:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19508:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19508:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19511:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19511:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19504:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19504:3:3"
																		},
																		"nativeSrc": "19504:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19504:12:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nativeSrc": "19518:7:3",
																			"nodeType": "YulIdentifier",
																			"src": "19518:7:3"
																		},
																		"nativeSrc": "19518:9:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19518:9:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19497:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19497:6:3"
																},
																"nativeSrc": "19497:31:3",
																"nodeType": "YulFunctionCall",
																"src": "19497:31:3"
															},
															"nativeSrc": "19497:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "19497:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19552:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19552:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19555:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19555:4:3",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19548:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19548:3:3"
																		},
																		"nativeSrc": "19548:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19548:12:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nativeSrc": "19562:7:3",
																			"nodeType": "YulIdentifier",
																			"src": "19562:7:3"
																		},
																		"nativeSrc": "19562:9:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19562:9:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19541:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19541:6:3"
																},
																"nativeSrc": "19541:31:3",
																"nodeType": "YulFunctionCall",
																"src": "19541:31:3"
															},
															"nativeSrc": "19541:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "19541:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19592:4:3",
																		"nodeType": "YulLiteral",
																		"src": "19592:4:3",
																		"type": "",
																		"value": "0x2e"
																	},
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19608:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19608:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19611:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19611:4:3",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "19598:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "19598:9:3"
																		},
																		"nativeSrc": "19598:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19598:18:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19585:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19585:6:3"
																},
																"nativeSrc": "19585:32:3",
																"nodeType": "YulFunctionCall",
																"src": "19585:32:3"
															},
															"nativeSrc": "19585:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "19585:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "19677:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "19677:1:3"
																	},
																	{
																		"name": "_PERMIT_TYPEHASH",
																		"nativeSrc": "19680:16:3",
																		"nodeType": "YulIdentifier",
																		"src": "19680:16:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19670:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19670:6:3"
																},
																"nativeSrc": "19670:27:3",
																"nodeType": "YulFunctionCall",
																"src": "19670:27:3"
															},
															"nativeSrc": "19670:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "19670:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19721:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19721:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19724:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19724:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19717:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19717:3:3"
																		},
																		"nativeSrc": "19717:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19717:12:3"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "19731:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "19731:5:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19710:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19710:6:3"
																},
																"nativeSrc": "19710:27:3",
																"nodeType": "YulFunctionCall",
																"src": "19710:27:3"
															},
															"nativeSrc": "19710:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "19710:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19761:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19761:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19764:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19764:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19757:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19757:3:3"
																		},
																		"nativeSrc": "19757:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19757:12:3"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "19771:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "19771:7:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19750:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19750:6:3"
																},
																"nativeSrc": "19750:29:3",
																"nodeType": "YulFunctionCall",
																"src": "19750:29:3"
															},
															"nativeSrc": "19750:29:3",
															"nodeType": "YulExpressionStatement",
															"src": "19750:29:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19803:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19803:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19806:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19806:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19799:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19799:3:3"
																		},
																		"nativeSrc": "19799:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19799:12:3"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19813:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "19813:5:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19792:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19792:6:3"
																},
																"nativeSrc": "19792:27:3",
																"nodeType": "YulFunctionCall",
																"src": "19792:27:3"
															},
															"nativeSrc": "19792:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "19792:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19843:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19843:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19846:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19846:4:3",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19839:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19839:3:3"
																		},
																		"nativeSrc": "19839:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19839:12:3"
																	},
																	{
																		"name": "nonceValue",
																		"nativeSrc": "19853:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "19853:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19832:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19832:6:3"
																},
																"nativeSrc": "19832:32:3",
																"nodeType": "YulFunctionCall",
																"src": "19832:32:3"
															},
															"nativeSrc": "19832:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "19832:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19888:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19888:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19891:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19891:4:3",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19884:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19884:3:3"
																		},
																		"nativeSrc": "19884:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19884:12:3"
																	},
																	{
																		"name": "deadline",
																		"nativeSrc": "19898:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "19898:8:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19877:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19877:6:3"
																},
																"nativeSrc": "19877:30:3",
																"nodeType": "YulFunctionCall",
																"src": "19877:30:3"
															},
															"nativeSrc": "19877:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "19877:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19927:4:3",
																		"nodeType": "YulLiteral",
																		"src": "19927:4:3",
																		"type": "",
																		"value": "0x4e"
																	},
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19943:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "19943:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19946:4:3",
																				"nodeType": "YulLiteral",
																				"src": "19946:4:3",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "19933:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "19933:9:3"
																		},
																		"nativeSrc": "19933:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19933:18:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19920:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19920:6:3"
																},
																"nativeSrc": "19920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "19920:32:3"
															},
															"nativeSrc": "19920:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "19920:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20019:4:3",
																		"nodeType": "YulLiteral",
																		"src": "20019:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "20035:4:3",
																				"nodeType": "YulLiteral",
																				"src": "20035:4:3",
																				"type": "",
																				"value": "0x2c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20041:4:3",
																				"nodeType": "YulLiteral",
																				"src": "20041:4:3",
																				"type": "",
																				"value": "0x42"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "20025:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "20025:9:3"
																		},
																		"nativeSrc": "20025:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "20025:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20012:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "20012:6:3"
																},
																"nativeSrc": "20012:35:3",
																"nodeType": "YulFunctionCall",
																"src": "20012:35:3"
															},
															"nativeSrc": "20012:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "20012:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20067:4:3",
																		"nodeType": "YulLiteral",
																		"src": "20067:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "20077:4:3",
																				"nodeType": "YulLiteral",
																				"src": "20077:4:3",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "v",
																				"nativeSrc": "20083:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "20083:1:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20073:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "20073:3:3"
																		},
																		"nativeSrc": "20073:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "20073:12:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20060:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "20060:6:3"
																},
																"nativeSrc": "20060:26:3",
																"nodeType": "YulFunctionCall",
																"src": "20060:26:3"
															},
															"nativeSrc": "20060:26:3",
															"nodeType": "YulExpressionStatement",
															"src": "20060:26:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20106:4:3",
																		"nodeType": "YulLiteral",
																		"src": "20106:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "20112:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "20112:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20099:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "20099:6:3"
																},
																"nativeSrc": "20099:15:3",
																"nodeType": "YulFunctionCall",
																"src": "20099:15:3"
															},
															"nativeSrc": "20099:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "20099:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20134:4:3",
																		"nodeType": "YulLiteral",
																		"src": "20134:4:3",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"name": "s",
																		"nativeSrc": "20140:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "20140:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20127:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "20127:6:3"
																},
																"nativeSrc": "20127:15:3",
																"nodeType": "YulFunctionCall",
																"src": "20127:15:3"
															},
															"nativeSrc": "20127:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "20127:15:3"
														},
														{
															"nativeSrc": "20155:53:3",
															"nodeType": "YulVariableDeclaration",
															"src": "20155:53:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "20175:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "20175:3:3"
																		},
																		"nativeSrc": "20175:5:3",
																		"nodeType": "YulFunctionCall",
																		"src": "20175:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20182:1:3",
																		"nodeType": "YulLiteral",
																		"src": "20182:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20185:4:3",
																		"nodeType": "YulLiteral",
																		"src": "20185:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20191:4:3",
																		"nodeType": "YulLiteral",
																		"src": "20191:4:3",
																		"type": "",
																		"value": "0x80"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20197:4:3",
																		"nodeType": "YulLiteral",
																		"src": "20197:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20203:4:3",
																		"nodeType": "YulLiteral",
																		"src": "20203:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "20164:10:3",
																	"nodeType": "YulIdentifier",
																	"src": "20164:10:3"
																},
																"nativeSrc": "20164:44:3",
																"nodeType": "YulFunctionCall",
																"src": "20164:44:3"
															},
															"variables": [
																{
																	"name": "t",
																	"nativeSrc": "20159:1:3",
																	"nodeType": "YulTypedName",
																	"src": "20159:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20632:113:3",
																"nodeType": "YulBlock",
																"src": "20632:113:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20657:4:3",
																					"nodeType": "YulLiteral",
																					"src": "20657:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20663:10:3",
																					"nodeType": "YulLiteral",
																					"src": "20663:10:3",
																					"type": "",
																					"value": "0xddafbaef"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20650:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "20650:6:3"
																			},
																			"nativeSrc": "20650:24:3",
																			"nodeType": "YulFunctionCall",
																			"src": "20650:24:3"
																		},
																		"nativeSrc": "20650:24:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "20650:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20720:4:3",
																					"nodeType": "YulLiteral",
																					"src": "20720:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20726:4:3",
																					"nodeType": "YulLiteral",
																					"src": "20726:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20713:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "20713:6:3"
																			},
																			"nativeSrc": "20713:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "20713:18:3"
																		},
																		"nativeSrc": "20713:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "20713:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "20605:14:3",
																							"nodeType": "YulIdentifier",
																							"src": "20605:14:3"
																						},
																						"nativeSrc": "20605:16:3",
																						"nodeType": "YulFunctionCall",
																						"src": "20605:16:3"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "20599:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "20599:5:3"
																				},
																				"nativeSrc": "20599:23:3",
																				"nodeType": "YulFunctionCall",
																				"src": "20599:23:3"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "20624:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "20624:5:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20596:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "20596:2:3"
																		},
																		"nativeSrc": "20596:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "20596:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20589:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "20589:6:3"
																},
																"nativeSrc": "20589:42:3",
																"nodeType": "YulFunctionCall",
																"src": "20589:42:3"
															},
															"nativeSrc": "20586:159:3",
															"nodeType": "YulIf",
															"src": "20586:159:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nativeSrc": "20819:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "20819:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "nonceValue",
																				"nativeSrc": "20834:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "20834:10:3"
																			},
																			{
																				"name": "t",
																				"nativeSrc": "20846:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "20846:1:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20830:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "20830:3:3"
																		},
																		"nativeSrc": "20830:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "20830:18:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "20812:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "20812:6:3"
																},
																"nativeSrc": "20812:37:3",
																"nodeType": "YulFunctionCall",
																"src": "20812:37:3"
															},
															"nativeSrc": "20812:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "20812:37:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21019:4:3",
																		"nodeType": "YulLiteral",
																		"src": "21019:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21032:3:3",
																						"nodeType": "YulLiteral",
																						"src": "21032:3:3",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"name": "_ALLOWANCE_SLOT_SEED",
																						"nativeSrc": "21037:20:3",
																						"nodeType": "YulIdentifier",
																						"src": "21037:20:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "21028:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "21028:3:3"
																				},
																				"nativeSrc": "21028:30:3",
																				"nodeType": "YulFunctionCall",
																				"src": "21028:30:3"
																			},
																			{
																				"name": "spender",
																				"nativeSrc": "21060:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "21060:7:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "21025:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "21025:2:3"
																		},
																		"nativeSrc": "21025:43:3",
																		"nodeType": "YulFunctionCall",
																		"src": "21025:43:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21012:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "21012:6:3"
																},
																"nativeSrc": "21012:57:3",
																"nodeType": "YulFunctionCall",
																"src": "21012:57:3"
															},
															"nativeSrc": "21012:57:3",
															"nodeType": "YulExpressionStatement",
															"src": "21012:57:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "21099:4:3",
																				"nodeType": "YulLiteral",
																				"src": "21099:4:3",
																				"type": "",
																				"value": "0x2c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21105:4:3",
																				"nodeType": "YulLiteral",
																				"src": "21105:4:3",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "21089:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "21089:9:3"
																		},
																		"nativeSrc": "21089:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "21089:21:3"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21112:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "21112:5:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "21082:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "21082:6:3"
																},
																"nativeSrc": "21082:36:3",
																"nodeType": "YulFunctionCall",
																"src": "21082:36:3"
															},
															"nativeSrc": "21082:36:3",
															"nodeType": "YulExpressionStatement",
															"src": "21082:36:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "21182:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "21182:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21185:4:3",
																				"nodeType": "YulLiteral",
																				"src": "21185:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21178:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "21178:3:3"
																		},
																		"nativeSrc": "21178:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "21178:12:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21192:4:3",
																		"nodeType": "YulLiteral",
																		"src": "21192:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nativeSrc": "21198:25:3",
																		"nodeType": "YulIdentifier",
																		"src": "21198:25:3"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "21225:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "21225:5:3"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "21232:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "21232:7:3"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "21173:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "21173:4:3"
																},
																"nativeSrc": "21173:67:3",
																"nodeType": "YulFunctionCall",
																"src": "21173:67:3"
															},
															"nativeSrc": "21173:67:3",
															"nodeType": "YulExpressionStatement",
															"src": "21173:67:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21260:4:3",
																		"nodeType": "YulLiteral",
																		"src": "21260:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "21266:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "21266:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21253:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "21253:6:3"
																},
																"nativeSrc": "21253:15:3",
																"nodeType": "YulFunctionCall",
																"src": "21253:15:3"
															},
															"nativeSrc": "21253:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "21253:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21324:4:3",
																		"nodeType": "YulLiteral",
																		"src": "21324:4:3",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21330:1:3",
																		"nodeType": "YulLiteral",
																		"src": "21330:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21317:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "21317:6:3"
																},
																"nativeSrc": "21317:15:3",
																"nodeType": "YulFunctionCall",
																"src": "21317:15:3"
															},
															"nativeSrc": "21317:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "21317:15:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 298,
														"isOffset": false,
														"isSlot": false,
														"src": "21037:20:3",
														"valueSize": 1
													},
													{
														"declaration": 286,
														"isOffset": false,
														"isSlot": false,
														"src": "21198:25:3",
														"valueSize": 1
													},
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "19378:16:3",
														"valueSize": 1
													},
													{
														"declaration": 306,
														"isOffset": false,
														"isSlot": false,
														"src": "19140:39:3",
														"valueSize": 1
													},
													{
														"declaration": 318,
														"isOffset": false,
														"isSlot": false,
														"src": "19680:16:3",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "18733:8:3",
														"valueSize": 1
													},
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "19898:8:3",
														"valueSize": 1
													},
													{
														"declaration": 528,
														"isOffset": false,
														"isSlot": false,
														"src": "19429:8:3",
														"valueSize": 1
													},
													{
														"declaration": 507,
														"isOffset": false,
														"isSlot": false,
														"src": "18975:5:3",
														"valueSize": 1
													},
													{
														"declaration": 507,
														"isOffset": false,
														"isSlot": false,
														"src": "19000:5:3",
														"valueSize": 1
													},
													{
														"declaration": 507,
														"isOffset": false,
														"isSlot": false,
														"src": "19206:5:3",
														"valueSize": 1
													},
													{
														"declaration": 507,
														"isOffset": false,
														"isSlot": false,
														"src": "19731:5:3",
														"valueSize": 1
													},
													{
														"declaration": 507,
														"isOffset": false,
														"isSlot": false,
														"src": "20624:5:3",
														"valueSize": 1
													},
													{
														"declaration": 507,
														"isOffset": false,
														"isSlot": false,
														"src": "21225:5:3",
														"valueSize": 1
													},
													{
														"declaration": 517,
														"isOffset": false,
														"isSlot": false,
														"src": "20112:1:3",
														"valueSize": 1
													},
													{
														"declaration": 519,
														"isOffset": false,
														"isSlot": false,
														"src": "20140:1:3",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "19020:7:3",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "19047:7:3",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "19771:7:3",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "21060:7:3",
														"valueSize": 1
													},
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "21232:7:3",
														"valueSize": 1
													},
													{
														"declaration": 515,
														"isOffset": false,
														"isSlot": false,
														"src": "20083:1:3",
														"valueSize": 1
													},
													{
														"declaration": 511,
														"isOffset": false,
														"isSlot": false,
														"src": "19813:5:3",
														"valueSize": 1
													},
													{
														"declaration": 511,
														"isOffset": false,
														"isSlot": false,
														"src": "21112:5:3",
														"valueSize": 1
													},
													{
														"declaration": 550,
														"isOffset": false,
														"isSlot": false,
														"src": "19472:11:3",
														"valueSize": 1
													}
												],
												"id": 554,
												"nodeType": "InlineAssembly",
												"src": "18618:2753:3"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "17483:173:3",
										"text": "@dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\n authorized by a signed approval by `owner`.\n Emits a {Approval} event."
									},
									"functionSelector": "d505accf",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "17670:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17694:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "17686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17717:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "17709:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17742:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "17734:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "17765:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "17757:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "17789:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "17783:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 514,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17783:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "17808:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "17800:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 516,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17800:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "17827:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "17819:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 518,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17819:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17676:158:3"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17850:0:3"
									},
									"scope": 741,
									"src": "17661:3716:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "21531:664:3",
										"statements": [
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "nameHash",
														"nameLocation": "21549:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "21541:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 562,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "21541:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 566,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 564,
														"name": "_constantNameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "21560:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21560:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21541:38:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 567,
														"name": "nameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "21687:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21707:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21699:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 568,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "21699:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21699:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "21687:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "21683:63:3",
												"trueBody": {
													"expression": {
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 573,
															"name": "nameHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "21711:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 577,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 328,
																				"src": "21738:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																					"typeString": "function () view returns (string memory)"
																				}
																			},
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21738:6:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21732:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 575,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "21732:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21732:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 574,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "21722:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21722:24:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "21711:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 582,
													"nodeType": "ExpressionStatement",
													"src": "21711:35:3"
												}
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "versionHash",
														"nameLocation": "21764:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "21756:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 584,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "21756:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 586,
														"name": "_versionHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "21778:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21778:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21756:36:3"
											},
											{
												"AST": {
													"nativeSrc": "21854:335:3",
													"nodeType": "YulBlock",
													"src": "21854:335:3",
													"statements": [
														{
															"nativeSrc": "21868:20:3",
															"nodeType": "YulVariableDeclaration",
															"src": "21868:20:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21883:4:3",
																		"nodeType": "YulLiteral",
																		"src": "21883:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21877:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "21877:5:3"
																},
																"nativeSrc": "21877:11:3",
																"nodeType": "YulFunctionCall",
																"src": "21877:11:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "21872:1:3",
																	"nodeType": "YulTypedName",
																	"src": "21872:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "21941:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "21941:1:3"
																	},
																	{
																		"name": "_DOMAIN_TYPEHASH",
																		"nativeSrc": "21944:16:3",
																		"nodeType": "YulIdentifier",
																		"src": "21944:16:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21934:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "21934:6:3"
																},
																"nativeSrc": "21934:27:3",
																"nodeType": "YulFunctionCall",
																"src": "21934:27:3"
															},
															"nativeSrc": "21934:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "21934:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "21985:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "21985:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21988:4:3",
																				"nodeType": "YulLiteral",
																				"src": "21988:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21981:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "21981:3:3"
																		},
																		"nativeSrc": "21981:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "21981:12:3"
																	},
																	{
																		"name": "nameHash",
																		"nativeSrc": "21995:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "21995:8:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21974:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "21974:6:3"
																},
																"nativeSrc": "21974:30:3",
																"nodeType": "YulFunctionCall",
																"src": "21974:30:3"
															},
															"nativeSrc": "21974:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "21974:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "22028:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "22028:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22031:4:3",
																				"nodeType": "YulLiteral",
																				"src": "22031:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22024:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "22024:3:3"
																		},
																		"nativeSrc": "22024:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "22024:12:3"
																	},
																	{
																		"name": "versionHash",
																		"nativeSrc": "22038:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "22038:11:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22017:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22017:6:3"
																},
																"nativeSrc": "22017:33:3",
																"nodeType": "YulFunctionCall",
																"src": "22017:33:3"
															},
															"nativeSrc": "22017:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "22017:33:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "22074:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "22074:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22077:4:3",
																				"nodeType": "YulLiteral",
																				"src": "22077:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22070:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "22070:3:3"
																		},
																		"nativeSrc": "22070:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "22070:12:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nativeSrc": "22084:7:3",
																			"nodeType": "YulIdentifier",
																			"src": "22084:7:3"
																		},
																		"nativeSrc": "22084:9:3",
																		"nodeType": "YulFunctionCall",
																		"src": "22084:9:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22063:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22063:6:3"
																},
																"nativeSrc": "22063:31:3",
																"nodeType": "YulFunctionCall",
																"src": "22063:31:3"
															},
															"nativeSrc": "22063:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "22063:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "22118:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "22118:1:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22121:4:3",
																				"nodeType": "YulLiteral",
																				"src": "22121:4:3",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22114:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "22114:3:3"
																		},
																		"nativeSrc": "22114:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "22114:12:3"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nativeSrc": "22128:7:3",
																			"nodeType": "YulIdentifier",
																			"src": "22128:7:3"
																		},
																		"nativeSrc": "22128:9:3",
																		"nodeType": "YulFunctionCall",
																		"src": "22128:9:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22107:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22107:6:3"
																},
																"nativeSrc": "22107:31:3",
																"nodeType": "YulFunctionCall",
																"src": "22107:31:3"
															},
															"nativeSrc": "22107:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "22107:31:3"
														},
														{
															"nativeSrc": "22151:28:3",
															"nodeType": "YulAssignment",
															"src": "22151:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "22171:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "22171:1:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22174:4:3",
																		"nodeType": "YulLiteral",
																		"src": "22174:4:3",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "22161:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "22161:9:3"
																},
																"nativeSrc": "22161:18:3",
																"nodeType": "YulFunctionCall",
																"src": "22161:18:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22151:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22151:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "21944:16:3",
														"valueSize": 1
													},
													{
														"declaration": 563,
														"isOffset": false,
														"isSlot": false,
														"src": "21995:8:3",
														"valueSize": 1
													},
													{
														"declaration": 560,
														"isOffset": false,
														"isSlot": false,
														"src": "22151:6:3",
														"valueSize": 1
													},
													{
														"declaration": 585,
														"isOffset": false,
														"isSlot": false,
														"src": "22038:11:3",
														"valueSize": 1
													}
												],
												"id": 589,
												"nodeType": "InlineAssembly",
												"src": "21845:344:3"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "21383:70:3",
										"text": "@dev Returns the EIP-712 domain separator for the EIP-2612 permit."
									},
									"functionSelector": "3644e515",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "21467:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21483:2:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21523:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "21515:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21515:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21514:16:3"
									},
									"scope": 741,
									"src": "21458:737:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "22659:1112:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22698:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22690:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22690:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22690:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "22702:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "22706:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "22669:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22669:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "22669:44:3"
											},
											{
												"AST": {
													"nativeSrc": "22775:937:3",
													"nodeType": "YulBlock",
													"src": "22775:937:3",
													"statements": [
														{
															"nativeSrc": "22789:50:3",
															"nodeType": "YulVariableDeclaration",
															"src": "22789:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nativeSrc": "22820:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "22820:18:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "22814:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "22814:5:3"
																},
																"nativeSrc": "22814:25:3",
																"nodeType": "YulFunctionCall",
																"src": "22814:25:3"
															},
															"variables": [
																{
																	"name": "totalSupplyBefore",
																	"nativeSrc": "22793:17:3",
																	"nodeType": "YulTypedName",
																	"src": "22793:17:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22852:54:3",
															"nodeType": "YulVariableDeclaration",
															"src": "22852:54:3",
															"value": {
																"arguments": [
																	{
																		"name": "totalSupplyBefore",
																		"nativeSrc": "22880:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "22880:17:3"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "22899:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "22899:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22876:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "22876:3:3"
																},
																"nativeSrc": "22876:30:3",
																"nodeType": "YulFunctionCall",
																"src": "22876:30:3"
															},
															"variables": [
																{
																	"name": "totalSupplyAfter",
																	"nativeSrc": "22856:16:3",
																	"nodeType": "YulTypedName",
																	"src": "22856:16:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23015:119:3",
																"nodeType": "YulBlock",
																"src": "23015:119:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23040:4:3",
																					"nodeType": "YulLiteral",
																					"src": "23040:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23046:10:3",
																					"nodeType": "YulLiteral",
																					"src": "23046:10:3",
																					"type": "",
																					"value": "0xe5cfe957"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "23033:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "23033:6:3"
																			},
																			"nativeSrc": "23033:24:3",
																			"nodeType": "YulFunctionCall",
																			"src": "23033:24:3"
																		},
																		"nativeSrc": "23033:24:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "23033:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23109:4:3",
																					"nodeType": "YulLiteral",
																					"src": "23109:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23115:4:3",
																					"nodeType": "YulLiteral",
																					"src": "23115:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "23102:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "23102:6:3"
																			},
																			"nativeSrc": "23102:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "23102:18:3"
																		},
																		"nativeSrc": "23102:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "23102:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "totalSupplyAfter",
																		"nativeSrc": "22978:16:3",
																		"nodeType": "YulIdentifier",
																		"src": "22978:16:3"
																	},
																	{
																		"name": "totalSupplyBefore",
																		"nativeSrc": "22996:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "22996:17:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "22975:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "22975:2:3"
																},
																"nativeSrc": "22975:39:3",
																"nodeType": "YulFunctionCall",
																"src": "22975:39:3"
															},
															"nativeSrc": "22972:162:3",
															"nodeType": "YulIf",
															"src": "22972:162:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nativeSrc": "23201:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "23201:18:3"
																	},
																	{
																		"name": "totalSupplyAfter",
																		"nativeSrc": "23221:16:3",
																		"nodeType": "YulIdentifier",
																		"src": "23221:16:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23194:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "23194:6:3"
																},
																"nativeSrc": "23194:44:3",
																"nodeType": "YulFunctionCall",
																"src": "23194:44:3"
															},
															"nativeSrc": "23194:44:3",
															"nodeType": "YulExpressionStatement",
															"src": "23194:44:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23318:4:3",
																		"nodeType": "YulLiteral",
																		"src": "23318:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nativeSrc": "23324:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "23324:18:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23311:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "23311:6:3"
																},
																"nativeSrc": "23311:32:3",
																"nodeType": "YulFunctionCall",
																"src": "23311:32:3"
															},
															"nativeSrc": "23311:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "23311:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23363:4:3",
																		"nodeType": "YulLiteral",
																		"src": "23363:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "23369:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "23369:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23356:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "23356:6:3"
																},
																"nativeSrc": "23356:16:3",
																"nodeType": "YulFunctionCall",
																"src": "23356:16:3"
															},
															"nativeSrc": "23356:16:3",
															"nodeType": "YulExpressionStatement",
															"src": "23356:16:3"
														},
														{
															"nativeSrc": "23385:42:3",
															"nodeType": "YulVariableDeclaration",
															"src": "23385:42:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23416:4:3",
																		"nodeType": "YulLiteral",
																		"src": "23416:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23422:4:3",
																		"nodeType": "YulLiteral",
																		"src": "23422:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "23406:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "23406:9:3"
																},
																"nativeSrc": "23406:21:3",
																"nodeType": "YulFunctionCall",
																"src": "23406:21:3"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nativeSrc": "23389:13:3",
																	"nodeType": "YulTypedName",
																	"src": "23389:13:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nativeSrc": "23497:13:3",
																		"nodeType": "YulIdentifier",
																		"src": "23497:13:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nativeSrc": "23522:13:3",
																						"nodeType": "YulIdentifier",
																						"src": "23522:13:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23516:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "23516:5:3"
																				},
																				"nativeSrc": "23516:20:3",
																				"nodeType": "YulFunctionCall",
																				"src": "23516:20:3"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "23538:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "23538:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23512:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "23512:3:3"
																		},
																		"nativeSrc": "23512:33:3",
																		"nodeType": "YulFunctionCall",
																		"src": "23512:33:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23490:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "23490:6:3"
																},
																"nativeSrc": "23490:56:3",
																"nodeType": "YulFunctionCall",
																"src": "23490:56:3"
															},
															"nativeSrc": "23490:56:3",
															"nodeType": "YulExpressionStatement",
															"src": "23490:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23608:4:3",
																		"nodeType": "YulLiteral",
																		"src": "23608:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "23614:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "23614:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23601:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "23601:6:3"
																},
																"nativeSrc": "23601:20:3",
																"nodeType": "YulFunctionCall",
																"src": "23601:20:3"
															},
															"nativeSrc": "23601:20:3",
															"nodeType": "YulExpressionStatement",
															"src": "23601:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23639:4:3",
																		"nodeType": "YulLiteral",
																		"src": "23639:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23645:4:3",
																		"nodeType": "YulLiteral",
																		"src": "23645:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "23651:25:3",
																		"nodeType": "YulIdentifier",
																		"src": "23651:25:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23678:1:3",
																		"nodeType": "YulLiteral",
																		"src": "23678:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "23685:2:3",
																				"nodeType": "YulLiteral",
																				"src": "23685:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23695:4:3",
																						"nodeType": "YulLiteral",
																						"src": "23695:4:3",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "23689:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "23689:5:3"
																				},
																				"nativeSrc": "23689:11:3",
																				"nodeType": "YulFunctionCall",
																				"src": "23689:11:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "23681:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "23681:3:3"
																		},
																		"nativeSrc": "23681:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "23681:20:3"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "23634:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "23634:4:3"
																},
																"nativeSrc": "23634:68:3",
																"nodeType": "YulFunctionCall",
																"src": "23634:68:3"
															},
															"nativeSrc": "23634:68:3",
															"nodeType": "YulExpressionStatement",
															"src": "23634:68:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 294,
														"isOffset": false,
														"isSlot": false,
														"src": "23324:18:3",
														"valueSize": 1
													},
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "22820:18:3",
														"valueSize": 1
													},
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "23201:18:3",
														"valueSize": 1
													},
													{
														"declaration": 282,
														"isOffset": false,
														"isSlot": false,
														"src": "23651:25:3",
														"valueSize": 1
													},
													{
														"declaration": 596,
														"isOffset": false,
														"isSlot": false,
														"src": "22899:6:3",
														"valueSize": 1
													},
													{
														"declaration": 596,
														"isOffset": false,
														"isSlot": false,
														"src": "23538:6:3",
														"valueSize": 1
													},
													{
														"declaration": 596,
														"isOffset": false,
														"isSlot": false,
														"src": "23614:6:3",
														"valueSize": 1
													},
													{
														"declaration": 594,
														"isOffset": false,
														"isSlot": false,
														"src": "23369:2:3",
														"valueSize": 1
													}
												],
												"id": 608,
												"nodeType": "InlineAssembly",
												"src": "22766:946:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23749:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23741:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 610,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23741:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23741:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "23753:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "23757:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "23721:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23721:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "23721:43:3"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "22484:110:3",
										"text": "@dev Mints `amount` tokens to `to`, increasing the total supply.\n Emits a {Transfer} event."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "22608:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22622:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "22614:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22614:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22634:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "22626:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22626:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22613:28:3"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22659:0:3"
									},
									"scope": 741,
									"src": "22599:1172:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "24239:1057:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "24270:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24284:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24276:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 629,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24276:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24276:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "24288:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "24249:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24249:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "24249:46:3"
											},
											{
												"AST": {
													"nativeSrc": "24357:878:3",
													"nodeType": "YulBlock",
													"src": "24357:878:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24438:4:3",
																		"nodeType": "YulLiteral",
																		"src": "24438:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nativeSrc": "24444:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "24444:18:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24431:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "24431:6:3"
																},
																"nativeSrc": "24431:32:3",
																"nodeType": "YulFunctionCall",
																"src": "24431:32:3"
															},
															"nativeSrc": "24431:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "24431:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24483:4:3",
																		"nodeType": "YulLiteral",
																		"src": "24483:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "24489:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "24489:4:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24476:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "24476:6:3"
																},
																"nativeSrc": "24476:18:3",
																"nodeType": "YulFunctionCall",
																"src": "24476:18:3"
															},
															"nativeSrc": "24476:18:3",
															"nodeType": "YulExpressionStatement",
															"src": "24476:18:3"
														},
														{
															"nativeSrc": "24507:44:3",
															"nodeType": "YulVariableDeclaration",
															"src": "24507:44:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24540:4:3",
																		"nodeType": "YulLiteral",
																		"src": "24540:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24546:4:3",
																		"nodeType": "YulLiteral",
																		"src": "24546:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "24530:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "24530:9:3"
																},
																"nativeSrc": "24530:21:3",
																"nodeType": "YulFunctionCall",
																"src": "24530:21:3"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nativeSrc": "24511:15:3",
																	"nodeType": "YulTypedName",
																	"src": "24511:15:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24564:41:3",
															"nodeType": "YulVariableDeclaration",
															"src": "24564:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "24589:15:3",
																		"nodeType": "YulIdentifier",
																		"src": "24589:15:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "24583:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "24583:5:3"
																},
																"nativeSrc": "24583:22:3",
																"nodeType": "YulFunctionCall",
																"src": "24583:22:3"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nativeSrc": "24568:11:3",
																	"nodeType": "YulTypedName",
																	"src": "24568:11:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24692:119:3",
																"nodeType": "YulBlock",
																"src": "24692:119:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "24717:4:3",
																					"nodeType": "YulLiteral",
																					"src": "24717:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24723:10:3",
																					"nodeType": "YulLiteral",
																					"src": "24723:10:3",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "24710:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "24710:6:3"
																			},
																			"nativeSrc": "24710:24:3",
																			"nodeType": "YulFunctionCall",
																			"src": "24710:24:3"
																		},
																		"nativeSrc": "24710:24:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "24710:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "24786:4:3",
																					"nodeType": "YulLiteral",
																					"src": "24786:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24792:4:3",
																					"nodeType": "YulLiteral",
																					"src": "24792:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "24779:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "24779:6:3"
																			},
																			"nativeSrc": "24779:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "24779:18:3"
																		},
																		"nativeSrc": "24779:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "24779:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "24671:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "24671:6:3"
																	},
																	{
																		"name": "fromBalance",
																		"nativeSrc": "24679:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "24679:11:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24668:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "24668:2:3"
																},
																"nativeSrc": "24668:23:3",
																"nodeType": "YulFunctionCall",
																"src": "24668:23:3"
															},
															"nativeSrc": "24665:146:3",
															"nodeType": "YulIf",
															"src": "24665:146:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "24886:15:3",
																		"nodeType": "YulIdentifier",
																		"src": "24886:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "24907:11:3",
																				"nodeType": "YulIdentifier",
																				"src": "24907:11:3"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "24920:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "24920:6:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24903:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "24903:3:3"
																		},
																		"nativeSrc": "24903:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "24903:24:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "24879:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "24879:6:3"
																},
																"nativeSrc": "24879:49:3",
																"nodeType": "YulFunctionCall",
																"src": "24879:49:3"
															},
															"nativeSrc": "24879:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "24879:49:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nativeSrc": "25008:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "25008:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_TOTAL_SUPPLY_SLOT",
																						"nativeSrc": "25038:18:3",
																						"nodeType": "YulIdentifier",
																						"src": "25038:18:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "25032:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "25032:5:3"
																				},
																				"nativeSrc": "25032:25:3",
																				"nodeType": "YulFunctionCall",
																				"src": "25032:25:3"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "25059:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "25059:6:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25028:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "25028:3:3"
																		},
																		"nativeSrc": "25028:38:3",
																		"nodeType": "YulFunctionCall",
																		"src": "25028:38:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "25001:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "25001:6:3"
																},
																"nativeSrc": "25001:66:3",
																"nodeType": "YulFunctionCall",
																"src": "25001:66:3"
															},
															"nativeSrc": "25001:66:3",
															"nodeType": "YulExpressionStatement",
															"src": "25001:66:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25129:4:3",
																		"nodeType": "YulLiteral",
																		"src": "25129:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "25135:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "25135:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25122:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "25122:6:3"
																},
																"nativeSrc": "25122:20:3",
																"nodeType": "YulFunctionCall",
																"src": "25122:20:3"
															},
															"nativeSrc": "25122:20:3",
															"nodeType": "YulExpressionStatement",
															"src": "25122:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25160:4:3",
																		"nodeType": "YulLiteral",
																		"src": "25160:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25166:4:3",
																		"nodeType": "YulLiteral",
																		"src": "25166:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "25172:25:3",
																		"nodeType": "YulIdentifier",
																		"src": "25172:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "25203:2:3",
																				"nodeType": "YulLiteral",
																				"src": "25203:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25211:2:3",
																						"nodeType": "YulLiteral",
																						"src": "25211:2:3",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "from",
																						"nativeSrc": "25215:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "25215:4:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "25207:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "25207:3:3"
																				},
																				"nativeSrc": "25207:13:3",
																				"nodeType": "YulFunctionCall",
																				"src": "25207:13:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "25199:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "25199:3:3"
																		},
																		"nativeSrc": "25199:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "25199:22:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25223:1:3",
																		"nodeType": "YulLiteral",
																		"src": "25223:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "25155:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "25155:4:3"
																},
																"nativeSrc": "25155:70:3",
																"nodeType": "YulFunctionCall",
																"src": "25155:70:3"
															},
															"nativeSrc": "25155:70:3",
															"nodeType": "YulExpressionStatement",
															"src": "25155:70:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 294,
														"isOffset": false,
														"isSlot": false,
														"src": "24444:18:3",
														"valueSize": 1
													},
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "25008:18:3",
														"valueSize": 1
													},
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "25038:18:3",
														"valueSize": 1
													},
													{
														"declaration": 282,
														"isOffset": false,
														"isSlot": false,
														"src": "25172:25:3",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "24671:6:3",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "24920:6:3",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "25059:6:3",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "25135:6:3",
														"valueSize": 1
													},
													{
														"declaration": 622,
														"isOffset": false,
														"isSlot": false,
														"src": "24489:4:3",
														"valueSize": 1
													},
													{
														"declaration": 622,
														"isOffset": false,
														"isSlot": false,
														"src": "25215:4:3",
														"valueSize": 1
													}
												],
												"id": 636,
												"nodeType": "InlineAssembly",
												"src": "24348:887:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "25264:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25278:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25270:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25270:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25270:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "25282:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "25244:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25244:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "25244:45:3"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "24060:112:3",
										"text": "@dev Burns `amount` tokens from `from`, reducing the total supply.\n Emits a {Transfer} event."
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "24186:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24200:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "24192:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24192:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24214:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "24206:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24206:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24191:30:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24239:0:3"
									},
									"scope": 741,
									"src": "24177:1119:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "25722:1318:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "25753:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "25759:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "25763:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "25732:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25732:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "25732:38:3"
											},
											{
												"AST": {
													"nativeSrc": "25832:1155:3",
													"nodeType": "YulBlock",
													"src": "25832:1155:3",
													"statements": [
														{
															"nativeSrc": "25846:26:3",
															"nodeType": "YulVariableDeclaration",
															"src": "25846:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25863:2:3",
																		"nodeType": "YulLiteral",
																		"src": "25863:2:3",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "25867:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "25867:4:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "25859:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "25859:3:3"
																},
																"nativeSrc": "25859:13:3",
																"nodeType": "YulFunctionCall",
																"src": "25859:13:3"
															},
															"variables": [
																{
																	"name": "from_",
																	"nativeSrc": "25850:5:3",
																	"nodeType": "YulTypedName",
																	"src": "25850:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25952:4:3",
																		"nodeType": "YulLiteral",
																		"src": "25952:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from_",
																				"nativeSrc": "25961:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "25961:5:3"
																			},
																			{
																				"name": "_BALANCE_SLOT_SEED",
																				"nativeSrc": "25968:18:3",
																				"nodeType": "YulIdentifier",
																				"src": "25968:18:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "25958:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "25958:2:3"
																		},
																		"nativeSrc": "25958:29:3",
																		"nodeType": "YulFunctionCall",
																		"src": "25958:29:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25945:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "25945:6:3"
																},
																"nativeSrc": "25945:43:3",
																"nodeType": "YulFunctionCall",
																"src": "25945:43:3"
															},
															"nativeSrc": "25945:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "25945:43:3"
														},
														{
															"nativeSrc": "26001:44:3",
															"nodeType": "YulVariableDeclaration",
															"src": "26001:44:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26034:4:3",
																		"nodeType": "YulLiteral",
																		"src": "26034:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26040:4:3",
																		"nodeType": "YulLiteral",
																		"src": "26040:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "26024:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "26024:9:3"
																},
																"nativeSrc": "26024:21:3",
																"nodeType": "YulFunctionCall",
																"src": "26024:21:3"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nativeSrc": "26005:15:3",
																	"nodeType": "YulTypedName",
																	"src": "26005:15:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26058:41:3",
															"nodeType": "YulVariableDeclaration",
															"src": "26058:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "26083:15:3",
																		"nodeType": "YulIdentifier",
																		"src": "26083:15:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "26077:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "26077:5:3"
																},
																"nativeSrc": "26077:22:3",
																"nodeType": "YulFunctionCall",
																"src": "26077:22:3"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nativeSrc": "26062:11:3",
																	"nodeType": "YulTypedName",
																	"src": "26062:11:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26186:119:3",
																"nodeType": "YulBlock",
																"src": "26186:119:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "26211:4:3",
																					"nodeType": "YulLiteral",
																					"src": "26211:4:3",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26217:10:3",
																					"nodeType": "YulLiteral",
																					"src": "26217:10:3",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "26204:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "26204:6:3"
																			},
																			"nativeSrc": "26204:24:3",
																			"nodeType": "YulFunctionCall",
																			"src": "26204:24:3"
																		},
																		"nativeSrc": "26204:24:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "26204:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "26280:4:3",
																					"nodeType": "YulLiteral",
																					"src": "26280:4:3",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26286:4:3",
																					"nodeType": "YulLiteral",
																					"src": "26286:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "26273:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "26273:6:3"
																			},
																			"nativeSrc": "26273:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "26273:18:3"
																		},
																		"nativeSrc": "26273:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "26273:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "26165:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "26165:6:3"
																	},
																	{
																		"name": "fromBalance",
																		"nativeSrc": "26173:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "26173:11:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26162:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "26162:2:3"
																},
																"nativeSrc": "26162:23:3",
																"nodeType": "YulFunctionCall",
																"src": "26162:23:3"
															},
															"nativeSrc": "26159:146:3",
															"nodeType": "YulIf",
															"src": "26159:146:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "26380:15:3",
																		"nodeType": "YulIdentifier",
																		"src": "26380:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "26401:11:3",
																				"nodeType": "YulIdentifier",
																				"src": "26401:11:3"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "26414:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "26414:6:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26397:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "26397:3:3"
																		},
																		"nativeSrc": "26397:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "26397:24:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "26373:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "26373:6:3"
																},
																"nativeSrc": "26373:49:3",
																"nodeType": "YulFunctionCall",
																"src": "26373:49:3"
															},
															"nativeSrc": "26373:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "26373:49:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26491:4:3",
																		"nodeType": "YulLiteral",
																		"src": "26491:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "26497:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "26497:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26484:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "26484:6:3"
																},
																"nativeSrc": "26484:16:3",
																"nodeType": "YulFunctionCall",
																"src": "26484:16:3"
															},
															"nativeSrc": "26484:16:3",
															"nodeType": "YulExpressionStatement",
															"src": "26484:16:3"
														},
														{
															"nativeSrc": "26513:42:3",
															"nodeType": "YulVariableDeclaration",
															"src": "26513:42:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26544:4:3",
																		"nodeType": "YulLiteral",
																		"src": "26544:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26550:4:3",
																		"nodeType": "YulLiteral",
																		"src": "26550:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "26534:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "26534:9:3"
																},
																"nativeSrc": "26534:21:3",
																"nodeType": "YulFunctionCall",
																"src": "26534:21:3"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nativeSrc": "26517:13:3",
																	"nodeType": "YulTypedName",
																	"src": "26517:13:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nativeSrc": "26759:13:3",
																		"nodeType": "YulIdentifier",
																		"src": "26759:13:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nativeSrc": "26784:13:3",
																						"nodeType": "YulIdentifier",
																						"src": "26784:13:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "26778:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "26778:5:3"
																				},
																				"nativeSrc": "26778:20:3",
																				"nodeType": "YulFunctionCall",
																				"src": "26778:20:3"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "26800:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "26800:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26774:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "26774:3:3"
																		},
																		"nativeSrc": "26774:33:3",
																		"nodeType": "YulFunctionCall",
																		"src": "26774:33:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "26752:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "26752:6:3"
																},
																"nativeSrc": "26752:56:3",
																"nodeType": "YulFunctionCall",
																"src": "26752:56:3"
															},
															"nativeSrc": "26752:56:3",
															"nodeType": "YulExpressionStatement",
															"src": "26752:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26870:4:3",
																		"nodeType": "YulLiteral",
																		"src": "26870:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "26876:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "26876:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26863:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "26863:6:3"
																},
																"nativeSrc": "26863:20:3",
																"nodeType": "YulFunctionCall",
																"src": "26863:20:3"
															},
															"nativeSrc": "26863:20:3",
															"nodeType": "YulExpressionStatement",
															"src": "26863:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26901:4:3",
																		"nodeType": "YulLiteral",
																		"src": "26901:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26907:4:3",
																		"nodeType": "YulLiteral",
																		"src": "26907:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "26913:25:3",
																		"nodeType": "YulIdentifier",
																		"src": "26913:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "26944:2:3",
																				"nodeType": "YulLiteral",
																				"src": "26944:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from_",
																				"nativeSrc": "26948:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "26948:5:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "26940:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "26940:3:3"
																		},
																		"nativeSrc": "26940:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "26940:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "26960:2:3",
																				"nodeType": "YulLiteral",
																				"src": "26960:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26970:4:3",
																						"nodeType": "YulLiteral",
																						"src": "26970:4:3",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "26964:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "26964:5:3"
																				},
																				"nativeSrc": "26964:11:3",
																				"nodeType": "YulFunctionCall",
																				"src": "26964:11:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "26956:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "26956:3:3"
																		},
																		"nativeSrc": "26956:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "26956:20:3"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "26896:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "26896:4:3"
																},
																"nativeSrc": "26896:81:3",
																"nodeType": "YulFunctionCall",
																"src": "26896:81:3"
															},
															"nativeSrc": "26896:81:3",
															"nodeType": "YulExpressionStatement",
															"src": "26896:81:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 294,
														"isOffset": false,
														"isSlot": false,
														"src": "25968:18:3",
														"valueSize": 1
													},
													{
														"declaration": 282,
														"isOffset": false,
														"isSlot": false,
														"src": "26913:25:3",
														"valueSize": 1
													},
													{
														"declaration": 654,
														"isOffset": false,
														"isSlot": false,
														"src": "26165:6:3",
														"valueSize": 1
													},
													{
														"declaration": 654,
														"isOffset": false,
														"isSlot": false,
														"src": "26414:6:3",
														"valueSize": 1
													},
													{
														"declaration": 654,
														"isOffset": false,
														"isSlot": false,
														"src": "26800:6:3",
														"valueSize": 1
													},
													{
														"declaration": 654,
														"isOffset": false,
														"isSlot": false,
														"src": "26876:6:3",
														"valueSize": 1
													},
													{
														"declaration": 650,
														"isOffset": false,
														"isSlot": false,
														"src": "25867:4:3",
														"valueSize": 1
													},
													{
														"declaration": 652,
														"isOffset": false,
														"isSlot": false,
														"src": "26497:2:3",
														"valueSize": 1
													}
												],
												"id": 663,
												"nodeType": "InlineAssembly",
												"src": "25823:1164:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "27016:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "27022:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "27026:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "26996:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26996:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "26996:37:3"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "25585:54:3",
										"text": "@dev Moves `amount` of tokens from `from` to `to`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "25653:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25671:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "25663:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25685:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "25677:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25697:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "25689:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25689:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25662:42:3"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25722:0:3"
									},
									"scope": 741,
									"src": "25644:1396:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "27504:997:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 681,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "27518:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27518:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "IfStatement",
												"src": "27514:134:3",
												"trueBody": {
													"id": 688,
													"nodeType": "Block",
													"src": "27551:97:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 683,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "27569:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 684,
																	"name": "_PERMIT2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "27580:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "27569:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 687,
															"nodeType": "IfStatement",
															"src": "27565:32:3",
															"trueBody": {
																"functionReturnParameters": 680,
																"id": 686,
																"nodeType": "Return",
																"src": "27590:7:3"
															}
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "27709:786:3",
													"nodeType": "YulBlock",
													"src": "27709:786:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27792:4:3",
																		"nodeType": "YulLiteral",
																		"src": "27792:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "27798:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "27798:7:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27785:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "27785:6:3"
																},
																"nativeSrc": "27785:21:3",
																"nodeType": "YulFunctionCall",
																"src": "27785:21:3"
															},
															"nativeSrc": "27785:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "27785:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27826:4:3",
																		"nodeType": "YulLiteral",
																		"src": "27826:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nativeSrc": "27832:20:3",
																		"nodeType": "YulIdentifier",
																		"src": "27832:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27819:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "27819:6:3"
																},
																"nativeSrc": "27819:34:3",
																"nodeType": "YulFunctionCall",
																"src": "27819:34:3"
															},
															"nativeSrc": "27819:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "27819:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27873:4:3",
																		"nodeType": "YulLiteral",
																		"src": "27873:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "27879:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "27879:5:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27866:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "27866:6:3"
																},
																"nativeSrc": "27866:19:3",
																"nodeType": "YulFunctionCall",
																"src": "27866:19:3"
															},
															"nativeSrc": "27866:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "27866:19:3"
														},
														{
															"nativeSrc": "27898:42:3",
															"nodeType": "YulVariableDeclaration",
															"src": "27898:42:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27929:4:3",
																		"nodeType": "YulLiteral",
																		"src": "27929:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27935:4:3",
																		"nodeType": "YulLiteral",
																		"src": "27935:4:3",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "27919:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "27919:9:3"
																},
																"nativeSrc": "27919:21:3",
																"nodeType": "YulFunctionCall",
																"src": "27919:21:3"
															},
															"variables": [
																{
																	"name": "allowanceSlot",
																	"nativeSrc": "27902:13:3",
																	"nodeType": "YulTypedName",
																	"src": "27902:13:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27953:38:3",
															"nodeType": "YulVariableDeclaration",
															"src": "27953:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nativeSrc": "27977:13:3",
																		"nodeType": "YulIdentifier",
																		"src": "27977:13:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "27971:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "27971:5:3"
																},
																"nativeSrc": "27971:20:3",
																"nodeType": "YulFunctionCall",
																"src": "27971:20:3"
															},
															"variables": [
																{
																	"name": "allowance_",
																	"nativeSrc": "27957:10:3",
																	"nodeType": "YulTypedName",
																	"src": "27957:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28089:396:3",
																"nodeType": "YulBlock",
																"src": "28089:396:3",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "28214:133:3",
																			"nodeType": "YulBlock",
																			"src": "28214:133:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "28243:4:3",
																								"nodeType": "YulLiteral",
																								"src": "28243:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "28249:10:3",
																								"nodeType": "YulLiteral",
																								"src": "28249:10:3",
																								"type": "",
																								"value": "0x13be252b"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "28236:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "28236:6:3"
																						},
																						"nativeSrc": "28236:24:3",
																						"nodeType": "YulFunctionCall",
																						"src": "28236:24:3"
																					},
																					"nativeSrc": "28236:24:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "28236:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "28318:4:3",
																								"nodeType": "YulLiteral",
																								"src": "28318:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "28324:4:3",
																								"nodeType": "YulLiteral",
																								"src": "28324:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "28311:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "28311:6:3"
																						},
																						"nativeSrc": "28311:18:3",
																						"nodeType": "YulFunctionCall",
																						"src": "28311:18:3"
																					},
																					"nativeSrc": "28311:18:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "28311:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nativeSrc": "28194:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "28194:6:3"
																				},
																				{
																					"name": "allowance_",
																					"nativeSrc": "28202:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "28202:10:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "28191:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "28191:2:3"
																			},
																			"nativeSrc": "28191:22:3",
																			"nodeType": "YulFunctionCall",
																			"src": "28191:22:3"
																		},
																		"nativeSrc": "28188:159:3",
																		"nodeType": "YulIf",
																		"src": "28188:159:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "allowanceSlot",
																					"nativeSrc": "28432:13:3",
																					"nodeType": "YulIdentifier",
																					"src": "28432:13:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "allowance_",
																							"nativeSrc": "28451:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "28451:10:3"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "28463:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "28463:6:3"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "28447:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "28447:3:3"
																					},
																					"nativeSrc": "28447:23:3",
																					"nodeType": "YulFunctionCall",
																					"src": "28447:23:3"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "28425:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "28425:6:3"
																			},
																			"nativeSrc": "28425:46:3",
																			"nodeType": "YulFunctionCall",
																			"src": "28425:46:3"
																		},
																		"nativeSrc": "28425:46:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "28425:46:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "allowance_",
																		"nativeSrc": "28077:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "28077:10:3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "28073:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "28073:3:3"
																},
																"nativeSrc": "28073:15:3",
																"nodeType": "YulFunctionCall",
																"src": "28073:15:3"
															},
															"nativeSrc": "28070:415:3",
															"nodeType": "YulIf",
															"src": "28070:415:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 298,
														"isOffset": false,
														"isSlot": false,
														"src": "27832:20:3",
														"valueSize": 1
													},
													{
														"declaration": 678,
														"isOffset": false,
														"isSlot": false,
														"src": "28194:6:3",
														"valueSize": 1
													},
													{
														"declaration": 678,
														"isOffset": false,
														"isSlot": false,
														"src": "28463:6:3",
														"valueSize": 1
													},
													{
														"declaration": 674,
														"isOffset": false,
														"isSlot": false,
														"src": "27879:5:3",
														"valueSize": 1
													},
													{
														"declaration": 676,
														"isOffset": false,
														"isSlot": false,
														"src": "27798:7:3",
														"valueSize": 1
													}
												],
												"id": 690,
												"nodeType": "InlineAssembly",
												"src": "27700:795:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "27329:80:3",
										"text": "@dev Updates the allowance of `owner` for `spender` based on spent `amount`."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "27423:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27447:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "27439:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27439:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27462:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "27454:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27479:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "27471:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27438:48:3"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27504:0:3"
									},
									"scope": 741,
									"src": "27414:1087:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "28717:953:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 702,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "28731:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28731:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "28727:447:3",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "28764:410:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "28834:330:3",
																"nodeType": "YulBlock",
																"src": "28834:330:3",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "29005:145:3",
																			"nodeType": "YulBlock",
																			"src": "29005:145:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "29034:4:3",
																								"nodeType": "YulLiteral",
																								"src": "29034:4:3",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "29040:10:3",
																								"nodeType": "YulLiteral",
																								"src": "29040:10:3",
																								"type": "",
																								"value": "0x3f68539a"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "29027:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "29027:6:3"
																						},
																						"nativeSrc": "29027:24:3",
																						"nodeType": "YulFunctionCall",
																						"src": "29027:24:3"
																					},
																					"nativeSrc": "29027:24:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "29027:24:3"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "29121:4:3",
																								"nodeType": "YulLiteral",
																								"src": "29121:4:3",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "29127:4:3",
																								"nodeType": "YulLiteral",
																								"src": "29127:4:3",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "29114:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "29114:6:3"
																						},
																						"nativeSrc": "29114:18:3",
																						"nodeType": "YulFunctionCall",
																						"src": "29114:18:3"
																					},
																					"nativeSrc": "29114:18:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "29114:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "28949:2:3",
																											"nodeType": "YulLiteral",
																											"src": "28949:2:3",
																											"type": "",
																											"value": "96"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "28957:2:3",
																													"nodeType": "YulLiteral",
																													"src": "28957:2:3",
																													"type": "",
																													"value": "96"
																												},
																												{
																													"name": "spender",
																													"nativeSrc": "28961:7:3",
																													"nodeType": "YulIdentifier",
																													"src": "28961:7:3"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nativeSrc": "28953:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "28953:3:3"
																											},
																											"nativeSrc": "28953:16:3",
																											"nodeType": "YulFunctionCall",
																											"src": "28953:16:3"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "28945:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "28945:3:3"
																									},
																									"nativeSrc": "28945:25:3",
																									"nodeType": "YulFunctionCall",
																									"src": "28945:25:3"
																								},
																								{
																									"name": "_PERMIT2",
																									"nativeSrc": "28972:8:3",
																									"nodeType": "YulIdentifier",
																									"src": "28972:8:3"
																								}
																							],
																							"functionName": {
																								"name": "xor",
																								"nativeSrc": "28941:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "28941:3:3"
																							},
																							"nativeSrc": "28941:40:3",
																							"nodeType": "YulFunctionCall",
																							"src": "28941:40:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "amount",
																											"nativeSrc": "28994:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "28994:6:3"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "28990:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "28990:3:3"
																									},
																									"nativeSrc": "28990:11:3",
																									"nodeType": "YulFunctionCall",
																									"src": "28990:11:3"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "28983:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "28983:6:3"
																							},
																							"nativeSrc": "28983:19:3",
																							"nodeType": "YulFunctionCall",
																							"src": "28983:19:3"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "28938:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "28938:2:3"
																					},
																					"nativeSrc": "28938:65:3",
																					"nodeType": "YulFunctionCall",
																					"src": "28938:65:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "28931:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "28931:6:3"
																			},
																			"nativeSrc": "28931:73:3",
																			"nodeType": "YulFunctionCall",
																			"src": "28931:73:3"
																		},
																		"nativeSrc": "28928:222:3",
																		"nodeType": "YulIf",
																		"src": "28928:222:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 322,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "28972:8:3",
																	"valueSize": 1
																},
																{
																	"declaration": 699,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "28994:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 697,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "28961:7:3",
																	"valueSize": 1
																}
															],
															"id": 704,
															"nodeType": "InlineAssembly",
															"src": "28825:339:3"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "29235:429:3",
													"nodeType": "YulBlock",
													"src": "29235:429:3",
													"statements": [
														{
															"nativeSrc": "29249:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "29249:28:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29267:2:3",
																		"nodeType": "YulLiteral",
																		"src": "29267:2:3",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "29271:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "29271:5:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "29263:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "29263:3:3"
																},
																"nativeSrc": "29263:14:3",
																"nodeType": "YulFunctionCall",
																"src": "29263:14:3"
															},
															"variables": [
																{
																	"name": "owner_",
																	"nativeSrc": "29253:6:3",
																	"nodeType": "YulTypedName",
																	"src": "29253:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29361:4:3",
																		"nodeType": "YulLiteral",
																		"src": "29361:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "29367:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "29367:7:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29354:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "29354:6:3"
																},
																"nativeSrc": "29354:21:3",
																"nodeType": "YulFunctionCall",
																"src": "29354:21:3"
															},
															"nativeSrc": "29354:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "29354:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29395:4:3",
																		"nodeType": "YulLiteral",
																		"src": "29395:4:3",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "owner_",
																				"nativeSrc": "29404:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "29404:6:3"
																			},
																			{
																				"name": "_ALLOWANCE_SLOT_SEED",
																				"nativeSrc": "29412:20:3",
																				"nodeType": "YulIdentifier",
																				"src": "29412:20:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "29401:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "29401:2:3"
																		},
																		"nativeSrc": "29401:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "29401:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29388:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "29388:6:3"
																},
																"nativeSrc": "29388:46:3",
																"nodeType": "YulFunctionCall",
																"src": "29388:46:3"
															},
															"nativeSrc": "29388:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "29388:46:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29464:4:3",
																				"nodeType": "YulLiteral",
																				"src": "29464:4:3",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29470:4:3",
																				"nodeType": "YulLiteral",
																				"src": "29470:4:3",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "29454:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "29454:9:3"
																		},
																		"nativeSrc": "29454:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "29454:21:3"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "29477:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "29477:6:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "29447:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "29447:6:3"
																},
																"nativeSrc": "29447:37:3",
																"nodeType": "YulFunctionCall",
																"src": "29447:37:3"
															},
															"nativeSrc": "29447:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "29447:37:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29546:4:3",
																		"nodeType": "YulLiteral",
																		"src": "29546:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "29552:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "29552:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29539:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "29539:6:3"
																},
																"nativeSrc": "29539:20:3",
																"nodeType": "YulFunctionCall",
																"src": "29539:20:3"
															},
															"nativeSrc": "29539:20:3",
															"nodeType": "YulExpressionStatement",
															"src": "29539:20:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29577:4:3",
																		"nodeType": "YulLiteral",
																		"src": "29577:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29583:4:3",
																		"nodeType": "YulLiteral",
																		"src": "29583:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nativeSrc": "29589:25:3",
																		"nodeType": "YulIdentifier",
																		"src": "29589:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29620:2:3",
																				"nodeType": "YulLiteral",
																				"src": "29620:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "owner_",
																				"nativeSrc": "29624:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "29624:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "29616:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "29616:3:3"
																		},
																		"nativeSrc": "29616:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "29616:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29637:2:3",
																				"nodeType": "YulLiteral",
																				"src": "29637:2:3",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "29647:4:3",
																						"nodeType": "YulLiteral",
																						"src": "29647:4:3",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "29641:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "29641:5:3"
																				},
																				"nativeSrc": "29641:11:3",
																				"nodeType": "YulFunctionCall",
																				"src": "29641:11:3"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "29633:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "29633:3:3"
																		},
																		"nativeSrc": "29633:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "29633:20:3"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "29572:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "29572:4:3"
																},
																"nativeSrc": "29572:82:3",
																"nodeType": "YulFunctionCall",
																"src": "29572:82:3"
															},
															"nativeSrc": "29572:82:3",
															"nodeType": "YulExpressionStatement",
															"src": "29572:82:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 298,
														"isOffset": false,
														"isSlot": false,
														"src": "29412:20:3",
														"valueSize": 1
													},
													{
														"declaration": 286,
														"isOffset": false,
														"isSlot": false,
														"src": "29589:25:3",
														"valueSize": 1
													},
													{
														"declaration": 699,
														"isOffset": false,
														"isSlot": false,
														"src": "29477:6:3",
														"valueSize": 1
													},
													{
														"declaration": 699,
														"isOffset": false,
														"isSlot": false,
														"src": "29552:6:3",
														"valueSize": 1
													},
													{
														"declaration": 695,
														"isOffset": false,
														"isSlot": false,
														"src": "29271:5:3",
														"valueSize": 1
													},
													{
														"declaration": 697,
														"isOffset": false,
														"isSlot": false,
														"src": "29367:7:3",
														"valueSize": 1
													}
												],
												"id": 707,
												"nodeType": "InlineAssembly",
												"src": "29226:438:3"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "28507:122:3",
										"text": "@dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\n Emits a {Approval} event."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "28643:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28660:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "28652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "28675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "28667:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28692:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "28684:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28651:48:3"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28717:0:3"
									},
									"scope": 741,
									"src": "28634:1036:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "30155:2:3",
										"statements": []
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "29959:102:3",
										"text": "@dev Hook that is called before any transfer of tokens.\n This includes minting and burning."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "30075:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30104:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "30096:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30096:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30118:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "30110:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30130:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "30122:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30122:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30095:42:3"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30155:0:3"
									},
									"scope": 741,
									"src": "30066:91:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "30357:2:3",
										"statements": []
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "30163:101:3",
										"text": "@dev Hook that is called after any transfer of tokens.\n This includes minting and burning."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "30278:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30306:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "30298:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30298:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30320:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "30312:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30312:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30332:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "30324:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30324:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30297:42:3"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30357:0:3"
									},
									"scope": 741,
									"src": "30269:90:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "31064:29:3",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31081:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 736,
												"id": 738,
												"nodeType": "Return",
												"src": "31074:12:3"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "30648:333:3",
										"text": "@dev Returns whether to fix the Permit2 contract's allowance at infinity.\n This value should be kept constant after contract initialization,\n or else the actual allowance values may not match with the {Approval} events.\n For best performance, return a compile-time constant for zero-cost abstraction."
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_givePermit2InfiniteAllowance",
									"nameLocation": "30995:29:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31024:2:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "31058:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31058:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31057:6:3"
									},
									"scope": 741,
									"src": "30986:107:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 742,
							"src": "1140:29955:3",
							"usedErrors": [
								239,
								242,
								245,
								248,
								251,
								254,
								257,
								260
							],
							"usedEvents": [
								269,
								278
							]
						}
					],
					"src": "32:31064:3"
				},
				"id": 3
			},
			"src/ERC223.sol": {
				"ast": {
					"absolutePath": "src/ERC223.sol",
					"exportedSymbols": {
						"ERC20": [
							741
						],
						"ERC223": [
							777
						],
						"IERC223Recipient": [
							233
						]
					},
					"id": 778,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:4"
						},
						{
							"absolutePath": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
							"file": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
							"id": 744,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 778,
							"sourceUnit": 742,
							"src": "74:77:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol",
							"file": "https://github.com/Dexaran/ERC223-token-standard/blob/development/token/ERC223/IERC223Recipient.sol",
							"id": 745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 778,
							"sourceUnit": 234,
							"src": "153:109:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 746,
										"name": "ERC20",
										"nameLocations": [
											"294:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 741,
										"src": "294:5:4"
									},
									"id": 747,
									"nodeType": "InheritanceSpecifier",
									"src": "294:5:4"
								}
							],
							"canonicalName": "ERC223",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 777,
							"linearizedBaseContracts": [
								777,
								741
							],
							"name": "ERC223",
							"nameLocation": "284:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "410:139:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "430:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "435:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															776,
															434
														],
														"referencedDeclaration": 434,
														"src": "421:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "421:21:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "491:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "495:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "491:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "503:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 770,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "511:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 764,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "472:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 763,
																"name": "IERC223Recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "455:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC223Recipient_$233_$",
																	"typeString": "type(contract IERC223Recipient)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "455:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC223Recipient_$233",
																"typeString": "contract IERC223Recipient"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "477:13:4",
														"memberName": "tokenReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 232,
														"src": "455:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "455:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "455:62:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "537:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 757,
												"id": 774,
												"nodeType": "Return",
												"src": "530:11:4"
											}
										]
									},
									"functionSelector": "be45fd62",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "318:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "335:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "327:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "345:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "340:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "368:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "353:20:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "353:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:48:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "396:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "391:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:14:4"
									},
									"scope": 777,
									"src": "309:240:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 778,
							"src": "266:286:4",
							"usedErrors": [
								239,
								242,
								245,
								248,
								251,
								254,
								257,
								260
							],
							"usedEvents": [
								269,
								278
							]
						}
					],
					"src": "46:506:4"
				},
				"id": 4
			},
			"src/ExchangeAbstract.sol": {
				"ast": {
					"absolutePath": "src/ExchangeAbstract.sol",
					"exportedSymbols": {
						"ERC20": [
							741
						],
						"ERC223": [
							777
						],
						"ExchangeAbstract": [
							921
						],
						"IERC223Recipient": [
							233
						],
						"Permit2Sig": [
							1152
						],
						"SwapAbstract": [
							1509
						]
					},
					"id": 922,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:5"
						},
						{
							"absolutePath": "src/SwapAbstract.sol",
							"file": "./SwapAbstract.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 922,
							"sourceUnit": 1510,
							"src": "74:28:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "SwapAbstract",
										"nameLocations": [
											"144:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1509,
										"src": "144:12:5"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "144:12:5"
								}
							],
							"canonicalName": "ExchangeAbstract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 921,
							"linearizedBaseContracts": [
								921,
								1509
							],
							"name": "ExchangeAbstract",
							"nameLocation": "124:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "82e3d8bd",
									"id": 784,
									"mutability": "immutable",
									"name": "erc20SellInhibitor",
									"nameLocation": "195:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "170:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 783,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "170:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f86329e1",
									"id": 786,
									"mutability": "immutable",
									"name": "erc20BuyableRate",
									"nameLocation": "245:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "220:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 785,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "220:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "058d1573",
									"id": 788,
									"mutability": "immutable",
									"name": "nativeSellInhibitor",
									"nameLocation": "293:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "268:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 787,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "268:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cc27b40",
									"id": 790,
									"mutability": "immutable",
									"name": "nativeBuyableRate",
									"nameLocation": "344:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "319:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 789,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e46dbd07",
									"id": 794,
									"mutability": "mutable",
									"name": "erc20BuyableTime",
									"nameLocation": "386:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "374:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "374:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"expression": {
											"id": 792,
											"name": "block",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967292,
											"src": "405:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_block",
												"typeString": "block"
											}
										},
										"id": 793,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "411:9:5",
										"memberName": "timestamp",
										"nodeType": "MemberAccess",
										"src": "405:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 798,
									"mutability": "mutable",
									"name": "_nativeBuyableTime",
									"nameLocation": "440:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "427:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 795,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "427:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"expression": {
											"id": 796,
											"name": "block",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967292,
											"src": "461:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_block",
												"typeString": "block"
											}
										},
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "467:9:5",
										"memberName": "timestamp",
										"nodeType": "MemberAccess",
										"src": "461:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "655:208:5",
										"statements": [
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 809,
														"name": "erc20SellInhibitor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "666:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 810,
														"name": "erc20SellInhibitor_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "687:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "666:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "666:40:5"
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "erc20BuyableRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "717:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "erc20BuyableRate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "736:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "717:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "717:36:5"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "nativeSellInhibitor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "764:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 818,
														"name": "nativeSellInhibitor_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "786:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "764:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "764:42:5"
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 821,
														"name": "nativeBuyableRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "817:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 822,
														"name": "nativeBuyableRate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "837:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "817:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "817:38:5"
											}
										]
									},
									"id": 826,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "erc20SellInhibitor_",
												"nameLocation": "515:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "507:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 799,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "erc20BuyableRate_",
												"nameLocation": "554:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "546:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 801,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "nativeSellInhibitor_",
												"nameLocation": "590:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "582:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 803,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "nativeBuyableRate_",
												"nameLocation": "629:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "621:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 805,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:158:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:0:5"
									},
									"scope": 921,
									"src": "485:378:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1026:84:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 831,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1045:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1051:9:5",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1045:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 833,
																	"name": "_nativeBuyableTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "1063:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1045:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 835,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1044:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 836,
														"name": "nativeBuyableRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "1085:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1044:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 830,
												"id": 838,
												"nodeType": "Return",
												"src": "1037:65:5"
											}
										]
									},
									"functionSelector": "b3ca7f2a",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nativesBuyable",
									"nameLocation": "982:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1020:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1020:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:6:5"
									},
									"scope": 921,
									"src": "973:137:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1170:81:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 845,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1189:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1195:9:5",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1189:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 847,
																	"name": "erc20BuyableTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1207:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1189:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 849,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1188:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 850,
														"name": "erc20BuyableRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "1227:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1188:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 844,
												"id": 852,
												"nodeType": "Return",
												"src": "1181:62:5"
											}
										]
									},
									"functionSelector": "f4d0bd72",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20sBuyable",
									"nameLocation": "1127:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:2:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1164:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1164:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1163:6:5"
									},
									"scope": 921,
									"src": "1118:133:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1173
									],
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "1354:216:5",
										"statements": [
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 862,
														"name": "nativesBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1365:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 863,
																	"name": "nativesBuyable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "1381:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1381:16:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 865,
																"name": "erc20sSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "1400:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1381:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 867,
																		"name": "erc20SellInhibitor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "1414:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 868,
																		"name": "erc20sSold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "1435:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1414:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 870,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1413:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1381:65:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1365:81:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1365:81:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 876,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1468:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ExchangeAbstract_$921",
																		"typeString": "contract ExchangeAbstract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ExchangeAbstract_$921",
																		"typeString": "contract ExchangeAbstract"
																	}
																],
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1460:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 874,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1460:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1460:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1474:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1460:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 879,
														"name": "nativesBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1484:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1460:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "1457:106:5",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "1499:64:5",
													"statements": [
														{
															"expression": {
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 881,
																	"name": "nativesBought",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "1514:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 884,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1538:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ExchangeAbstract_$921",
																					"typeString": "contract ExchangeAbstract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ExchangeAbstract_$921",
																					"typeString": "contract ExchangeAbstract"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1530:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1530:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1530:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1544:7:5",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "1530:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1514:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "1514:37:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4206abe9",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20ToNativePrice",
									"nameLocation": "1268:18:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 858,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1311:8:5"
									},
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "1292:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1287:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1287:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1286:17:5"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "1339:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1334:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1334:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:20:5"
									},
									"scope": 921,
									"src": "1259:311:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "1653:203:5",
										"statements": [
											{
												"expression": {
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 900,
														"name": "_nativeBuyableTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1684:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 901,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "1706:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 902,
															"name": "nativeBuyableRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "1715:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "1706:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1684:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "1684:48:5"
											},
											{
												"assignments": [
													907,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1784:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 919,
														"src": "1779:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 906,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1779:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 914,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1818:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 908,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "1796:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1799:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1796:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 910,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "1810:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1796:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1796:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1778:43:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "1840:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1832:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1832:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "1832:16:5"
											}
										]
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNativesBought",
									"nameLocation": "1587:22:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 898,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1644:8:5"
									},
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1618:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1610:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1627:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1622:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:25:5"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1653:0:5"
									},
									"scope": 921,
									"src": "1578:278:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 922,
							"src": "106:1761:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1821:5"
				},
				"id": 5
			},
			"src/PinusVault2.sol": {
				"ast": {
					"absolutePath": "src/PinusVault2.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"ERC20": [
							741
						],
						"ERC20_INHIBITOR": [
							929
						],
						"ERC20_PURCHASABLE_RATE": [
							937
						],
						"ERC223": [
							777
						],
						"ExchangeAbstract": [
							921
						],
						"IERC223Recipient": [
							233
						],
						"NATIVE_INHIBITOR": [
							940
						],
						"NATIVE_PURCHASABLE_RATE": [
							948
						],
						"Ownable": [
							147
						],
						"Permit2Sig": [
							1152
						],
						"PinusVault2": [
							1139
						],
						"SwapAbstract": [
							1509
						]
					},
					"id": 1140,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 923,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 924,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 148,
							"src": "155:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
							"file": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
							"id": 925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 742,
							"src": "209:77:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/ExchangeAbstract.sol",
							"file": "./ExchangeAbstract.sol",
							"id": 926,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 922,
							"src": "288:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 929,
							"mutability": "constant",
							"name": "ERC20_INHIBITOR",
							"nameLocation": "1599:15:6",
							"nodeType": "VariableDeclaration",
							"scope": 1140,
							"src": "1582:42:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint128",
								"typeString": "uint128"
							},
							"typeName": {
								"id": 927,
								"name": "uint128",
								"nodeType": "ElementaryTypeName",
								"src": "1582:7:6",
								"typeDescriptions": {
									"typeIdentifier": "t_uint128",
									"typeString": "uint128"
								}
							},
							"value": {
								"hexValue": "31",
								"id": 928,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1617:7:6",
								"subdenomination": "ether",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1000000000000000000_by_1",
									"typeString": "int_const 1000000000000000000"
								},
								"value": "1"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 937,
							"mutability": "constant",
							"name": "ERC20_PURCHASABLE_RATE",
							"nameLocation": "1644:22:6",
							"nodeType": "VariableDeclaration",
							"scope": 1140,
							"src": "1627:69:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint128",
								"typeString": "uint128"
							},
							"typeName": {
								"id": 930,
								"name": "uint128",
								"nodeType": "ElementaryTypeName",
								"src": "1627:7:6",
								"typeDescriptions": {
									"typeIdentifier": "t_uint128",
									"typeString": "uint128"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_uint128",
									"typeString": "uint128"
								},
								"id": 936,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "31",
									"id": 931,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1669:7:6",
									"subdenomination": "ether",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_1000000000000000000_by_1",
										"typeString": "int_const 1000000000000000000"
									},
									"value": "1"
								},
								"nodeType": "BinaryOperation",
								"operator": "/",
								"rightExpression": {
									"arguments": [
										{
											"hexValue": "3234",
											"id": 934,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1687:8:6",
											"subdenomination": "hours",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_86400_by_1",
												"typeString": "int_const 86400"
											},
											"value": "24"
										}
									],
									"expression": {
										"argumentTypes": [
											{
												"typeIdentifier": "t_rational_86400_by_1",
												"typeString": "int_const 86400"
											}
										],
										"id": 933,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "ElementaryTypeNameExpression",
										"src": "1679:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_type$_t_uint128_$",
											"typeString": "type(uint128)"
										},
										"typeName": {
											"id": 932,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "1679:7:6",
											"typeDescriptions": {}
										}
									},
									"id": 935,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "typeConversion",
									"lValueRequested": false,
									"nameLocations": [],
									"names": [],
									"nodeType": "FunctionCall",
									"src": "1679:17:6",
									"tryCall": false,
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									}
								},
								"src": "1669:27:6",
								"typeDescriptions": {
									"typeIdentifier": "t_uint128",
									"typeString": "uint128"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 940,
							"mutability": "constant",
							"name": "NATIVE_INHIBITOR",
							"nameLocation": "1716:16:6",
							"nodeType": "VariableDeclaration",
							"scope": 1140,
							"src": "1699:44:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint128",
								"typeString": "uint128"
							},
							"typeName": {
								"id": 938,
								"name": "uint128",
								"nodeType": "ElementaryTypeName",
								"src": "1699:7:6",
								"typeDescriptions": {
									"typeIdentifier": "t_uint128",
									"typeString": "uint128"
								}
							},
							"value": {
								"hexValue": "2e31",
								"id": 939,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1735:8:6",
								"subdenomination": "ether",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_100000000000000000_by_1",
									"typeString": "int_const 100000000000000000"
								},
								"value": ".1"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 948,
							"mutability": "constant",
							"name": "NATIVE_PURCHASABLE_RATE",
							"nameLocation": "1763:23:6",
							"nodeType": "VariableDeclaration",
							"scope": 1140,
							"src": "1746:71:6",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint128",
								"typeString": "uint128"
							},
							"typeName": {
								"id": 941,
								"name": "uint128",
								"nodeType": "ElementaryTypeName",
								"src": "1746:7:6",
								"typeDescriptions": {
									"typeIdentifier": "t_uint128",
									"typeString": "uint128"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_uint128",
									"typeString": "uint128"
								},
								"id": 947,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "2e31",
									"id": 942,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1789:8:6",
									"subdenomination": "ether",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_100000000000000000_by_1",
										"typeString": "int_const 100000000000000000"
									},
									"value": ".1"
								},
								"nodeType": "BinaryOperation",
								"operator": "/",
								"rightExpression": {
									"arguments": [
										{
											"hexValue": "3234",
											"id": 945,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1808:8:6",
											"subdenomination": "hours",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_86400_by_1",
												"typeString": "int_const 86400"
											},
											"value": "24"
										}
									],
									"expression": {
										"argumentTypes": [
											{
												"typeIdentifier": "t_rational_86400_by_1",
												"typeString": "int_const 86400"
											}
										],
										"id": 944,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "ElementaryTypeNameExpression",
										"src": "1800:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_type$_t_uint128_$",
											"typeString": "type(uint128)"
										},
										"typeName": {
											"id": 943,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "1800:7:6",
											"typeDescriptions": {}
										}
									},
									"id": 946,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "typeConversion",
									"lValueRequested": false,
									"nameLocations": [],
									"names": [],
									"nodeType": "FunctionCall",
									"src": "1800:17:6",
									"tryCall": false,
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									}
								},
								"src": "1789:28:6",
								"typeDescriptions": {
									"typeIdentifier": "t_uint128",
									"typeString": "uint128"
								}
							},
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"id": 950,
											"name": "ERC20_INHIBITOR",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 929,
											"src": "1875:15:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										{
											"id": 951,
											"name": "ERC20_PURCHASABLE_RATE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 937,
											"src": "1891:22:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										{
											"id": 952,
											"name": "NATIVE_INHIBITOR",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 940,
											"src": "1914:16:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										{
											"id": 953,
											"name": "NATIVE_PURCHASABLE_RATE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 948,
											"src": "1931:23:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										}
									],
									"baseName": {
										"id": 949,
										"name": "ExchangeAbstract",
										"nameLocations": [
											"1858:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 921,
										"src": "1858:16:6"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "1858:97:6"
								},
								{
									"baseName": {
										"id": 955,
										"name": "ERC223",
										"nameLocations": [
											"1963:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1963:6:6"
									},
									"id": 956,
									"nodeType": "InheritanceSpecifier",
									"src": "1963:6:6"
								},
								{
									"baseName": {
										"id": 957,
										"name": "Ownable",
										"nameLocations": [
											"1977:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1977:7:6"
									},
									"id": 958,
									"nodeType": "InheritanceSpecifier",
									"src": "1977:7:6"
								}
							],
							"canonicalName": "PinusVault2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1139,
							"linearizedBaseContracts": [
								1139,
								147,
								177,
								777,
								741,
								921,
								1509
							],
							"name": "PinusVault2",
							"nameLocation": "1831:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 960,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2014:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "1996:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 959,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1996:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 962,
									"mutability": "immutable",
									"name": "_symbol",
									"nameLocation": "2044:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "2026:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 961,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2026:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "f172a4ce",
									"id": 964,
									"mutability": "immutable",
									"name": "nameHash",
									"nameLocation": "2085:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "2060:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 963,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2060:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "2211:161:6",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 979,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2222:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 984,
																		"name": "name_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "2255:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 982,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2238:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2242:12:6",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2238:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2238:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2230:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 980,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2230:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2230:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2222:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2222:40:6"
											},
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "nameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "2273:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 993,
																		"name": "name_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "2300:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2294:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 991,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2294:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 990,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2284:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2284:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2273:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "2273:34:6"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 998,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2320:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1003,
																		"name": "symbol_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "2355:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1001,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2338:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2342:12:6",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2338:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2338:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2330:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 999,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2330:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2330:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2320:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "2320:44:6"
											}
										]
									},
									"id": 1009,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 973,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 966,
													"src": "2185:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 974,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 972,
												"name": "Ownable",
												"nameLocations": [
													"2177:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2177:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2177:14:6"
										},
										{
											"arguments": [
												{
													"id": 976,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "2205:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PinusVault2_$1139",
														"typeString": "contract PinusVault2"
													}
												}
											],
											"id": 977,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 975,
												"name": "SwapAbstract",
												"nameLocations": [
													"2192:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1509,
												"src": "2192:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2192:18:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2126:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2118:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2147:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2133:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 967,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2133:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2168:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2154:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 969,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2154:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:59:6"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:0:6"
									},
									"scope": 1139,
									"src": "2106:266:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										475
									],
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "2457:34:6",
										"statements": [
											{
												"expression": {
													"id": 1015,
													"name": "nameHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 964,
													"src": "2475:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1016,
												"nodeType": "Return",
												"src": "2468:15:6"
											}
										]
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_constantNameHash",
									"nameLocation": "2389:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1011,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2423:8:6"
									},
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2406:2:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2449:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2441:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:16:6"
									},
									"scope": 1139,
									"src": "2380:111:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										328
									],
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "2559:57:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1028,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "2601:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1026,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2584:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2588:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2584:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2584:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2577:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1024,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2577:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2577:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1031,
												"nodeType": "Return",
												"src": "2570:38:6"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2508:4:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1020,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2527:8:6"
									},
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:2:6"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "2545:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1021,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:15:6"
									},
									"scope": 1139,
									"src": "2499:117:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										334
									],
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "2690:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1043,
																	"name": "_symbol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "2732:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1041,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2715:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2719:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2715:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2715:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2708:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1039,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2708:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1046,
												"nodeType": "Return",
												"src": "2701:40:6"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2637:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1035,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2658:8:6"
									},
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2643:2:6"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2676:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2676:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:15:6"
									},
									"scope": 1139,
									"src": "2628:121:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "2885:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1067,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "2924:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"id": 1063,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "2903:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2906:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1065,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "2917:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2903:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2903:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 1062,
												"id": 1069,
												"nodeType": "Return",
												"src": "2896:33:6"
											}
										]
									},
									"functionSelector": "10ab2d01",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1056,
												"name": "onlyOwner",
												"nameLocations": [
													"2827:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2827:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2827:9:6"
										}
									],
									"name": "customCall",
									"nameLocation": "2766:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2777:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2793:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2788:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2788:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2814:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2799:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2799:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2776:43:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2851:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2846:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2846:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "returnData",
												"nameLocation": "2873:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2860:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2860:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:39:6"
									},
									"scope": 1139,
									"src": "2757:180:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1180
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "3040:93:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1079,
																"name": "erc20sBuyable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "3058:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3058:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1081,
															"name": "nativesSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3076:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3058:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1083,
																	"name": "nativeSellInhibitor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "3091:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1084,
																	"name": "nativesSold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "3113:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3091:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1086,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3090:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3058:67:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1078,
												"id": 1088,
												"nodeType": "Return",
												"src": "3051:74:6"
											}
										]
									},
									"functionSelector": "7b383f18",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nativeToERC20Price",
									"nameLocation": "2954:18:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1075,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2998:8:6"
									},
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "nativesSold",
												"nameLocation": "2978:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2973:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2973:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2972:18:6"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "3026:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3021:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3021:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3020:19:6"
									},
									"scope": 1139,
									"src": "2945:188:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1194
									],
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "3215:138:6",
										"statements": [
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1098,
														"name": "erc20BuyableTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3246:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1099,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "3266:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1100,
															"name": "erc20BuyableRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "3275:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "3266:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3246:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "3246:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1105,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "3335:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "3338:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1104,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3329:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3329:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "3329:16:6"
											}
										]
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC20sBought",
									"nameLocation": "3150:21:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1096,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:6"
									},
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3180:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3172:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3189:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3184:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3184:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:25:6"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:6"
									},
									"scope": 1139,
									"src": "3141:212:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1203
									],
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "3469:162:6",
										"statements": [
											{
												"expression": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1120,
														"name": "nativesBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "3480:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1122,
																"name": "erc20sSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "3515:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1121,
															"name": "erc20ToNativePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																892
															],
															"referencedDeclaration": 892,
															"src": "3496:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:30:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3480:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "3480:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1127,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3543:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3547:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3543:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "3554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "3537:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3537:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "3537:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "3599:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "nativesBought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "3609:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1132,
														"name": "_transferNativesBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															920
														],
														"referencedDeclaration": 920,
														"src": "3576:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3576:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "3576:47:6"
											}
										]
									},
									"functionSelector": "b3841f26",
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapERC20ToNative",
									"nameLocation": "3370:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1116,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3431:8:6"
									},
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "3393:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3388:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3388:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3413:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3405:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:36:6"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "3454:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3449:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3449:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:20:6"
									},
									"scope": 1139,
									"src": "3361:270:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1140,
							"src": "1822:1816:6",
							"usedErrors": [
								13,
								18,
								239,
								242,
								245,
								248,
								251,
								254,
								257,
								260
							],
							"usedEvents": [
								24,
								269,
								278
							]
						}
					],
					"src": "46:3592:6"
				},
				"id": 6
			},
			"src/SwapAbstract.sol": {
				"ast": {
					"absolutePath": "src/SwapAbstract.sol",
					"exportedSymbols": {
						"ERC20": [
							741
						],
						"ERC223": [
							777
						],
						"IERC223Recipient": [
							233
						],
						"Permit2Sig": [
							1152
						],
						"SwapAbstract": [
							1509
						]
					},
					"id": 1510,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1141,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:7"
						},
						{
							"absolutePath": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
							"file": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
							"id": 1142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1510,
							"sourceUnit": 742,
							"src": "74:77:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/ERC223.sol",
							"file": "./ERC223.sol",
							"id": 1143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1510,
							"sourceUnit": 778,
							"src": "153:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "Permit2Sig",
							"id": 1152,
							"members": [
								{
									"constant": false,
									"id": 1145,
									"mutability": "mutable",
									"name": "deadline",
									"nameLocation": "209:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1152,
									"src": "204:13:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1144,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "204:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1147,
									"mutability": "mutable",
									"name": "v",
									"nameLocation": "230:1:7",
									"nodeType": "VariableDeclaration",
									"scope": 1152,
									"src": "224:7:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1146,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "224:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1149,
									"mutability": "mutable",
									"name": "r",
									"nameLocation": "246:1:7",
									"nodeType": "VariableDeclaration",
									"scope": 1152,
									"src": "238:9:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1148,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1151,
									"mutability": "mutable",
									"name": "s",
									"nameLocation": "262:1:7",
									"nodeType": "VariableDeclaration",
									"scope": 1152,
									"src": "254:9:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1150,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "254:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Permit2Sig",
							"nameLocation": "186:10:7",
							"nodeType": "StructDefinition",
							"scope": 1510,
							"src": "179:88:7",
							"visibility": "public"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "SwapAbstract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1509,
							"linearizedBaseContracts": [
								1509
							],
							"name": "SwapAbstract",
							"nameLocation": "349:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "38d52e0f",
									"id": 1155,
									"mutability": "immutable",
									"name": "asset",
									"nameLocation": "392:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1509,
									"src": "369:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$741",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1154,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1153,
											"name": "ERC20",
											"nameLocations": [
												"369:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 741,
											"src": "369:5:7"
										},
										"referencedDeclaration": 741,
										"src": "369:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$741",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "431:33:7",
										"statements": [
											{
												"expression": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1161,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "442:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$741",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1162,
														"name": "asset_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "450:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$741",
															"typeString": "contract ERC20"
														}
													},
													"src": "442:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$741",
														"typeString": "contract ERC20"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "442:14:7"
											}
										]
									},
									"id": 1166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "asset_",
												"nameLocation": "424:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "418:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$741",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 1157,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1156,
														"name": "ERC20",
														"nameLocations": [
															"418:5:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 741,
														"src": "418:5:7"
													},
													"referencedDeclaration": 741,
													"src": "418:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$741",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:14:7"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:0:7"
									},
									"scope": 1509,
									"src": "406:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"functionSelector": "4206abe9",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "erc20ToNativePrice",
									"nameLocation": "481:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "505:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "500:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "500:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:17:7"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "551:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "546:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "546:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:20:7"
									},
									"scope": 1509,
									"src": "472:94:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"functionSelector": "7b383f18",
									"id": 1180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nativeToERC20Price",
									"nameLocation": "581:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "nativesSold",
												"nameLocation": "605:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "600:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "600:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:18:7"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "652:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "647:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:19:7"
									},
									"scope": 1509,
									"src": "572:94:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNativesBought",
									"nameLocation": "740:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "771:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "763:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "780:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "775:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "775:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:32:7"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:7"
									},
									"scope": 1509,
									"src": "731:81:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 1194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_transferERC20sBought",
									"nameLocation": "873:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "903:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "895:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "912:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "907:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "907:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:31:7"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "942:0:7"
									},
									"scope": 1509,
									"src": "864:79:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"functionSelector": "b3841f26",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapERC20ToNative",
									"nameLocation": "1032:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "1055:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1050:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1050:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1075:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1067:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:29:7"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "1108:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1103:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1103:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:20:7"
									},
									"scope": 1509,
									"src": "1023:100:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "1219:113:7",
										"statements": [
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1210,
														"name": "erc20sBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "1230:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1212,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1264:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1268:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1264:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1211,
															"name": "nativeToERC20Price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "1245:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1245:29:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1230:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "1230:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1218,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "1307:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "erc20sBought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "1311:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "_transferERC20sBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "1285:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "1285:39:7"
											}
										]
									},
									"functionSelector": "12958a6b",
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapNativeToERC20",
									"nameLocation": "1146:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1172:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1164:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1163:12:7"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "1205:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1200:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1200:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:19:7"
									},
									"scope": 1509,
									"src": "1137:195:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "1850:210:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1235,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1888:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1892:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1888:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1239,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "1910:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$741",
																			"typeString": "contract ERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ERC20_$741",
																			"typeString": "contract ERC20"
																		}
																	],
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1902:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1237,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1902:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1902:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1888:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1880:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1880:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "1880:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1245,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "1990:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1247,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "2015:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1246,
																"name": "erc20ToNativePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1996:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1996:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "_transferNativesBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "1967:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "1967:55:7"
											},
											{
												"expression": {
													"hexValue": "30783839343365633032",
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2042:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2302929922_by_1",
														"typeString": "int_const 2302929922"
													},
													"value": "0x8943ec02"
												},
												"functionReturnParameters": 1233,
												"id": 1252,
												"nodeType": "Return",
												"src": "2035:17:7"
											}
										]
									},
									"functionSelector": "8943ec02",
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenReceived",
									"nameLocation": "1768:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1790:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1782:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1801:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1796:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1796:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1808:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1808:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1781:42:7"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1842:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1842:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:8:7"
									},
									"scope": 1509,
									"src": "1759:301:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "2178:67:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1262,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "2214:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1263,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2226:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2230:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2226:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1261,
														"name": "swapERC20ToNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1203,
															1268,
															1317
														],
														"referencedDeclaration": 1203,
														"src": "2196:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) returns (uint256)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1266,
												"nodeType": "Return",
												"src": "2189:48:7"
											}
										]
									},
									"functionSelector": "6032f600",
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapERC20ToNative",
									"nameLocation": "2107:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "2130:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2125:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2125:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:17:7"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "2163:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2158:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2158:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:20:7"
									},
									"scope": 1509,
									"src": "2098:147:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "2327:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2363:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2367:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2363:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1273,
														"name": "swapNativeToERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "2345:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2345:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1272,
												"id": 1277,
												"nodeType": "Return",
												"src": "2338:36:7"
											}
										]
									},
									"functionSelector": "223ecf7e",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapNativeToERC20",
									"nameLocation": "2262:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:2:7"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "2313:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2308:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:19:7"
									},
									"scope": 1509,
									"src": "2253:129:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "2537:156:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1294,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2561:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2565:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2561:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1298,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2581:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																		"typeString": "contract SwapAbstract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																		"typeString": "contract SwapAbstract"
																	}
																],
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2573:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1296,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2573:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1300,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "2588:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1301,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "2600:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Permit2Sig_$1152_calldata_ptr",
																	"typeString": "struct Permit2Sig calldata"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2604:8:7",
															"memberName": "deadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1145,
															"src": "2600:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1303,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "2614:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Permit2Sig_$1152_calldata_ptr",
																	"typeString": "struct Permit2Sig calldata"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2618:1:7",
															"memberName": "v",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "2614:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 1305,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "2621:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Permit2Sig_$1152_calldata_ptr",
																	"typeString": "struct Permit2Sig calldata"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2625:1:7",
															"memberName": "r",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1149,
															"src": "2621:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1307,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "2628:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Permit2Sig_$1152_calldata_ptr",
																	"typeString": "struct Permit2Sig calldata"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2632:1:7",
															"memberName": "s",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "2628:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1291,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2548:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2554:6:7",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 556,
														"src": "2548:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2548:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "2548:86:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "2670:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1313,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "2682:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1311,
														"name": "swapERC20ToNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1203,
															1268,
															1317
														],
														"referencedDeclaration": 1203,
														"src": "2652:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) returns (uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1315,
												"nodeType": "Return",
												"src": "2645:40:7"
											}
										]
									},
									"functionSelector": "94ef2103",
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapERC20ToNative",
									"nameLocation": "2429:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "2452:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2447:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2447:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2472:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2464:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "2496:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2476:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Permit2Sig_$1152_calldata_ptr",
													"typeString": "struct Permit2Sig"
												},
												"typeName": {
													"id": 1285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1284,
														"name": "Permit2Sig",
														"nameLocations": [
															"2476:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1152,
														"src": "2476:10:7"
													},
													"referencedDeclaration": 1152,
													"src": "2476:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Permit2Sig_$1152_storage_ptr",
														"typeString": "struct Permit2Sig"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:54:7"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "2522:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2517:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2517:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2516:20:7"
									},
									"scope": 1509,
									"src": "2420:273:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "2812:70:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "2848:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2859:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2863:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2859:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "2870:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Permit2Sig_$1152_calldata_ptr",
																"typeString": "struct Permit2Sig calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Permit2Sig_$1152_calldata_ptr",
																"typeString": "struct Permit2Sig calldata"
															}
														],
														"id": 1327,
														"name": "swapERC20ToNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1203,
															1268,
															1317
														],
														"referencedDeclaration": 1317,
														"src": "2830:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_struct$_Permit2Sig_$1152_calldata_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,struct Permit2Sig calldata) returns (uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2830:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1333,
												"nodeType": "Return",
												"src": "2823:51:7"
											}
										]
									},
									"functionSelector": "6263913c",
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapERC20ToNative",
									"nameLocation": "2714:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "2737:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2732:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2732:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "2769:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2749:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Permit2Sig_$1152_calldata_ptr",
													"typeString": "struct Permit2Sig"
												},
												"typeName": {
													"id": 1321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1320,
														"name": "Permit2Sig",
														"nameLocations": [
															"2749:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1152,
														"src": "2749:10:7"
													},
													"referencedDeclaration": 1152,
													"src": "2749:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Permit2Sig_$1152_storage_ptr",
														"typeString": "struct Permit2Sig"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:42:7"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "2797:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2792:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2792:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:20:7"
									},
									"scope": 1509,
									"src": "2705:177:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "3002:285:7",
										"statements": [
											{
												"assignments": [
													1348
												],
												"declarations": [
													{
														"constant": false,
														"id": 1348,
														"mutability": "mutable",
														"name": "startBalance",
														"nameLocation": "3018:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "3013:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1347,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3013:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1356,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1353,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3057:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																		"typeString": "contract SwapAbstract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																		"typeString": "contract SwapAbstract"
																	}
																],
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3049:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1351,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3049:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3049:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1349,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3033:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3039:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 361,
														"src": "3033:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3033:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3013:50:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1357,
																"name": "sa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "3076:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																	"typeString": "contract SwapAbstract"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3079:17:7",
															"memberName": "swapNativeToERC20",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1279,
															"src": "3076:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
																"typeString": "function () payable external returns (uint256)"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1360,
																"name": "nativesSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "3103:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3076:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
															"typeString": "function () payable external returns (uint256)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3076:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "3076:41:7"
											},
											{
												"expression": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1364,
														"name": "nativesEarned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "3130:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1370,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "3189:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																							"typeString": "contract SwapAbstract"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																							"typeString": "contract SwapAbstract"
																						}
																					],
																					"id": 1369,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3181:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1368,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3181:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3181:13:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1366,
																				"name": "asset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "3165:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$741",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3171:9:7",
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 361,
																			"src": "3165:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3165:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1373,
																		"name": "startBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "3198:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3165:45:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1365,
																"name": "erc20ToNativePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "3146:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3146:65:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1376,
															"name": "nativesSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "3214:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3146:79:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3130:95:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "3130:95:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1381,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "3261:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "nativesEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "3265:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1380,
														"name": "_transferNativesBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "3238:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3238:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "3238:41:7"
											}
										]
									},
									"functionSelector": "e5aca599",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapNativeToERC20",
									"nameLocation": "2899:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "sa",
												"nameLocation": "2930:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2917:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_SwapAbstract_$1509",
													"typeString": "contract SwapAbstract"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "SwapAbstract",
														"nameLocations": [
															"2917:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1509,
														"src": "2917:12:7"
													},
													"referencedDeclaration": 1509,
													"src": "2917:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_SwapAbstract_$1509",
														"typeString": "contract SwapAbstract"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "nativesSold",
												"nameLocation": "2939:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2934:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2934:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2960:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2952:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2916:47:7"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "nativesEarned",
												"nameLocation": "2987:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2982:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2982:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2981:20:7"
									},
									"scope": 1509,
									"src": "2890:397:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "3405:431:7",
										"statements": [
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "startBalance",
														"nameLocation": "3421:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "3416:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3416:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1405,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1402,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3444:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																	"typeString": "contract SwapAbstract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																	"typeString": "contract SwapAbstract"
																}
															],
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3436:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1400,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3436:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3436:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3450:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3436:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3416:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1408,
																"name": "sa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "3481:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																	"typeString": "contract SwapAbstract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																	"typeString": "contract SwapAbstract"
																}
															],
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3473:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1406,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3473:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3473:11:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1412,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "3496:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$741",
																	"typeString": "contract ERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ERC20_$741",
																	"typeString": "contract ERC20"
																}
															],
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3488:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3488:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3488:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3473:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1426,
												"nodeType": "IfStatement",
												"src": "3470:165:7",
												"trueBody": {
													"id": 1425,
													"nodeType": "Block",
													"src": "3504:131:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1420,
																				"name": "sa",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1389,
																				"src": "3608:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																					"typeString": "contract SwapAbstract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																					"typeString": "contract SwapAbstract"
																				}
																			],
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3600:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1418,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3600:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3600:11:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1422,
																		"name": "erc20sSold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1391,
																		"src": "3612:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1415,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "3586:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$741",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3592:7:7",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 406,
																	"src": "3586:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3586:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1424,
															"nodeType": "ExpressionStatement",
															"src": "3586:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1430,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3668:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1427,
															"name": "sa",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "3647:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																"typeString": "contract SwapAbstract"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:17:7",
														"memberName": "swapERC20ToNative",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "3647:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) external returns (uint256)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3647:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "3647:32:7"
											},
											{
												"expression": {
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1433,
														"name": "erc20sEarned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "3692:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 1437,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3734:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																						"typeString": "contract SwapAbstract"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																						"typeString": "contract SwapAbstract"
																					}
																				],
																				"id": 1436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3726:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1435,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3726:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3726:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3740:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3726:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1440,
																		"name": "startBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "3750:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3726:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1434,
																"name": "nativeToERC20Price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "3707:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3707:56:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1443,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3766:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3707:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3692:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "3692:84:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "3811:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1449,
															"name": "erc20sEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "3815:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1447,
														"name": "_transferERC20sBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "3789:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3789:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "3789:39:7"
											}
										]
									},
									"functionSelector": "17b31167",
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapERC20ToNative",
									"nameLocation": "3304:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "sa",
												"nameLocation": "3335:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3322:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_SwapAbstract_$1509",
													"typeString": "contract SwapAbstract"
												},
												"typeName": {
													"id": 1388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1387,
														"name": "SwapAbstract",
														"nameLocations": [
															"3322:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1509,
														"src": "3322:12:7"
													},
													"referencedDeclaration": 1509,
													"src": "3322:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_SwapAbstract_$1509",
														"typeString": "contract SwapAbstract"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "3344:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3339:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3339:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3364:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3356:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3356:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3321:46:7"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "erc20sEarned",
												"nameLocation": "3391:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3386:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3386:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:19:7"
									},
									"scope": 1509,
									"src": "3295:541:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "4085:280:7",
										"statements": [
											{
												"assignments": [
													1466
												],
												"declarations": [
													{
														"constant": false,
														"id": 1466,
														"mutability": "mutable",
														"name": "startBalance",
														"nameLocation": "4101:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "4096:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1465,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4096:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1469,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4124:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																	"typeString": "contract SwapAbstract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																	"typeString": "contract SwapAbstract"
																}
															],
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4116:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4116:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4116:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4130:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4116:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4096:41:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1482,
																	"name": "sa",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "4190:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																		"typeString": "contract SwapAbstract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																		"typeString": "contract SwapAbstract"
																	}
																],
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4182:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1480,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4182:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4182:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "4194:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4205:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1476,
																			"name": "asset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "4165:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$741",
																				"typeString": "contract ERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ERC20_$741",
																				"typeString": "contract ERC20"
																			}
																		],
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4157:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1474,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4157:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4157:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1473,
																"name": "ERC223",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "4150:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC223_$777_$",
																	"typeString": "type(contract ERC223)"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4150:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC223_$777",
																"typeString": "contract ERC223"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4173:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 776,
														"src": "4150:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bool)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4150:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "4150:58:7"
											},
											{
												"expression": {
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1488,
														"name": "erc20sEarned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "4221:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 1492,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "4263:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																						"typeString": "contract SwapAbstract"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_SwapAbstract_$1509",
																						"typeString": "contract SwapAbstract"
																					}
																				],
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4255:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1490,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4255:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4255:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4269:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "4255:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1495,
																		"name": "startBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "4279:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4255:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1489,
																"name": "nativeToERC20Price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "4236:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4236:56:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1498,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "4295:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4236:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4221:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "4221:84:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "4340:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "erc20sEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "4344:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "_transferERC20sBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "4318:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4318:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "4318:39:7"
											}
										]
									},
									"functionSelector": "af4fc206",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapERC223ToNative",
									"nameLocation": "3983:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "sa",
												"nameLocation": "4015:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "4002:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_SwapAbstract_$1509",
													"typeString": "contract SwapAbstract"
												},
												"typeName": {
													"id": 1455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1454,
														"name": "SwapAbstract",
														"nameLocations": [
															"4002:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1509,
														"src": "4002:12:7"
													},
													"referencedDeclaration": 1509,
													"src": "4002:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_SwapAbstract_$1509",
														"typeString": "contract SwapAbstract"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "4024:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "4019:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4019:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4044:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "4036:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4001:46:7"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "erc20sEarned",
												"nameLocation": "4071:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "4066:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4066:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4065:19:7"
									},
									"scope": 1509,
									"src": "3974:391:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1510,
							"src": "331:4037:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:4322:7"
				},
				"id": 7
			}
		}
	}
}