{
	"id": "4211e3e816fa7127b22867da6908922c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Test.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\"; //120k gas\r\n//import \"https://github.com/Vectorized/solady/blob/main/src/auth/Ownable.sol\";\r\nimport \"./SwapAbstract.sol\";\r\n\r\ncontract Test is Ownable, SwapAbstract {\r\n\r\n    constructor(address owner) Ownable(owner) SwapAbstract(ERC20(address(this))) {\r\n    }\r\n\r\n    function getERC20ToNativePrice(uint erc20sSold) public override view returns (uint nativesBought) {\r\n        return 0;\r\n    }\r\n    function getNativeToERC20Price(uint nativesSold) public override view returns (uint erc20sBought) {\r\n        return 0;\r\n    }\r\n    function erc20ToNativeSwap(uint erc20sSold, address recipient) public override returns (uint nativesBought) {\r\n        return 0;\r\n    }\r\n    function nativeToERC20Swap(address recipient) public override payable returns (uint erc20sBought) {\r\n        return 0;\r\n    }\r\n}"
			},
			"src/SwapAbstract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.28;\r\n\r\nimport \"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\";\r\n\r\nstruct Permit2Sig {\r\n    uint deadline;\r\n    uint8 v;\r\n    bytes32 r;\r\n    bytes32 s;\r\n}\r\n\r\nabstract contract SwapAbstract {\r\n    ERC20 public immutable asset;\r\n\r\n    constructor(ERC20 asset_){\r\n        asset = asset_;\r\n    }\r\n\r\n    function getERC20ToNativePrice(uint erc20sSold) public virtual view returns (uint nativesBought);\r\n    function getNativeToERC20Price(uint nativesSold) public virtual view returns (uint erc20sBought);\r\n    function erc20ToNativeSwap(uint erc20sSold, address recipient) public virtual returns (uint nativesBought);\r\n    function nativeToERC20Swap(address recipient) public virtual payable returns (uint erc20sBought);\r\n\r\n    function erc20ToNativeSwap(uint erc20sSold) public returns (uint nativesBought) {\r\n        return erc20ToNativeSwap(erc20sSold, msg.sender);\r\n    }\r\n\r\n    function erc20ToNativeSwap(uint erc20sSold, address recipient, Permit2Sig calldata sig) public returns (uint nativesBought) {\r\n        asset.permit(msg.sender, address(this), erc20sSold, sig.deadline, sig.v, sig.r, sig.s);\r\n        return erc20ToNativeSwap(erc20sSold, recipient);\r\n    }\r\n    \r\n    function erc20ToNativeSwap(uint erc20sSold, Permit2Sig calldata sig) external returns (uint nativesBought) {\r\n        return erc20ToNativeSwap(erc20sSold,msg.sender,sig);\r\n    }\r\n    \r\n    function nativeToERC20Swap() external payable returns (uint erc20sBought) {\r\n        return nativeToERC20Swap(msg.sender);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Simple ERC20 + EIP-2612 implementation.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\n///\n/// @dev Note:\n/// - The ERC20 standard allows minting and transferring to and from the zero address,\n///   minting and transferring zero tokens, as well as self-approvals.\n///   For performance, this implementation WILL NOT revert for such actions.\n///   Please add any checks with overrides if desired.\n/// - The `permit` function uses the ecrecover precompile (0x1).\n///\n/// If you are overriding:\n/// - NEVER violate the ERC20 invariant:\n///   the total sum of all balances must be equal to `totalSupply()`.\n/// - Check that the overridden function is actually used in the function you want to\n///   change the behavior of. Much of the code has been manually inlined for performance.\nabstract contract ERC20 {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The total supply has overflowed.\n    error TotalSupplyOverflow();\n\n    /// @dev The allowance has overflowed.\n    error AllowanceOverflow();\n\n    /// @dev The allowance has underflowed.\n    error AllowanceUnderflow();\n\n    /// @dev Insufficient balance.\n    error InsufficientBalance();\n\n    /// @dev Insufficient allowance.\n    error InsufficientAllowance();\n\n    /// @dev The permit is invalid.\n    error InvalidPermit();\n\n    /// @dev The permit has expired.\n    error PermitExpired();\n\n    /// @dev The allowance of Permit2 is fixed at infinity.\n    error Permit2AllowanceIsFixedAtInfinity();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           EVENTS                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Emitted when `amount` tokens is transferred from `from` to `to`.\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /// @dev `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    uint256 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    /// @dev `keccak256(bytes(\"Approval(address,address,uint256)\"))`.\n    uint256 private constant _APPROVAL_EVENT_SIGNATURE =\n        0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          STORAGE                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The storage slot for the total supply.\n    uint256 private constant _TOTAL_SUPPLY_SLOT = 0x05345cdf77eb68f44c;\n\n    /// @dev The balance slot of `owner` is given by:\n    /// ```\n    ///     mstore(0x0c, _BALANCE_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let balanceSlot := keccak256(0x0c, 0x20)\n    /// ```\n    uint256 private constant _BALANCE_SLOT_SEED = 0x87a211a2;\n\n    /// @dev The allowance slot of (`owner`, `spender`) is given by:\n    /// ```\n    ///     mstore(0x20, spender)\n    ///     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let allowanceSlot := keccak256(0x0c, 0x34)\n    /// ```\n    uint256 private constant _ALLOWANCE_SLOT_SEED = 0x7f5e9f20;\n\n    /// @dev The nonce slot of `owner` is given by:\n    /// ```\n    ///     mstore(0x0c, _NONCES_SLOT_SEED)\n    ///     mstore(0x00, owner)\n    ///     let nonceSlot := keccak256(0x0c, 0x20)\n    /// ```\n    uint256 private constant _NONCES_SLOT_SEED = 0x38377508;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev `(_NONCES_SLOT_SEED << 16) | 0x1901`.\n    uint256 private constant _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX = 0x383775081901;\n\n    /// @dev `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`.\n    bytes32 private constant _DOMAIN_TYPEHASH =\n        0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f;\n\n    /// @dev `keccak256(\"1\")`.\n    /// If you need to use a different version, override `_versionHash`.\n    bytes32 private constant _DEFAULT_VERSION_HASH =\n        0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6;\n\n    /// @dev `keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`.\n    bytes32 private constant _PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    /// @dev The canonical Permit2 address.\n    /// For signature-based allowance granting for single transaction ERC20 `transferFrom`.\n    /// To enable, override `_givePermit2InfiniteAllowance()`.\n    /// [Github](https://github.com/Uniswap/permit2)\n    /// [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\n    address internal constant _PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       ERC20 METADATA                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the name of the token.\n    function name() public view virtual returns (string memory);\n\n    /// @dev Returns the symbol of the token.\n    function symbol() public view virtual returns (string memory);\n\n    /// @dev Returns the decimals places of the token.\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           ERC20                            */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the amount of tokens in existence.\n    function totalSupply() public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := sload(_TOTAL_SUPPLY_SLOT)\n        }\n    }\n\n    /// @dev Returns the amount of tokens owned by `owner`.\n    function balanceOf(address owner) public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /// @dev Returns the amount of tokens that `spender` can spend on behalf of `owner`.\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        returns (uint256 result)\n    {\n        if (_givePermit2InfiniteAllowance()) {\n            if (spender == _PERMIT2) return type(uint256).max;\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x34))\n        }\n    }\n\n    /// @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n    ///\n    /// Emits a {Approval} event.\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        if (_givePermit2InfiniteAllowance()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                // If `spender == _PERMIT2 && amount != type(uint256).max`.\n                if iszero(or(xor(shr(96, shl(96, spender)), _PERMIT2), iszero(not(amount)))) {\n                    mstore(0x00, 0x3f68539a) // `Permit2AllowanceIsFixedAtInfinity()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and store the amount.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            sstore(keccak256(0x0c, 0x34), amount)\n            // Emit the {Approval} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, caller(), shr(96, mload(0x2c)))\n        }\n        return true;\n    }\n\n    /// @dev Transfer `amount` tokens from the caller to `to`.\n    ///\n    /// Requirements:\n    /// - `from` must at least have `amount`.\n    ///\n    /// Emits a {Transfer} event.\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        _beforeTokenTransfer(msg.sender, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, caller())\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, caller(), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(msg.sender, to, amount);\n        return true;\n    }\n\n    /// @dev Transfers `amount` tokens from `from` to `to`.\n    ///\n    /// Note: Does not update the allowance if it is the maximum uint256 value.\n    ///\n    /// Requirements:\n    /// - `from` must at least have `amount`.\n    /// - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\n    ///\n    /// Emits a {Transfer} event.\n    function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {\n        _beforeTokenTransfer(from, to, amount);\n        // Code duplication is for zero-cost abstraction if possible.\n        if (_givePermit2InfiniteAllowance()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                let from_ := shl(96, from)\n                if iszero(eq(caller(), _PERMIT2)) {\n                    // Compute the allowance slot and load its value.\n                    mstore(0x20, caller())\n                    mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED))\n                    let allowanceSlot := keccak256(0x0c, 0x34)\n                    let allowance_ := sload(allowanceSlot)\n                    // If the allowance is not the maximum uint256 value.\n                    if not(allowance_) {\n                        // Revert if the amount to be transferred exceeds the allowance.\n                        if gt(amount, allowance_) {\n                            mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                            revert(0x1c, 0x04)\n                        }\n                        // Subtract and store the updated allowance.\n                        sstore(allowanceSlot, sub(allowance_, amount))\n                    }\n                }\n                // Compute the balance slot and load its value.\n                mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n                let fromBalanceSlot := keccak256(0x0c, 0x20)\n                let fromBalance := sload(fromBalanceSlot)\n                // Revert if insufficient balance.\n                if gt(amount, fromBalance) {\n                    mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated balance.\n                sstore(fromBalanceSlot, sub(fromBalance, amount))\n                // Compute the balance slot of `to`.\n                mstore(0x00, to)\n                let toBalanceSlot := keccak256(0x0c, 0x20)\n                // Add and store the updated balance of `to`.\n                // Will not overflow because the sum of all user balances\n                // cannot exceed the maximum uint256 value.\n                sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n                // Emit the {Transfer} event.\n                mstore(0x20, amount)\n                log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n            }\n        } else {\n            /// @solidity memory-safe-assembly\n            assembly {\n                let from_ := shl(96, from)\n                // Compute the allowance slot and load its value.\n                mstore(0x20, caller())\n                mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED))\n                let allowanceSlot := keccak256(0x0c, 0x34)\n                let allowance_ := sload(allowanceSlot)\n                // If the allowance is not the maximum uint256 value.\n                if not(allowance_) {\n                    // Revert if the amount to be transferred exceeds the allowance.\n                    if gt(amount, allowance_) {\n                        mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                        revert(0x1c, 0x04)\n                    }\n                    // Subtract and store the updated allowance.\n                    sstore(allowanceSlot, sub(allowance_, amount))\n                }\n                // Compute the balance slot and load its value.\n                mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n                let fromBalanceSlot := keccak256(0x0c, 0x20)\n                let fromBalance := sload(fromBalanceSlot)\n                // Revert if insufficient balance.\n                if gt(amount, fromBalance) {\n                    mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated balance.\n                sstore(fromBalanceSlot, sub(fromBalance, amount))\n                // Compute the balance slot of `to`.\n                mstore(0x00, to)\n                let toBalanceSlot := keccak256(0x0c, 0x20)\n                // Add and store the updated balance of `to`.\n                // Will not overflow because the sum of all user balances\n                // cannot exceed the maximum uint256 value.\n                sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n                // Emit the {Transfer} event.\n                mstore(0x20, amount)\n                log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n            }\n        }\n        _afterTokenTransfer(from, to, amount);\n        return true;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          EIP-2612                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev For more performance, override to return the constant value\n    /// of `keccak256(bytes(name()))` if `name()` will never change.\n    function _constantNameHash() internal view virtual returns (bytes32 result) {}\n\n    /// @dev If you need a different value, override this function.\n    function _versionHash() internal view virtual returns (bytes32 result) {\n        result = _DEFAULT_VERSION_HASH;\n    }\n\n    /// @dev For inheriting contracts to increment the nonce.\n    function _incrementNonce(address owner) internal virtual {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x0c, _NONCES_SLOT_SEED)\n            mstore(0x00, owner)\n            let nonceSlot := keccak256(0x0c, 0x20)\n            sstore(nonceSlot, add(1, sload(nonceSlot)))\n        }\n    }\n\n    /// @dev Returns the current nonce for `owner`.\n    /// This value is used to compute the signature for EIP-2612 permit.\n    function nonces(address owner) public view virtual returns (uint256 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the nonce slot and load its value.\n            mstore(0x0c, _NONCES_SLOT_SEED)\n            mstore(0x00, owner)\n            result := sload(keccak256(0x0c, 0x20))\n        }\n    }\n\n    /// @dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\n    /// authorized by a signed approval by `owner`.\n    ///\n    /// Emits a {Approval} event.\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (_givePermit2InfiniteAllowance()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                // If `spender == _PERMIT2 && value != type(uint256).max`.\n                if iszero(or(xor(shr(96, shl(96, spender)), _PERMIT2), iszero(not(value)))) {\n                    mstore(0x00, 0x3f68539a) // `Permit2AllowanceIsFixedAtInfinity()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n        }\n        bytes32 nameHash = _constantNameHash();\n        //  We simply calculate it on-the-fly to allow for cases where the `name` may change.\n        if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name()));\n        bytes32 versionHash = _versionHash();\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Revert if the block timestamp is greater than `deadline`.\n            if gt(timestamp(), deadline) {\n                mstore(0x00, 0x1a15a3cc) // `PermitExpired()`.\n                revert(0x1c, 0x04)\n            }\n            let m := mload(0x40) // Grab the free memory pointer.\n            // Clean the upper 96 bits.\n            owner := shr(96, shl(96, owner))\n            spender := shr(96, shl(96, spender))\n            // Compute the nonce slot and load its value.\n            mstore(0x0e, _NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX)\n            mstore(0x00, owner)\n            let nonceSlot := keccak256(0x0c, 0x20)\n            let nonceValue := sload(nonceSlot)\n            // Prepare the domain separator.\n            mstore(m, _DOMAIN_TYPEHASH)\n            mstore(add(m, 0x20), nameHash)\n            mstore(add(m, 0x40), versionHash)\n            mstore(add(m, 0x60), chainid())\n            mstore(add(m, 0x80), address())\n            mstore(0x2e, keccak256(m, 0xa0))\n            // Prepare the struct hash.\n            mstore(m, _PERMIT_TYPEHASH)\n            mstore(add(m, 0x20), owner)\n            mstore(add(m, 0x40), spender)\n            mstore(add(m, 0x60), value)\n            mstore(add(m, 0x80), nonceValue)\n            mstore(add(m, 0xa0), deadline)\n            mstore(0x4e, keccak256(m, 0xc0))\n            // Prepare the ecrecover calldata.\n            mstore(0x00, keccak256(0x2c, 0x42))\n            mstore(0x20, and(0xff, v))\n            mstore(0x40, r)\n            mstore(0x60, s)\n            let t := staticcall(gas(), 1, 0x00, 0x80, 0x20, 0x20)\n            // If the ecrecover fails, the returndatasize will be 0x00,\n            // `owner` will be checked if it equals the hash at 0x00,\n            // which evaluates to false (i.e. 0), and we will revert.\n            // If the ecrecover succeeds, the returndatasize will be 0x20,\n            // `owner` will be compared against the returned address at 0x20.\n            if iszero(eq(mload(returndatasize()), owner)) {\n                mstore(0x00, 0xddafbaef) // `InvalidPermit()`.\n                revert(0x1c, 0x04)\n            }\n            // Increment and store the updated nonce.\n            sstore(nonceSlot, add(nonceValue, t)) // `t` is 1 if ecrecover succeeds.\n            // Compute the allowance slot and store the value.\n            // The `owner` is already at slot 0x20.\n            mstore(0x40, or(shl(160, _ALLOWANCE_SLOT_SEED), spender))\n            sstore(keccak256(0x2c, 0x34), value)\n            // Emit the {Approval} event.\n            log3(add(m, 0x60), 0x20, _APPROVAL_EVENT_SIGNATURE, owner, spender)\n            mstore(0x40, m) // Restore the free memory pointer.\n            mstore(0x60, 0) // Restore the zero pointer.\n        }\n    }\n\n    /// @dev Returns the EIP-712 domain separator for the EIP-2612 permit.\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {\n        bytes32 nameHash = _constantNameHash();\n        //  We simply calculate it on-the-fly to allow for cases where the `name` may change.\n        if (nameHash == bytes32(0)) nameHash = keccak256(bytes(name()));\n        bytes32 versionHash = _versionHash();\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Grab the free memory pointer.\n            mstore(m, _DOMAIN_TYPEHASH)\n            mstore(add(m, 0x20), nameHash)\n            mstore(add(m, 0x40), versionHash)\n            mstore(add(m, 0x60), chainid())\n            mstore(add(m, 0x80), address())\n            result := keccak256(m, 0xa0)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  INTERNAL MINT FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Mints `amount` tokens to `to`, increasing the total supply.\n    ///\n    /// Emits a {Transfer} event.\n    function _mint(address to, uint256 amount) internal virtual {\n        _beforeTokenTransfer(address(0), to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let totalSupplyBefore := sload(_TOTAL_SUPPLY_SLOT)\n            let totalSupplyAfter := add(totalSupplyBefore, amount)\n            // Revert if the total supply overflows.\n            if lt(totalSupplyAfter, totalSupplyBefore) {\n                mstore(0x00, 0xe5cfe957) // `TotalSupplyOverflow()`.\n                revert(0x1c, 0x04)\n            }\n            // Store the updated total supply.\n            sstore(_TOTAL_SUPPLY_SLOT, totalSupplyAfter)\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, 0, shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(address(0), to, amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  INTERNAL BURN FUNCTIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Burns `amount` tokens from `from`, reducing the total supply.\n    ///\n    /// Emits a {Transfer} event.\n    function _burn(address from, uint256 amount) internal virtual {\n        _beforeTokenTransfer(from, address(0), amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the balance slot and load its value.\n            mstore(0x0c, _BALANCE_SLOT_SEED)\n            mstore(0x00, from)\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Subtract and store the updated total supply.\n            sstore(_TOTAL_SUPPLY_SLOT, sub(sload(_TOTAL_SUPPLY_SLOT), amount))\n            // Emit the {Transfer} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, shl(96, from)), 0)\n        }\n        _afterTokenTransfer(from, address(0), amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                INTERNAL TRANSFER FUNCTIONS                 */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Moves `amount` of tokens from `from` to `to`.\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        _beforeTokenTransfer(from, to, amount);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let from_ := shl(96, from)\n            // Compute the balance slot and load its value.\n            mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\n            let fromBalance := sload(fromBalanceSlot)\n            // Revert if insufficient balance.\n            if gt(amount, fromBalance) {\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\n                revert(0x1c, 0x04)\n            }\n            // Subtract and store the updated balance.\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\n            // Compute the balance slot of `to`.\n            mstore(0x00, to)\n            let toBalanceSlot := keccak256(0x0c, 0x20)\n            // Add and store the updated balance of `to`.\n            // Will not overflow because the sum of all user balances\n            // cannot exceed the maximum uint256 value.\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\n            // Emit the {Transfer} event.\n            mstore(0x20, amount)\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, shr(96, from_), shr(96, mload(0x0c)))\n        }\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                INTERNAL ALLOWANCE FUNCTIONS                */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Updates the allowance of `owner` for `spender` based on spent `amount`.\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        if (_givePermit2InfiniteAllowance()) {\n            if (spender == _PERMIT2) return; // Do nothing, as allowance is infinite.\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the allowance slot and load its value.\n            mstore(0x20, spender)\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n            mstore(0x00, owner)\n            let allowanceSlot := keccak256(0x0c, 0x34)\n            let allowance_ := sload(allowanceSlot)\n            // If the allowance is not the maximum uint256 value.\n            if not(allowance_) {\n                // Revert if the amount to be transferred exceeds the allowance.\n                if gt(amount, allowance_) {\n                    mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\n                    revert(0x1c, 0x04)\n                }\n                // Subtract and store the updated allowance.\n                sstore(allowanceSlot, sub(allowance_, amount))\n            }\n        }\n    }\n\n    /// @dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\n    ///\n    /// Emits a {Approval} event.\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        if (_givePermit2InfiniteAllowance()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                // If `spender == _PERMIT2 && amount != type(uint256).max`.\n                if iszero(or(xor(shr(96, shl(96, spender)), _PERMIT2), iszero(not(amount)))) {\n                    mstore(0x00, 0x3f68539a) // `Permit2AllowanceIsFixedAtInfinity()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            let owner_ := shl(96, owner)\n            // Compute the allowance slot and store the amount.\n            mstore(0x20, spender)\n            mstore(0x0c, or(owner_, _ALLOWANCE_SLOT_SEED))\n            sstore(keccak256(0x0c, 0x34), amount)\n            // Emit the {Approval} event.\n            mstore(0x00, amount)\n            log3(0x00, 0x20, _APPROVAL_EVENT_SIGNATURE, shr(96, owner_), shr(96, mload(0x2c)))\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     HOOKS TO OVERRIDE                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Hook that is called before any transfer of tokens.\n    /// This includes minting and burning.\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /// @dev Hook that is called after any transfer of tokens.\n    /// This includes minting and burning.\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          PERMIT2                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns whether to fix the Permit2 contract's allowance at infinity.\n    ///\n    /// This value should be kept constant after contract initialization,\n    /// or else the actual allowance values may not match with the {Approval} events.\n    /// For best performance, return a compile-time constant for zero-cost abstraction.\n    function _givePermit2InfiniteAllowance() internal view virtual returns (bool) {\n        return false;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"name": "AllowanceOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AllowanceUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPermit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Permit2AllowanceIsFixedAtInfinity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PermitExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TotalSupplyOverflow",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)",
						"details": "Note: - The ERC20 standard allows minting and transferring to and from the zero address,   minting and transferring zero tokens, as well as self-approvals.   For performance, this implementation WILL NOT revert for such actions.   Please add any checks with overrides if desired. - The `permit` function uses the ecrecover precompile (0x1). If you are overriding: - NEVER violate the ERC20 invariant:   the total sum of all balances must be equal to `totalSupply()`. - Check that the overridden function is actually used in the function you want to   change the behavior of. Much of the code has been manually inlined for performance.",
						"errors": {
							"AllowanceOverflow()": [
								{
									"details": "The allowance has overflowed."
								}
							],
							"AllowanceUnderflow()": [
								{
									"details": "The allowance has underflowed."
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Insufficient allowance."
								}
							],
							"InsufficientBalance()": [
								{
									"details": "Insufficient balance."
								}
							],
							"InvalidPermit()": [
								{
									"details": "The permit is invalid."
								}
							],
							"Permit2AllowanceIsFixedAtInfinity()": [
								{
									"details": "The allowance of Permit2 is fixed at infinity."
								}
							],
							"PermitExpired()": [
								{
									"details": "The permit has expired."
								}
							],
							"TotalSupplyOverflow()": [
								{
									"details": "The total supply has overflowed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `amount` tokens is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the EIP-712 domain separator for the EIP-2612 permit."
							},
							"allowance(address,address)": {
								"details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `owner`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
							}
						},
						"stateVariables": {
							"_ALLOWANCE_SLOT_SEED": {
								"details": "The allowance slot of (`owner`, `spender`) is given by: ```     mstore(0x20, spender)     mstore(0x0c, _ALLOWANCE_SLOT_SEED)     mstore(0x00, owner)     let allowanceSlot := keccak256(0x0c, 0x34) ```"
							},
							"_APPROVAL_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Approval(address,address,uint256)\"))`."
							},
							"_BALANCE_SLOT_SEED": {
								"details": "The balance slot of `owner` is given by: ```     mstore(0x0c, _BALANCE_SLOT_SEED)     mstore(0x00, owner)     let balanceSlot := keccak256(0x0c, 0x20) ```"
							},
							"_DEFAULT_VERSION_HASH": {
								"details": "`keccak256(\"1\")`. If you need to use a different version, override `_versionHash`."
							},
							"_DOMAIN_TYPEHASH": {
								"details": "`keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`."
							},
							"_NONCES_SLOT_SEED": {
								"details": "The nonce slot of `owner` is given by: ```     mstore(0x0c, _NONCES_SLOT_SEED)     mstore(0x00, owner)     let nonceSlot := keccak256(0x0c, 0x20) ```"
							},
							"_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX": {
								"details": "`(_NONCES_SLOT_SEED << 16) | 0x1901`."
							},
							"_PERMIT2": {
								"details": "The canonical Permit2 address. For signature-based allowance granting for single transaction ERC20 `transferFrom`. To enable, override `_givePermit2InfiniteAllowance()`. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)"
							},
							"_PERMIT_TYPEHASH": {
								"details": "`keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`."
							},
							"_TOTAL_SUPPLY_SLOT": {
								"details": "The storage slot for the total supply."
							},
							"_TRANSFER_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Transfer(address,address,uint256)\"))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2AllowanceIsFixedAtInfinity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\",\"details\":\"Note: - The ERC20 standard allows minting and transferring to and from the zero address,   minting and transferring zero tokens, as well as self-approvals.   For performance, this implementation WILL NOT revert for such actions.   Please add any checks with overrides if desired. - The `permit` function uses the ecrecover precompile (0x1). If you are overriding: - NEVER violate the ERC20 invariant:   the total sum of all balances must be equal to `totalSupply()`. - Check that the overridden function is actually used in the function you want to   change the behavior of. Much of the code has been manually inlined for performance.\",\"errors\":{\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"Permit2AllowanceIsFixedAtInfinity()\":[{\"details\":\"The allowance of Permit2 is fixed at infinity.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-712 domain separator for the EIP-2612 permit.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"}},\"stateVariables\":{\"_ALLOWANCE_SLOT_SEED\":{\"details\":\"The allowance slot of (`owner`, `spender`) is given by: ```     mstore(0x20, spender)     mstore(0x0c, _ALLOWANCE_SLOT_SEED)     mstore(0x00, owner)     let allowanceSlot := keccak256(0x0c, 0x34) ```\"},\"_APPROVAL_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Approval(address,address,uint256)\\\"))`.\"},\"_BALANCE_SLOT_SEED\":{\"details\":\"The balance slot of `owner` is given by: ```     mstore(0x0c, _BALANCE_SLOT_SEED)     mstore(0x00, owner)     let balanceSlot := keccak256(0x0c, 0x20) ```\"},\"_DEFAULT_VERSION_HASH\":{\"details\":\"`keccak256(\\\"1\\\")`. If you need to use a different version, override `_versionHash`.\"},\"_DOMAIN_TYPEHASH\":{\"details\":\"`keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")`.\"},\"_NONCES_SLOT_SEED\":{\"details\":\"The nonce slot of `owner` is given by: ```     mstore(0x0c, _NONCES_SLOT_SEED)     mstore(0x00, owner)     let nonceSlot := keccak256(0x0c, 0x20) ```\"},\"_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX\":{\"details\":\"`(_NONCES_SLOT_SEED << 16) | 0x1901`.\"},\"_PERMIT2\":{\"details\":\"The canonical Permit2 address. For signature-based allowance granting for single transaction ERC20 `transferFrom`. To enable, override `_givePermit2InfiniteAllowance()`. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\"},\"_PERMIT_TYPEHASH\":{\"details\":\"`keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")`.\"},\"_TOTAL_SUPPLY_SLOT\":{\"details\":\"The storage slot for the total supply.\"},\"_TRANSFER_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Transfer(address,address,uint256)\\\"))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":{\"keccak256\":\"0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2\",\"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple ERC20 + EIP-2612 implementation.",
						"version": 1
					}
				}
			},
			"src/SwapAbstract.sol": {
				"SwapAbstract": {
					"abi": [
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "erc20ToNativeSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "erc20ToNativeSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "erc20ToNativeSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "erc20ToNativeSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "getERC20ToNativePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nativesSold",
									"type": "uint256"
								}
							],
							"name": "getNativeToERC20Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativeToERC20Swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "nativeToERC20Swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"asset()": "38d52e0f",
							"erc20ToNativeSwap(uint256)": "127d0409",
							"erc20ToNativeSwap(uint256,(uint256,uint8,bytes32,bytes32))": "19cdf284",
							"erc20ToNativeSwap(uint256,address)": "08e30698",
							"erc20ToNativeSwap(uint256,address,(uint256,uint8,bytes32,bytes32))": "de899d1f",
							"getERC20ToNativePrice(uint256)": "25d1782d",
							"getNativeToERC20Price(uint256)": "ea6b80b7",
							"nativeToERC20Swap()": "aea1e3d1",
							"nativeToERC20Swap(address)": "bc710575"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"erc20ToNativeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"erc20ToNativeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"erc20ToNativeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"erc20ToNativeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"getERC20ToNativePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesSold\",\"type\":\"uint256\"}],\"name\":\"getNativeToERC20Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToERC20Swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"nativeToERC20Swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapAbstract.sol\":\"SwapAbstract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":{\"keccak256\":\"0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2\",\"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV\"]},\"src/SwapAbstract.sol\":{\"keccak256\":\"0xd90a336e23bdb8b7eac5ff76c41037f513a3168351e479bcfb91f736871ef85f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://772f1b79518bd0a8d14746b6e27a52c8c09e3df60d31fa6be2b88c6687f3f930\",\"dweb:/ipfs/QmQSTqKmKG4z73AuGwsu1rzgP73NJTizy6FkFHjd5rpNEe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Test.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "erc20ToNativeSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "erc20ToNativeSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "erc20ToNativeSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct Permit2Sig",
									"name": "sig",
									"type": "tuple"
								}
							],
							"name": "erc20ToNativeSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc20sSold",
									"type": "uint256"
								}
							],
							"name": "getERC20ToNativePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativesBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nativesSold",
									"type": "uint256"
								}
							],
							"name": "getNativeToERC20Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativeToERC20Swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "nativeToERC20Swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc20sBought",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Test.sol\":252:924  contract Test is Ownable, SwapAbstract {... */\n  mstore(0x40, 0xa0)\n    /* \"src/Test.sol\":300:385  constructor(address owner) Ownable(owner) SwapAbstract(ERC20(address(this))) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/Test.sol\":369:373  this */\n  address\n    /* \"src/Test.sol\":335:340  owner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/SwapAbstract.sol\":358:372  asset = asset_ */\n  and\n  0x80\n  mstore\n  pop\n    /* \"src/Test.sol\":252:924  contract Test is Ownable, SwapAbstract {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_17:\n    /* \"src/Test.sol\":252:924  contract Test is Ownable, SwapAbstract {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xeb673d1167741de01e46e8792e6936904dce49145827532ad0c39a679efbf8f2\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/Test.sol\":252:924  contract Test is Ownable, SwapAbstract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xaea1e3d1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbc710575\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xde899d1f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xea6b80b7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x08e30698\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x127d0409\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19cdf284\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x25d1782d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38d52e0f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"src/Test.sol\":655:790  function erc20ToNativeSwap(uint erc20sSold, address recipient) public override returns (uint nativesBought) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"src/Test.sol\":743:761  uint nativesBought */\n      0x00\n        /* \"src/Test.sol\":655:790  function erc20ToNativeSwap(uint erc20sSold, address recipient) public override returns (uint nativesBought) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":643:668   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"src/Test.sol\":655:790  function erc20ToNativeSwap(uint erc20sSold, address recipient) public override returns (uint nativesBought) {... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/SwapAbstract.sol\":812:959  function erc20ToNativeSwap(uint erc20sSold) public returns (uint nativesBought) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      pop\n      tag_16\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      pop\n        /* \"src/SwapAbstract.sol\":872:890  uint nativesBought */\n      0x00\n      swap1\n        /* \"src/SwapAbstract.sol\":812:959  function erc20ToNativeSwap(uint erc20sSold) public returns (uint nativesBought) {... */\n      jump\n        /* \"src/SwapAbstract.sol\":1266:1443  function erc20ToNativeSwap(uint erc20sSold, Permit2Sig calldata sig) external returns (uint nativesBought) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_16\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":285:313  ERC20 public immutable asset */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      immutable(\"0xeb673d1167741de01e46e8792e6936904dce49145827532ad0c39a679efbf8f2\")\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1614:1646   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1596:1647   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1584:1586   */\n      0x20\n        /* \"#utility.yul\":1569:1587   */\n      add\n        /* \"src/SwapAbstract.sol\":285:313  ERC20 public immutable asset */\n      tag_20\n        /* \"#utility.yul\":1437:1653   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_40)\n        /* \"src/SwapAbstract.sol\":1455:1584  function nativeToERC20Swap() external payable returns (uint erc20sBought) {... */\n    tag_9:\n        /* \"src/SwapAbstract.sol\":1510:1527  uint erc20sBought */\n      0x00\n        /* \"src/SwapAbstract.sol\":1455:1584  function nativeToERC20Swap() external payable returns (uint erc20sBought) {... */\n      jump(tag_16)\n        /* \"src/Test.sol\":796:921  function nativeToERC20Swap(address recipient) public override payable returns (uint erc20sBought) {... */\n    tag_10:\n      tag_16\n      tag_24\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":967:1254  function erc20ToNativeSwap(uint erc20sSold, address recipient, Permit2Sig calldata sig) public returns (uint nativesBought) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_16\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_45\n      tag_73\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"src/SwapAbstract.sol\":1266:1443  function erc20ToNativeSwap(uint erc20sSold, Permit2Sig calldata sig) external returns (uint nativesBought) {... */\n    tag_32:\n        /* \"src/SwapAbstract.sol\":1353:1371  uint nativesBought */\n      0x00\n        /* \"src/SwapAbstract.sol\":1391:1435  erc20ToNativeSwap(erc20sSold,msg.sender,sig) */\n      tag_79\n        /* \"src/SwapAbstract.sol\":1409:1419  erc20sSold */\n      dup4\n        /* \"src/SwapAbstract.sol\":1420:1430  msg.sender */\n      caller\n        /* \"src/SwapAbstract.sol\":1431:1434  sig */\n      dup5\n        /* \"src/SwapAbstract.sol\":1391:1408  erc20ToNativeSwap */\n      tag_64\n        /* \"src/SwapAbstract.sol\":1391:1435  erc20ToNativeSwap(erc20sSold,msg.sender,sig) */\n      jump\t// in\n    tag_79:\n        /* \"src/SwapAbstract.sol\":1384:1435  return erc20ToNativeSwap(erc20sSold,msg.sender,sig) */\n      swap4\n        /* \"src/SwapAbstract.sol\":1266:1443  function erc20ToNativeSwap(uint erc20sSold, Permit2Sig calldata sig) external returns (uint nativesBought) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/SwapAbstract.sol\":967:1254  function erc20ToNativeSwap(uint erc20sSold, address recipient, Permit2Sig calldata sig) public returns (uint nativesBought) {... */\n    tag_64:\n        /* \"src/SwapAbstract.sol\":1071:1089  uint nativesBought */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapAbstract.sol\":1102:1107  asset */\n      immutable(\"0xeb673d1167741de01e46e8792e6936904dce49145827532ad0c39a679efbf8f2\")\n        /* \"src/SwapAbstract.sol\":1102:1114  asset.permit */\n      and\n      0xd505accf\n        /* \"src/SwapAbstract.sol\":1115:1125  msg.sender */\n      caller\n        /* \"src/SwapAbstract.sol\":1135:1139  this */\n      address\n        /* \"src/SwapAbstract.sol\":1142:1152  erc20sSold */\n      dup8\n        /* \"src/SwapAbstract.sol\":1154:1166  sig.deadline */\n      dup7\n      calldataload\n        /* \"src/SwapAbstract.sol\":1168:1173  sig.v */\n      tag_92\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"src/SwapAbstract.sol\":1175:1180  sig.r */\n      0x40\n        /* \"src/SwapAbstract.sol\":1102:1188  asset.permit(msg.sender, address(this), erc20sSold, sig.deadline, sig.v, sig.r, sig.s) */\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup10\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3097:3129   */\n      swap7\n      dup8\n      and\n        /* \"src/SwapAbstract.sol\":1102:1188  asset.permit(msg.sender, address(this), erc20sSold, sig.deadline, sig.v, sig.r, sig.s) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3079:3130   */\n      mstore\n        /* \"#utility.yul\":3166:3198   */\n      swap6\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":3146:3164   */\n      0x24\n      dup7\n      add\n        /* \"#utility.yul\":3139:3199   */\n      mstore\n        /* \"#utility.yul\":3215:3233   */\n      0x44\n      dup6\n      add\n        /* \"#utility.yul\":3208:3242   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3258:3276   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":3251:3285   */\n      mstore\n        /* \"#utility.yul\":3334:3338   */\n      0xff\n        /* \"#utility.yul\":3322:3339   */\n      and\n        /* \"#utility.yul\":3301:3320   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":3294:3340   */\n      mstore\n        /* \"src/SwapAbstract.sol\":1175:1180  sig.r */\n      dup6\n      add\n      calldataload\n        /* \"#utility.yul\":3356:3375   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":3349:3384   */\n      mstore\n        /* \"src/SwapAbstract.sol\":1182:1187  sig.s */\n      0x60\n      dup6\n      add\n      calldataload\n        /* \"#utility.yul\":3400:3419   */\n      0xc4\n      dup3\n      add\n        /* \"#utility.yul\":3393:3428   */\n      mstore\n        /* \"#utility.yul\":3051:3070   */\n      0xe4\n      add\n        /* \"src/SwapAbstract.sol\":1102:1188  asset.permit(msg.sender, address(this), erc20sSold, sig.deadline, sig.v, sig.r, sig.s) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n        /* \"src/Test.sol\":743:761  uint nativesBought */\n      0x00\n      swap3\n      pop\n        /* \"src/SwapAbstract.sol\":1206:1246  erc20ToNativeSwap(erc20sSold, recipient) */\n      tag_99\n      swap2\n      pop\n      pop\n        /* \"src/Test.sol\":655:790  function erc20ToNativeSwap(uint erc20sSold, address recipient) public override returns (uint nativesBought) {... */\n      jump\n        /* \"src/SwapAbstract.sol\":1206:1246  erc20ToNativeSwap(erc20sSold, recipient) */\n    tag_99:\n        /* \"src/SwapAbstract.sol\":1199:1246  return erc20ToNativeSwap(erc20sSold, recipient) */\n      swap5\n        /* \"src/SwapAbstract.sol\":967:1254  function erc20ToNativeSwap(uint erc20sSold, address recipient, Permit2Sig calldata sig) public returns (uint nativesBought) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1596:1647   */\n      mstore\n        /* \"#utility.yul\":1569:1587   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1596:1647   */\n      mstore\n        /* \"#utility.yul\":1569:1587   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_105\n        /* \"#utility.yul\":1437:1653   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_116:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      0x00\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_120:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:492   */\n    tag_18:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      0x00\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      0x00\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_122:\n        /* \"#utility.yul\":382:405   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":448:486   */\n      tag_123\n        /* \"#utility.yul\":482:484   */\n      0x20\n        /* \"#utility.yul\":467:485   */\n      dup5\n      add\n        /* \"#utility.yul\":448:486   */\n      tag_116\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":438:486   */\n      swap1\n      pop\n        /* \"#utility.yul\":192:492   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":679:905   */\n    tag_25:\n        /* \"#utility.yul\":738:744   */\n      0x00\n        /* \"#utility.yul\":791:793   */\n      0x20\n        /* \"#utility.yul\":779:788   */\n      dup3\n        /* \"#utility.yul\":770:777   */\n      dup5\n        /* \"#utility.yul\":766:789   */\n      sub\n        /* \"#utility.yul\":762:794   */\n      slt\n        /* \"#utility.yul\":759:811   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":807:808   */\n      0x00\n        /* \"#utility.yul\":804:805   */\n      0x00\n        /* \"#utility.yul\":797:809   */\n      revert\n        /* \"#utility.yul\":759:811   */\n    tag_126:\n      pop\n        /* \"#utility.yul\":852:875   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":679:905   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":910:1069   */\n    tag_117:\n        /* \"#utility.yul\":973:978   */\n      0x00\n        /* \"#utility.yul\":1018:1021   */\n      0x80\n        /* \"#utility.yul\":1009:1015   */\n      dup3\n        /* \"#utility.yul\":1004:1007   */\n      dup5\n        /* \"#utility.yul\":1000:1016   */\n      sub\n        /* \"#utility.yul\":996:1022   */\n      slt\n        /* \"#utility.yul\":993:1039   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":1035:1036   */\n      0x00\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1025:1037   */\n      revert\n        /* \"#utility.yul\":993:1039   */\n    tag_128:\n      pop\n        /* \"#utility.yul\":1057:1063   */\n      swap2\n        /* \"#utility.yul\":910:1069   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1074:1432   */\n    tag_31:\n        /* \"#utility.yul\":1171:1177   */\n      0x00\n        /* \"#utility.yul\":1179:1185   */\n      0x00\n        /* \"#utility.yul\":1232:1235   */\n      0xa0\n        /* \"#utility.yul\":1220:1229   */\n      dup4\n        /* \"#utility.yul\":1211:1218   */\n      dup6\n        /* \"#utility.yul\":1207:1230   */\n      sub\n        /* \"#utility.yul\":1203:1236   */\n      slt\n        /* \"#utility.yul\":1200:1253   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1249:1250   */\n      0x00\n        /* \"#utility.yul\":1246:1247   */\n      0x00\n        /* \"#utility.yul\":1239:1251   */\n      revert\n        /* \"#utility.yul\":1200:1253   */\n    tag_130:\n        /* \"#utility.yul\":1294:1317   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1360:1426   */\n      tag_123\n        /* \"#utility.yul\":1418:1425   */\n      dup5\n        /* \"#utility.yul\":1413:1415   */\n      0x20\n        /* \"#utility.yul\":1398:1416   */\n      dup6\n      add\n        /* \"#utility.yul\":1360:1426   */\n      tag_117\n      jump\t// in\n        /* \"#utility.yul\":1866:2052   */\n    tag_57:\n        /* \"#utility.yul\":1925:1931   */\n      0x00\n        /* \"#utility.yul\":1978:1980   */\n      0x20\n        /* \"#utility.yul\":1966:1975   */\n      dup3\n        /* \"#utility.yul\":1957:1964   */\n      dup5\n        /* \"#utility.yul\":1953:1976   */\n      sub\n        /* \"#utility.yul\":1949:1981   */\n      slt\n        /* \"#utility.yul\":1946:1998   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":1994:1995   */\n      0x00\n        /* \"#utility.yul\":1991:1992   */\n      0x00\n        /* \"#utility.yul\":1984:1996   */\n      revert\n        /* \"#utility.yul\":1946:1998   */\n    tag_135:\n        /* \"#utility.yul\":2017:2046   */\n      tag_79\n        /* \"#utility.yul\":2036:2045   */\n      dup3\n        /* \"#utility.yul\":2017:2046   */\n      tag_116\n      jump\t// in\n        /* \"#utility.yul\":2057:2489   */\n    tag_63:\n        /* \"#utility.yul\":2163:2169   */\n      0x00\n        /* \"#utility.yul\":2171:2177   */\n      0x00\n        /* \"#utility.yul\":2179:2185   */\n      0x00\n        /* \"#utility.yul\":2232:2235   */\n      0xc0\n        /* \"#utility.yul\":2220:2229   */\n      dup5\n        /* \"#utility.yul\":2211:2218   */\n      dup7\n        /* \"#utility.yul\":2207:2230   */\n      sub\n        /* \"#utility.yul\":2203:2236   */\n      slt\n        /* \"#utility.yul\":2200:2253   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2249:2250   */\n      0x00\n        /* \"#utility.yul\":2246:2247   */\n      0x00\n        /* \"#utility.yul\":2239:2251   */\n      revert\n        /* \"#utility.yul\":2200:2253   */\n    tag_138:\n        /* \"#utility.yul\":2294:2317   */\n      dup4\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2360:2398   */\n      tag_139\n        /* \"#utility.yul\":2394:2396   */\n      0x20\n        /* \"#utility.yul\":2379:2397   */\n      dup6\n      add\n        /* \"#utility.yul\":2360:2398   */\n      tag_116\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2350:2398   */\n      swap2\n      pop\n        /* \"#utility.yul\":2417:2483   */\n      tag_140\n        /* \"#utility.yul\":2475:2482   */\n      dup6\n        /* \"#utility.yul\":2470:2472   */\n      0x40\n        /* \"#utility.yul\":2459:2468   */\n      dup7\n        /* \"#utility.yul\":2455:2473   */\n      add\n        /* \"#utility.yul\":2417:2483   */\n      tag_117\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2407:2483   */\n      swap1\n      pop\n        /* \"#utility.yul\":2057:2489   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2494:2763   */\n    tag_93:\n        /* \"#utility.yul\":2551:2557   */\n      0x00\n        /* \"#utility.yul\":2604:2606   */\n      0x20\n        /* \"#utility.yul\":2592:2601   */\n      dup3\n        /* \"#utility.yul\":2583:2590   */\n      dup5\n        /* \"#utility.yul\":2579:2602   */\n      sub\n        /* \"#utility.yul\":2575:2607   */\n      slt\n        /* \"#utility.yul\":2572:2624   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2617:2618   */\n      0x00\n        /* \"#utility.yul\":2610:2622   */\n      revert\n        /* \"#utility.yul\":2572:2624   */\n    tag_142:\n        /* \"#utility.yul\":2659:2668   */\n      dup2\n        /* \"#utility.yul\":2646:2669   */\n      calldataload\n        /* \"#utility.yul\":2709:2713   */\n      0xff\n        /* \"#utility.yul\":2702:2707   */\n      dup2\n        /* \"#utility.yul\":2698:2714   */\n      and\n        /* \"#utility.yul\":2691:2696   */\n      dup2\n        /* \"#utility.yul\":2688:2715   */\n      eq\n        /* \"#utility.yul\":2678:2733   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2729:2730   */\n      0x00\n        /* \"#utility.yul\":2726:2727   */\n      0x00\n        /* \"#utility.yul\":2719:2731   */\n      revert\n\n    auxdata: 0xa26469706673582212208970ecce039fc61640344ac43cb561cad855939c9522601b7912d42e07fb494c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_711": {
									"entryPoint": null,
									"id": 711,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_848": {
									"entryPoint": null,
									"id": 848,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 121,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:5",
										"nodeType": "YulBlock",
										"src": "0:514:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:5",
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:5",
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:5",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:5",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nativeSrc": "143:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nativeSrc": "143:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nativeSrc": "112:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:5",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nativeSrc": "108:32:5",
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nativeSrc": "105:52:5",
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nativeSrc": "166:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nativeSrc": "179:16:5",
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:5",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:5",
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:5",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:5",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nativeSrc": "260:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nativeSrc": "260:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:5",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:5",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nativeSrc": "239:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:5",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nativeSrc": "235:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nativeSrc": "224:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nativeSrc": "214:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nativeSrc": "207:50:5",
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nativeSrc": "204:70:5",
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nativeSrc": "283:15:5",
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:5",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:5",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:5",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:5",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											},
											{
												"body": {
													"nativeSrc": "410:102:5",
													"nodeType": "YulBlock",
													"src": "410:102:5",
													"statements": [
														{
															"nativeSrc": "420:26:5",
															"nodeType": "YulAssignment",
															"src": "420:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:5",
																		"nodeType": "YulLiteral",
																		"src": "443:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:5"
																},
																"nativeSrc": "428:18:5",
																"nodeType": "YulFunctionCall",
																"src": "428:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:5",
																								"nodeType": "YulLiteral",
																								"src": "493:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:5",
																								"nodeType": "YulLiteral",
																								"src": "498:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:5"
																						},
																						"nativeSrc": "489:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:5",
																						"nodeType": "YulLiteral",
																						"src": "502:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:5"
																				},
																				"nativeSrc": "485:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:5"
																		},
																		"nativeSrc": "473:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:5"
																},
																"nativeSrc": "455:51:5",
																"nodeType": "YulFunctionCall",
																"src": "455:51:5"
															},
															"nativeSrc": "455:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:5",
														"nodeType": "YulTypedName",
														"src": "379:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:5",
														"nodeType": "YulTypedName",
														"src": "390:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:5",
														"nodeType": "YulTypedName",
														"src": "401:4:5",
														"type": ""
													}
												],
												"src": "309:203:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b506040516105f83803806105f883398101604081905261002e916100c8565b30816001600160a01b03811661005d57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006681610079565b506001600160a01b0316608052506100f5565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100d8575f5ffd5b81516001600160a01b03811681146100ee575f5ffd5b9392505050565b6080516104e46101145f395f818161012c015261021b01526104e45ff3fe6080604052600436106100a5575f3560e01c80638da5cb5b116100625780638da5cb5b1461017c578063aea1e3d114610198578063bc7105751461019e578063de899d1f146101ac578063ea6b80b7146100dd578063f2fde38b146101cb575f5ffd5b806308e30698146100a9578063127d0409146100dd57806319cdf284146100fc57806325d1782d146100dd57806338d52e0f1461011b578063715018a614610166575b5f5ffd5b3480156100b4575f5ffd5b506100ca6100c33660046103c2565b5f92915050565b6040519081526020015b60405180910390f35b3480156100e8575f5ffd5b506100ca6100f73660046103ec565b505f90565b348015610107575f5ffd5b506100ca610116366004610419565b6101ea565b348015610126575f5ffd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d4565b348015610171575f5ffd5b5061017a6101fd565b005b348015610187575f5ffd5b505f546001600160a01b031661014e565b5f6100ca565b6100ca6100f736600461043b565b3480156101b7575f5ffd5b506100ca6101c6366004610454565b610210565b3480156101d6575f5ffd5b5061017a6101e536600461043b565b6102ea565b5f6101f6833384610210565b9392505050565b61020561032c565b61020e5f610358565b565b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308786356102556040890160208a0161048e565b604080516001600160e01b031960e089901b1681526001600160a01b0396871660048201529590941660248601526044850192909252606484015260ff16608483015285013560a4820152606085013560c482015260e4015f604051808303815f87803b1580156102c4575f5ffd5b505af11580156102d6573d5f5f3e3d5ffd5b505f92506102e2915050565b949350505050565b6102f261032c565b6001600160a01b03811661032057604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61032981610358565b50565b5f546001600160a01b0316331461020e5760405163118cdaa760e01b8152336004820152602401610317565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103bd575f5ffd5b919050565b5f5f604083850312156103d3575f5ffd5b823591506103e3602084016103a7565b90509250929050565b5f602082840312156103fc575f5ffd5b5035919050565b5f60808284031215610413575f5ffd5b50919050565b5f5f60a0838503121561042a575f5ffd5b823591506103e38460208501610403565b5f6020828403121561044b575f5ffd5b6101f6826103a7565b5f5f5f60c08486031215610466575f5ffd5b83359250610476602085016103a7565b91506104858560408601610403565b90509250925092565b5f6020828403121561049e575f5ffd5b813560ff811681146101f6575f5ffdfea26469706673582212208970ecce039fc61640344ac43cb561cad855939c9522601b7912d42e07fb494c64736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F8 CODESIZE SUB DUP1 PUSH2 0x5F8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xC8 JUMP JUMPDEST ADDRESS DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66 DUP2 PUSH2 0x79 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE POP PUSH2 0xF5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x4E4 PUSH2 0x114 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x12C ADD MSTORE PUSH2 0x21B ADD MSTORE PUSH2 0x4E4 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xAEA1E3D1 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xBC710575 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xDE899D1F EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xEA6B80B7 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8E30698 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x127D0409 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x19CDF284 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x25D1782D EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C2 JUMP JUMPDEST PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EC JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x1EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x14E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14E JUMP JUMPDEST PUSH0 PUSH2 0xCA JUMP JUMPDEST PUSH2 0xCA PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B JUMP JUMPDEST PUSH2 0x2EA JUMP JUMPDEST PUSH0 PUSH2 0x1F6 DUP4 CALLER DUP5 PUSH2 0x210 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x205 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x20E PUSH0 PUSH2 0x358 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD505ACCF CALLER ADDRESS DUP8 DUP7 CALLDATALOAD PUSH2 0x255 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP10 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0x84 DUP4 ADD MSTORE DUP6 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 SWAP3 POP PUSH2 0x2E2 SWAP2 POP POP JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x329 DUP2 PUSH2 0x358 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x317 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3E3 PUSH1 0x20 DUP5 ADD PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xA0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3E3 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x403 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F6 DUP3 PUSH2 0x3A7 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x466 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x476 PUSH1 0x20 DUP6 ADD PUSH2 0x3A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x485 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x403 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F6 JUMPI PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH17 0xECCE039FC61640344AC43CB561CAD85593 SWAP13 SWAP6 0x22 PUSH1 0x1B PUSH26 0x12D42E07FB494C64736F6C634300081C00330000000000000000 ",
							"sourceMap": "252:672:4:-:0;;;300:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;369:4;335:5;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:5;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;358:14:3;;;-1:-1:-1;252:672:4;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;309:203::-;252:672:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 812,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 856,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@asset_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20ToNativeSwap_755": {
									"entryPoint": null,
									"id": 755,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@erc20ToNativeSwap_793": {
									"entryPoint": 528,
									"id": 793,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@erc20ToNativeSwap_811": {
									"entryPoint": 490,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@erc20ToNativeSwap_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getERC20ToNativePrice_859": {
									"entryPoint": null,
									"id": 859,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNativeToERC20Price_870": {
									"entryPoint": null,
									"id": 870,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nativeToERC20Swap_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nativeToERC20Swap_894": {
									"entryPoint": null,
									"id": 894,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 509,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 746,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_struct_Permit2Sig_calldata": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_struct$_Permit2Sig_$697_calldata_ptr": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_struct$_Permit2Sig_$697_calldata_ptr": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$685__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3436:5",
										"nodeType": "YulBlock",
										"src": "0:3436:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:5",
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nativeSrc": "73:29:5",
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nativeSrc": "82:20:5",
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:5",
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:5",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:5",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nativeSrc": "167:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nativeSrc": "167:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:5",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:5",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nativeSrc": "146:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:5",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nativeSrc": "142:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nativeSrc": "131:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nativeSrc": "121:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nativeSrc": "114:50:5",
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nativeSrc": "111:70:5",
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:5",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:5",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nativeSrc": "279:213:5",
													"nodeType": "YulBlock",
													"src": "279:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:5",
																"nodeType": "YulBlock",
																"src": "325:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:5",
																					"nodeType": "YulLiteral",
																					"src": "334:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:5",
																					"nodeType": "YulLiteral",
																					"src": "337:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:5"
																			},
																			"nativeSrc": "327:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:5"
																		},
																		"nativeSrc": "327:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:5"
																		},
																		"nativeSrc": "296:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:5",
																		"nodeType": "YulLiteral",
																		"src": "321:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:5"
																},
																"nativeSrc": "292:32:5",
																"nodeType": "YulFunctionCall",
																"src": "292:32:5"
															},
															"nativeSrc": "289:52:5",
															"nodeType": "YulIf",
															"src": "289:52:5"
														},
														{
															"nativeSrc": "350:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "350:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "363:1:5",
																"nodeType": "YulLiteral",
																"src": "363:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "354:5:5",
																	"nodeType": "YulTypedName",
																	"src": "354:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "373:32:5",
															"nodeType": "YulAssignment",
															"src": "373:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "395:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "382:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "382:12:5"
																},
																"nativeSrc": "382:23:5",
																"nodeType": "YulFunctionCall",
																"src": "382:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "373:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "373:5:5"
																}
															]
														},
														{
															"nativeSrc": "414:15:5",
															"nodeType": "YulAssignment",
															"src": "414:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "424:5:5",
																"nodeType": "YulIdentifier",
																"src": "424:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "414:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "414:6:5"
																}
															]
														},
														{
															"nativeSrc": "438:48:5",
															"nodeType": "YulAssignment",
															"src": "438:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "471:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "471:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "482:2:5",
																				"nodeType": "YulLiteral",
																				"src": "482:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "467:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "467:3:5"
																		},
																		"nativeSrc": "467:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "467:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "448:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "448:18:5"
																},
																"nativeSrc": "448:38:5",
																"nodeType": "YulFunctionCall",
																"src": "448:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "438:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "192:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:5",
														"nodeType": "YulTypedName",
														"src": "237:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:5",
														"nodeType": "YulTypedName",
														"src": "248:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:5",
														"nodeType": "YulTypedName",
														"src": "260:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:5",
														"nodeType": "YulTypedName",
														"src": "268:6:5",
														"type": ""
													}
												],
												"src": "192:300:5"
											},
											{
												"body": {
													"nativeSrc": "598:76:5",
													"nodeType": "YulBlock",
													"src": "598:76:5",
													"statements": [
														{
															"nativeSrc": "608:26:5",
															"nodeType": "YulAssignment",
															"src": "608:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "620:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:5",
																		"nodeType": "YulLiteral",
																		"src": "631:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "616:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:5"
																},
																"nativeSrc": "616:18:5",
																"nodeType": "YulFunctionCall",
																"src": "616:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "608:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "650:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "661:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "661:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "643:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:5"
																},
																"nativeSrc": "643:25:5",
																"nodeType": "YulFunctionCall",
																"src": "643:25:5"
															},
															"nativeSrc": "643:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "643:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "497:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "567:9:5",
														"nodeType": "YulTypedName",
														"src": "567:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "578:6:5",
														"nodeType": "YulTypedName",
														"src": "578:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "589:4:5",
														"nodeType": "YulTypedName",
														"src": "589:4:5",
														"type": ""
													}
												],
												"src": "497:177:5"
											},
											{
												"body": {
													"nativeSrc": "749:156:5",
													"nodeType": "YulBlock",
													"src": "749:156:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "795:16:5",
																"nodeType": "YulBlock",
																"src": "795:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "804:1:5",
																					"nodeType": "YulLiteral",
																					"src": "804:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "807:1:5",
																					"nodeType": "YulLiteral",
																					"src": "807:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "797:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:5"
																			},
																			"nativeSrc": "797:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "797:12:5"
																		},
																		"nativeSrc": "797:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "797:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "770:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "770:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "779:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "779:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "766:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:5"
																		},
																		"nativeSrc": "766:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "766:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "791:2:5",
																		"nodeType": "YulLiteral",
																		"src": "791:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "762:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:5"
																},
																"nativeSrc": "762:32:5",
																"nodeType": "YulFunctionCall",
																"src": "762:32:5"
															},
															"nativeSrc": "759:52:5",
															"nodeType": "YulIf",
															"src": "759:52:5"
														},
														{
															"nativeSrc": "820:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "820:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "833:1:5",
																"nodeType": "YulLiteral",
																"src": "833:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "824:5:5",
																	"nodeType": "YulTypedName",
																	"src": "824:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "843:32:5",
															"nodeType": "YulAssignment",
															"src": "843:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "865:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "865:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "852:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "852:12:5"
																},
																"nativeSrc": "852:23:5",
																"nodeType": "YulFunctionCall",
																"src": "852:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "843:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "843:5:5"
																}
															]
														},
														{
															"nativeSrc": "884:15:5",
															"nodeType": "YulAssignment",
															"src": "884:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "894:5:5",
																"nodeType": "YulIdentifier",
																"src": "894:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "884:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "884:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "679:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "715:9:5",
														"nodeType": "YulTypedName",
														"src": "715:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "726:7:5",
														"nodeType": "YulTypedName",
														"src": "726:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "738:6:5",
														"nodeType": "YulTypedName",
														"src": "738:6:5",
														"type": ""
													}
												],
												"src": "679:226:5"
											},
											{
												"body": {
													"nativeSrc": "983:86:5",
													"nodeType": "YulBlock",
													"src": "983:86:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1023:16:5",
																"nodeType": "YulBlock",
																"src": "1023:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1035:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1025:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:5"
																			},
																			"nativeSrc": "1025:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:5"
																		},
																		"nativeSrc": "1025:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "1004:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1004:3:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1009:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1000:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:5"
																		},
																		"nativeSrc": "1000:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1018:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1018:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "996:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "996:3:5"
																},
																"nativeSrc": "996:26:5",
																"nodeType": "YulFunctionCall",
																"src": "996:26:5"
															},
															"nativeSrc": "993:46:5",
															"nodeType": "YulIf",
															"src": "993:46:5"
														},
														{
															"nativeSrc": "1048:15:5",
															"nodeType": "YulAssignment",
															"src": "1048:15:5",
															"value": {
																"name": "offset",
																"nativeSrc": "1057:6:5",
																"nodeType": "YulIdentifier",
																"src": "1057:6:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1048:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1048:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_struct_Permit2Sig_calldata",
												"nativeSrc": "910:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "957:6:5",
														"nodeType": "YulTypedName",
														"src": "957:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "965:3:5",
														"nodeType": "YulTypedName",
														"src": "965:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "973:5:5",
														"nodeType": "YulTypedName",
														"src": "973:5:5",
														"type": ""
													}
												],
												"src": "910:159:5"
											},
											{
												"body": {
													"nativeSrc": "1190:242:5",
													"nodeType": "YulBlock",
													"src": "1190:242:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1237:16:5",
																"nodeType": "YulBlock",
																"src": "1237:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1246:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1246:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1249:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1249:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1239:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1239:6:5"
																			},
																			"nativeSrc": "1239:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1239:12:5"
																		},
																		"nativeSrc": "1239:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1239:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1211:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1220:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1207:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:5"
																		},
																		"nativeSrc": "1207:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1232:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1232:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1203:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:5"
																},
																"nativeSrc": "1203:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1203:33:5"
															},
															"nativeSrc": "1200:53:5",
															"nodeType": "YulIf",
															"src": "1200:53:5"
														},
														{
															"nativeSrc": "1262:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1262:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1275:1:5",
																"nodeType": "YulLiteral",
																"src": "1275:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1266:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1266:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1285:32:5",
															"nodeType": "YulAssignment",
															"src": "1285:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1307:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1307:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1294:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1294:12:5"
																},
																"nativeSrc": "1294:23:5",
																"nodeType": "YulFunctionCall",
																"src": "1294:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1285:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:5"
																}
															]
														},
														{
															"nativeSrc": "1326:15:5",
															"nodeType": "YulAssignment",
															"src": "1326:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1336:5:5",
																"nodeType": "YulIdentifier",
																"src": "1336:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1326:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:5"
																}
															]
														},
														{
															"nativeSrc": "1350:76:5",
															"nodeType": "YulAssignment",
															"src": "1350:76:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1402:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1402:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1413:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1413:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1398:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1398:3:5"
																		},
																		"nativeSrc": "1398:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1398:18:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1418:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1418:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_Permit2Sig_calldata",
																	"nativeSrc": "1360:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "1360:37:5"
																},
																"nativeSrc": "1360:66:5",
																"nodeType": "YulFunctionCall",
																"src": "1360:66:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1350:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_struct$_Permit2Sig_$697_calldata_ptr",
												"nativeSrc": "1074:358:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1148:9:5",
														"nodeType": "YulTypedName",
														"src": "1148:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1159:7:5",
														"nodeType": "YulTypedName",
														"src": "1159:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1171:6:5",
														"nodeType": "YulTypedName",
														"src": "1171:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1179:6:5",
														"nodeType": "YulTypedName",
														"src": "1179:6:5",
														"type": ""
													}
												],
												"src": "1074:358:5"
											},
											{
												"body": {
													"nativeSrc": "1551:102:5",
													"nodeType": "YulBlock",
													"src": "1551:102:5",
													"statements": [
														{
															"nativeSrc": "1561:26:5",
															"nodeType": "YulAssignment",
															"src": "1561:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1573:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1573:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1584:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1584:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1569:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1569:3:5"
																},
																"nativeSrc": "1569:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1569:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1561:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1603:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1603:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1618:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1618:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1634:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1634:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1639:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1639:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1630:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1630:3:5"
																						},
																						"nativeSrc": "1630:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1630:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1643:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1643:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1626:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1626:3:5"
																				},
																				"nativeSrc": "1626:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1626:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1614:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1614:3:5"
																		},
																		"nativeSrc": "1614:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1614:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1596:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:5"
																},
																"nativeSrc": "1596:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1596:51:5"
															},
															"nativeSrc": "1596:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1596:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$685__to_t_address__fromStack_reversed",
												"nativeSrc": "1437:216:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1520:9:5",
														"nodeType": "YulTypedName",
														"src": "1520:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1531:6:5",
														"nodeType": "YulTypedName",
														"src": "1531:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1542:4:5",
														"nodeType": "YulTypedName",
														"src": "1542:4:5",
														"type": ""
													}
												],
												"src": "1437:216:5"
											},
											{
												"body": {
													"nativeSrc": "1759:102:5",
													"nodeType": "YulBlock",
													"src": "1759:102:5",
													"statements": [
														{
															"nativeSrc": "1769:26:5",
															"nodeType": "YulAssignment",
															"src": "1769:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1781:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1781:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1792:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1792:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1777:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1777:3:5"
																},
																"nativeSrc": "1777:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1777:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1769:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1769:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1811:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1811:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1826:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1826:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1842:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1842:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1847:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1847:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1838:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1838:3:5"
																						},
																						"nativeSrc": "1838:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1838:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1851:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1851:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1834:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1834:3:5"
																				},
																				"nativeSrc": "1834:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1834:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1822:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:5"
																		},
																		"nativeSrc": "1822:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1804:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1804:6:5"
																},
																"nativeSrc": "1804:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1804:51:5"
															},
															"nativeSrc": "1804:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1804:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1658:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1728:9:5",
														"nodeType": "YulTypedName",
														"src": "1728:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1739:6:5",
														"nodeType": "YulTypedName",
														"src": "1739:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1750:4:5",
														"nodeType": "YulTypedName",
														"src": "1750:4:5",
														"type": ""
													}
												],
												"src": "1658:203:5"
											},
											{
												"body": {
													"nativeSrc": "1936:116:5",
													"nodeType": "YulBlock",
													"src": "1936:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1982:16:5",
																"nodeType": "YulBlock",
																"src": "1982:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1991:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1991:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1994:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1994:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1984:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1984:6:5"
																			},
																			"nativeSrc": "1984:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1984:12:5"
																		},
																		"nativeSrc": "1984:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1957:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1957:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1966:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1966:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1953:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1953:3:5"
																		},
																		"nativeSrc": "1953:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1978:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1978:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1949:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:5"
																},
																"nativeSrc": "1949:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1949:32:5"
															},
															"nativeSrc": "1946:52:5",
															"nodeType": "YulIf",
															"src": "1946:52:5"
														},
														{
															"nativeSrc": "2007:39:5",
															"nodeType": "YulAssignment",
															"src": "2007:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2036:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2036:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2017:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2017:18:5"
																},
																"nativeSrc": "2017:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2017:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2007:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2007:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1866:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1902:9:5",
														"nodeType": "YulTypedName",
														"src": "1902:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1913:7:5",
														"nodeType": "YulTypedName",
														"src": "1913:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1925:6:5",
														"nodeType": "YulTypedName",
														"src": "1925:6:5",
														"type": ""
													}
												],
												"src": "1866:186:5"
											},
											{
												"body": {
													"nativeSrc": "2190:299:5",
													"nodeType": "YulBlock",
													"src": "2190:299:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2237:16:5",
																"nodeType": "YulBlock",
																"src": "2237:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2246:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2246:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2249:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2249:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2239:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2239:6:5"
																			},
																			"nativeSrc": "2239:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2239:12:5"
																		},
																		"nativeSrc": "2239:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2239:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2211:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2211:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2220:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2220:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2207:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:5"
																		},
																		"nativeSrc": "2207:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2207:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2232:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2232:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2203:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2203:3:5"
																},
																"nativeSrc": "2203:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2203:33:5"
															},
															"nativeSrc": "2200:53:5",
															"nodeType": "YulIf",
															"src": "2200:53:5"
														},
														{
															"nativeSrc": "2262:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2262:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2275:1:5",
																"nodeType": "YulLiteral",
																"src": "2275:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2266:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2266:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2285:32:5",
															"nodeType": "YulAssignment",
															"src": "2285:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2307:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2307:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2294:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2294:12:5"
																},
																"nativeSrc": "2294:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2294:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2285:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2285:5:5"
																}
															]
														},
														{
															"nativeSrc": "2326:15:5",
															"nodeType": "YulAssignment",
															"src": "2326:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "2336:5:5",
																"nodeType": "YulIdentifier",
																"src": "2336:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2326:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2326:6:5"
																}
															]
														},
														{
															"nativeSrc": "2350:48:5",
															"nodeType": "YulAssignment",
															"src": "2350:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2383:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2383:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2394:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2394:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2379:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2379:3:5"
																		},
																		"nativeSrc": "2379:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2379:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2360:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2360:18:5"
																},
																"nativeSrc": "2360:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2360:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2350:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2350:6:5"
																}
															]
														},
														{
															"nativeSrc": "2407:76:5",
															"nodeType": "YulAssignment",
															"src": "2407:76:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2459:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2459:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2470:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2470:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2455:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2455:3:5"
																		},
																		"nativeSrc": "2455:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2455:18:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2475:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "2475:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_Permit2Sig_calldata",
																	"nativeSrc": "2417:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "2417:37:5"
																},
																"nativeSrc": "2417:66:5",
																"nodeType": "YulFunctionCall",
																"src": "2417:66:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2407:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2407:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_struct$_Permit2Sig_$697_calldata_ptr",
												"nativeSrc": "2057:432:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2140:9:5",
														"nodeType": "YulTypedName",
														"src": "2140:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2151:7:5",
														"nodeType": "YulTypedName",
														"src": "2151:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2163:6:5",
														"nodeType": "YulTypedName",
														"src": "2163:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2171:6:5",
														"nodeType": "YulTypedName",
														"src": "2171:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2179:6:5",
														"nodeType": "YulTypedName",
														"src": "2179:6:5",
														"type": ""
													}
												],
												"src": "2057:432:5"
											},
											{
												"body": {
													"nativeSrc": "2562:201:5",
													"nodeType": "YulBlock",
													"src": "2562:201:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2608:16:5",
																"nodeType": "YulBlock",
																"src": "2608:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2617:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2617:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2610:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:5"
																			},
																			"nativeSrc": "2610:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2610:12:5"
																		},
																		"nativeSrc": "2610:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2610:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2583:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2583:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2592:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2592:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2579:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:5"
																		},
																		"nativeSrc": "2579:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2579:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2604:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2604:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2575:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2575:3:5"
																},
																"nativeSrc": "2575:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2575:32:5"
															},
															"nativeSrc": "2572:52:5",
															"nodeType": "YulIf",
															"src": "2572:52:5"
														},
														{
															"nativeSrc": "2633:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2633:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2659:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2659:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2646:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2646:12:5"
																},
																"nativeSrc": "2646:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2646:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2637:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2637:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2717:16:5",
																"nodeType": "YulBlock",
																"src": "2717:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2726:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2726:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2729:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2729:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2719:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2719:6:5"
																			},
																			"nativeSrc": "2719:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2719:12:5"
																		},
																		"nativeSrc": "2719:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2719:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2691:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2691:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2702:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2702:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2709:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2709:4:5",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2698:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2698:3:5"
																				},
																				"nativeSrc": "2698:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2698:16:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2688:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2688:2:5"
																		},
																		"nativeSrc": "2688:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2688:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2681:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2681:6:5"
																},
																"nativeSrc": "2681:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2681:35:5"
															},
															"nativeSrc": "2678:55:5",
															"nodeType": "YulIf",
															"src": "2678:55:5"
														},
														{
															"nativeSrc": "2742:15:5",
															"nodeType": "YulAssignment",
															"src": "2742:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "2752:5:5",
																"nodeType": "YulIdentifier",
																"src": "2752:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2742:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "2494:269:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2528:9:5",
														"nodeType": "YulTypedName",
														"src": "2528:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2539:7:5",
														"nodeType": "YulTypedName",
														"src": "2539:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2551:6:5",
														"nodeType": "YulTypedName",
														"src": "2551:6:5",
														"type": ""
													}
												],
												"src": "2494:269:5"
											},
											{
												"body": {
													"nativeSrc": "3033:401:5",
													"nodeType": "YulBlock",
													"src": "3033:401:5",
													"statements": [
														{
															"nativeSrc": "3043:27:5",
															"nodeType": "YulAssignment",
															"src": "3043:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3055:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3055:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3066:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3066:3:5",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3051:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3051:3:5"
																},
																"nativeSrc": "3051:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3051:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3043:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3043:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3086:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3086:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3101:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3101:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3117:3:5",
																								"nodeType": "YulLiteral",
																								"src": "3117:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3122:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3122:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3113:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3113:3:5"
																						},
																						"nativeSrc": "3113:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3113:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3126:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3126:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3109:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3109:3:5"
																				},
																				"nativeSrc": "3109:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3109:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3097:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:5"
																		},
																		"nativeSrc": "3097:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3097:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3079:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3079:6:5"
																},
																"nativeSrc": "3079:51:5",
																"nodeType": "YulFunctionCall",
																"src": "3079:51:5"
															},
															"nativeSrc": "3079:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "3079:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3150:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3161:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3161:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3146:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3146:3:5"
																		},
																		"nativeSrc": "3146:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3146:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3170:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3170:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3186:3:5",
																								"nodeType": "YulLiteral",
																								"src": "3186:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3191:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3191:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3182:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3182:3:5"
																						},
																						"nativeSrc": "3182:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3182:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3195:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3195:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3178:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3178:3:5"
																				},
																				"nativeSrc": "3178:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3166:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3166:3:5"
																		},
																		"nativeSrc": "3166:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3166:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3139:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:5"
																},
																"nativeSrc": "3139:60:5",
																"nodeType": "YulFunctionCall",
																"src": "3139:60:5"
															},
															"nativeSrc": "3139:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "3139:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3219:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3219:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3230:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3230:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3215:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:5"
																		},
																		"nativeSrc": "3215:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3215:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3235:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3235:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3208:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3208:6:5"
																},
																"nativeSrc": "3208:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3208:34:5"
															},
															"nativeSrc": "3208:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3208:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3262:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3273:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3273:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3258:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3258:3:5"
																		},
																		"nativeSrc": "3258:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3258:18:5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3278:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3278:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3251:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3251:6:5"
																},
																"nativeSrc": "3251:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3251:34:5"
															},
															"nativeSrc": "3251:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3251:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3305:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3305:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3316:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3316:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3301:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:5"
																		},
																		"nativeSrc": "3301:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "3326:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3326:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3334:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3334:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3322:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3322:3:5"
																		},
																		"nativeSrc": "3322:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3322:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3294:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:5"
																},
																"nativeSrc": "3294:46:5",
																"nodeType": "YulFunctionCall",
																"src": "3294:46:5"
															},
															"nativeSrc": "3294:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "3294:46:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3360:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3371:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3371:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3356:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:5"
																		},
																		"nativeSrc": "3356:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3356:19:5"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "3377:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3377:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3349:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:5"
																},
																"nativeSrc": "3349:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3349:35:5"
															},
															"nativeSrc": "3349:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3349:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3404:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3404:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3415:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3415:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3400:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3400:3:5"
																		},
																		"nativeSrc": "3400:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3400:19:5"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "3421:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3421:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3393:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3393:6:5"
																},
																"nativeSrc": "3393:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3393:35:5"
															},
															"nativeSrc": "3393:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3393:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "2768:666:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2954:9:5",
														"nodeType": "YulTypedName",
														"src": "2954:9:5",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2965:6:5",
														"nodeType": "YulTypedName",
														"src": "2965:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2973:6:5",
														"nodeType": "YulTypedName",
														"src": "2973:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2981:6:5",
														"nodeType": "YulTypedName",
														"src": "2981:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2989:6:5",
														"nodeType": "YulTypedName",
														"src": "2989:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2997:6:5",
														"nodeType": "YulTypedName",
														"src": "2997:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3005:6:5",
														"nodeType": "YulTypedName",
														"src": "3005:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3013:6:5",
														"nodeType": "YulTypedName",
														"src": "3013:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3024:4:5",
														"nodeType": "YulTypedName",
														"src": "3024:4:5",
														"type": ""
													}
												],
												"src": "2768:666:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_struct_Permit2Sig_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 128) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_uint256t_struct$_Permit2Sig_$697_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_struct_Permit2Sig_calldata(add(headStart, 32), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$685__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_struct$_Permit2Sig_$697_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_struct_Permit2Sig_calldata(add(headStart, 64), dataEnd)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"700": [
									{
										"length": 32,
										"start": 300
									},
									{
										"length": 32,
										"start": 539
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100a5575f3560e01c80638da5cb5b116100625780638da5cb5b1461017c578063aea1e3d114610198578063bc7105751461019e578063de899d1f146101ac578063ea6b80b7146100dd578063f2fde38b146101cb575f5ffd5b806308e30698146100a9578063127d0409146100dd57806319cdf284146100fc57806325d1782d146100dd57806338d52e0f1461011b578063715018a614610166575b5f5ffd5b3480156100b4575f5ffd5b506100ca6100c33660046103c2565b5f92915050565b6040519081526020015b60405180910390f35b3480156100e8575f5ffd5b506100ca6100f73660046103ec565b505f90565b348015610107575f5ffd5b506100ca610116366004610419565b6101ea565b348015610126575f5ffd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d4565b348015610171575f5ffd5b5061017a6101fd565b005b348015610187575f5ffd5b505f546001600160a01b031661014e565b5f6100ca565b6100ca6100f736600461043b565b3480156101b7575f5ffd5b506100ca6101c6366004610454565b610210565b3480156101d6575f5ffd5b5061017a6101e536600461043b565b6102ea565b5f6101f6833384610210565b9392505050565b61020561032c565b61020e5f610358565b565b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308786356102556040890160208a0161048e565b604080516001600160e01b031960e089901b1681526001600160a01b0396871660048201529590941660248601526044850192909252606484015260ff16608483015285013560a4820152606085013560c482015260e4015f604051808303815f87803b1580156102c4575f5ffd5b505af11580156102d6573d5f5f3e3d5ffd5b505f92506102e2915050565b949350505050565b6102f261032c565b6001600160a01b03811661032057604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61032981610358565b50565b5f546001600160a01b0316331461020e5760405163118cdaa760e01b8152336004820152602401610317565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103bd575f5ffd5b919050565b5f5f604083850312156103d3575f5ffd5b823591506103e3602084016103a7565b90509250929050565b5f602082840312156103fc575f5ffd5b5035919050565b5f60808284031215610413575f5ffd5b50919050565b5f5f60a0838503121561042a575f5ffd5b823591506103e38460208501610403565b5f6020828403121561044b575f5ffd5b6101f6826103a7565b5f5f5f60c08486031215610466575f5ffd5b83359250610476602085016103a7565b91506104858560408601610403565b90509250925092565b5f6020828403121561049e575f5ffd5b813560ff811681146101f6575f5ffdfea26469706673582212208970ecce039fc61640344ac43cb561cad855939c9522601b7912d42e07fb494c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xAEA1E3D1 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xBC710575 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xDE899D1F EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xEA6B80B7 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8E30698 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x127D0409 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x19CDF284 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x25D1782D EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C2 JUMP JUMPDEST PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EC JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x1EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x14E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14E JUMP JUMPDEST PUSH0 PUSH2 0xCA JUMP JUMPDEST PUSH2 0xCA PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B JUMP JUMPDEST PUSH2 0x2EA JUMP JUMPDEST PUSH0 PUSH2 0x1F6 DUP4 CALLER DUP5 PUSH2 0x210 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x205 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x20E PUSH0 PUSH2 0x358 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD505ACCF CALLER ADDRESS DUP8 DUP7 CALLDATALOAD PUSH2 0x255 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP10 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0x84 DUP4 ADD MSTORE DUP6 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 SWAP3 POP PUSH2 0x2E2 SWAP2 POP POP JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x329 DUP2 PUSH2 0x358 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x317 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3E3 PUSH1 0x20 DUP5 ADD PUSH2 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xA0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3E3 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x403 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F6 DUP3 PUSH2 0x3A7 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x466 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x476 PUSH1 0x20 DUP6 ADD PUSH2 0x3A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x485 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x403 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F6 JUMPI PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH17 0xECCE039FC61640344AC43CB561CAD85593 SWAP13 SWAP6 0x22 PUSH1 0x1B PUSH26 0x12D42E07FB494C64736F6C634300081C00330000000000000000 ",
							"sourceMap": "252:672:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;655:135;;;;;;;;;;-1:-1:-1;655:135:4;;;;;:::i;:::-;743:18;655:135;;;;;;;;643:25:5;;;631:2;616:18;655:135:4;;;;;;;;812:147:3;;;;;;;;;;-1:-1:-1;812:147:3;;;;;:::i;:::-;-1:-1:-1;872:18:3;;812:147;1266:177;;;;;;;;;;-1:-1:-1;1266:177:3;;;;;:::i;:::-;;:::i;285:28::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1614:32:5;;;1596:51;;1584:2;1569:18;285:28:3;1437:216:5;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;1455:129:3;1510:17;1455:129;;796:125:4;;;;;;:::i;967:287:3:-;;;;;;;;;;-1:-1:-1;967:287:3;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1266:177:3:-;1353:18;1391:44;1409:10;1420;1431:3;1391:17;:44::i;:::-;1384:51;1266:177;-1:-1:-1;;;1266:177:3:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;967:287:3:-;1071:18;-1:-1:-1;;;;;1102:5:3;:12;;1115:10;1135:4;1142:10;1154:12;;1168:5;;;;;;;;:::i;:::-;1175;1102:86;;-1:-1:-1;;;;;;1102:86:3;;;;;;;-1:-1:-1;;;;;3097:32:5;;;1102:86:3;;;3079:51:5;3166:32;;;;3146:18;;;3139:60;3215:18;;;3208:34;;;;3258:18;;;3251:34;3334:4;3322:17;3301:19;;;3294:46;1175:5:3;;;3356:19:5;;;3349:35;1182:5:3;;;;3400:19:5;;;3393:35;3051:19;;1102:86:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;743:18:4;;-1:-1:-1;1206:40:3;;-1:-1:-1;;655:135:4;1206:40:3;1199:47;967:287;-1:-1:-1;;;;967:287:3:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1596:51:5::0;1569:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1596:51:5;1569:18;;1901:40:0;1437:216:5;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:300::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;382:23;;;-1:-1:-1;448:38:5;482:2;467:18;;448:38;:::i;:::-;438:48;;192:300;;;;;:::o;679:226::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;852:23:5;;679:226;-1:-1:-1;679:226:5:o;910:159::-;973:5;1018:3;1009:6;1004:3;1000:16;996:26;993:46;;;1035:1;1032;1025:12;993:46;-1:-1:-1;1057:6:5;910:159;-1:-1:-1;910:159:5:o;1074:358::-;1171:6;1179;1232:3;1220:9;1211:7;1207:23;1203:33;1200:53;;;1249:1;1246;1239:12;1200:53;1294:23;;;-1:-1:-1;1360:66:5;1418:7;1413:2;1398:18;;1360:66;:::i;1866:186::-;1925:6;1978:2;1966:9;1957:7;1953:23;1949:32;1946:52;;;1994:1;1991;1984:12;1946:52;2017:29;2036:9;2017:29;:::i;2057:432::-;2163:6;2171;2179;2232:3;2220:9;2211:7;2207:23;2203:33;2200:53;;;2249:1;2246;2239:12;2200:53;2294:23;;;-1:-1:-1;2360:38:5;2394:2;2379:18;;2360:38;:::i;:::-;2350:48;;2417:66;2475:7;2470:2;2459:9;2455:18;2417:66;:::i;:::-;2407:76;;2057:432;;;;;:::o;2494:269::-;2551:6;2604:2;2592:9;2583:7;2579:23;2575:32;2572:52;;;2620:1;2617;2610:12;2572:52;2659:9;2646:23;2709:4;2702:5;2698:16;2691:5;2688:27;2678:55;;2729:1;2726;2719:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "250400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"asset()": "infinite",
								"erc20ToNativeSwap(uint256)": "283",
								"erc20ToNativeSwap(uint256,(uint256,uint8,bytes32,bytes32))": "infinite",
								"erc20ToNativeSwap(uint256,address)": "372",
								"erc20ToNativeSwap(uint256,address,(uint256,uint8,bytes32,bytes32))": "infinite",
								"getERC20ToNativePrice(uint256)": "327",
								"getNativeToERC20Price(uint256)": "348",
								"nativeToERC20Swap()": "177",
								"nativeToERC20Swap(address)": "361",
								"owner()": "2329",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28439"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 385,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 385,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 385,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 385,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 385,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 300,
									"end": 385,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 300,
									"end": 385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 300,
									"end": 385,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 300,
									"end": 385,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 369,
									"end": 373,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 335,
									"end": 340,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 358,
									"end": 372,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 358,
									"end": 372,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 372,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "700"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 924,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208970ecce039fc61640344ac43cb561cad855939c9522601b7912d42e07fb494c64736f6c634300081c0033",
									".code": [
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "AEA1E3D1"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "BC710575"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "DE899D1F"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "EA6B80B7"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "8E30698"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "127D0409"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "19CDF284"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "25D1782D"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "38D52E0F"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 924,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 655,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 743,
											"end": 761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 655,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 655,
											"end": 790,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 812,
											"end": 959,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 812,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 812,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 812,
											"end": 959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 812,
											"end": 959,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1266,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1266,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "700"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 285,
											"end": 313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 313,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1614,
											"end": 1646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1646,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1647,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 285,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1653,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1584,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1455,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1455,
											"end": 1584,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 921,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 796,
											"end": 921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 796,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 796,
											"end": 921,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 796,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 796,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 796,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 967,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 967,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1409,
											"end": 1419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1430,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1391,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1435,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1391,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1384,
											"end": 1435,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1443,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "700"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "D505ACCF"
										},
										{
											"begin": 1115,
											"end": 1125,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1166,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1166,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1168,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3097,
											"end": 3129,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3129,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3129,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3198,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3198,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3198,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3242,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3242,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3322,
											"end": 3339,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3320,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3301,
											"end": 3320,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3356,
											"end": 3375,
											"name": "PUSH",
											"source": 5,
											"value": "A4"
										},
										{
											"begin": 3356,
											"end": 3375,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3356,
											"end": 3375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "C4"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3070,
											"name": "PUSH",
											"source": 5,
											"value": "E4"
										},
										{
											"begin": 3051,
											"end": 3070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1102,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 743,
											"end": 761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 761,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 790,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1246,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1254,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 967,
											"end": 1254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1647,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1647,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1437,
											"end": 1653,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 192,
											"end": 492,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 382,
											"end": 405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 382,
											"end": 405,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 382,
											"end": 405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 448,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 482,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 467,
											"end": 485,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 467,
											"end": 485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 448,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 448,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 448,
											"end": 486,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 448,
											"end": 486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 438,
											"end": 486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 438,
											"end": 486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 192,
											"end": 492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 192,
											"end": 492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 192,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 679,
											"end": 905,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 679,
											"end": 905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 738,
											"end": 744,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 793,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 770,
											"end": 777,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 766,
											"end": 789,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 762,
											"end": 794,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 759,
											"end": 811,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 759,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 759,
											"end": 811,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 809,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 759,
											"end": 811,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 759,
											"end": 811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 852,
											"end": 875,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 852,
											"end": 875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 679,
											"end": 905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 679,
											"end": 905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 910,
											"end": 1069,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 910,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 973,
											"end": 978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1007,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1022,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1039,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 993,
											"end": 1039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1037,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1039,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 993,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 910,
											"end": 1069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1432,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1074,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1235,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1236,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1317,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1416,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1360,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 2052,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1866,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1976,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1981,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1998,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1946,
											"end": 1998,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 1995,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1996,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1998,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1946,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2017,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2489,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2057,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2220,
											"end": 2229,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2218,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2236,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2200,
											"end": 2253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2253,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2200,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2317,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2317,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2317,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2394,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2360,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2398,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2360,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2475,
											"end": 2482,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2417,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2483,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2417,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2489,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2489,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2489,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2763,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2494,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2601,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2590,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2602,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2607,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2702,
											"end": 2707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2714,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2715,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2678,
											"end": 2733,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
								"src/SwapAbstract.sol",
								"src/Test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"asset()": "38d52e0f",
							"erc20ToNativeSwap(uint256)": "127d0409",
							"erc20ToNativeSwap(uint256,(uint256,uint8,bytes32,bytes32))": "19cdf284",
							"erc20ToNativeSwap(uint256,address)": "08e30698",
							"erc20ToNativeSwap(uint256,address,(uint256,uint8,bytes32,bytes32))": "de899d1f",
							"getERC20ToNativePrice(uint256)": "25d1782d",
							"getNativeToERC20Price(uint256)": "ea6b80b7",
							"nativeToERC20Swap()": "aea1e3d1",
							"nativeToERC20Swap(address)": "bc710575",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"erc20ToNativeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"erc20ToNativeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"erc20ToNativeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Permit2Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"erc20ToNativeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sSold\",\"type\":\"uint256\"}],\"name\":\"getERC20ToNativePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nativesSold\",\"type\":\"uint256\"}],\"name\":\"getNativeToERC20Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToERC20Swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"nativeToERC20Swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20sBought\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Test.sol\":\"Test\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol\":{\"keccak256\":\"0x1c3cdf5158b29b16ba2d2c7ff1f6d4304754605441257e198b46803f0fa9df1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ed3d15fd372495ff76439878fb5e007ae0b39da3ce3d9fd877ee8147647bb2\",\"dweb:/ipfs/QmZ1zC91VhPHMXAdcY8SahJMwDsC2B5q9uXFF16R5eHmkV\"]},\"src/SwapAbstract.sol\":{\"keccak256\":\"0xd90a336e23bdb8b7eac5ff76c41037f513a3168351e479bcfb91f736871ef85f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://772f1b79518bd0a8d14746b6e27a52c8c09e3df60d31fa6be2b88c6687f3f930\",\"dweb:/ipfs/QmQSTqKmKG4z73AuGwsu1rzgP73NJTizy6FkFHjd5rpNEe\"]},\"src/Test.sol\":{\"keccak256\":\"0x940e8582f15d89b970994bf07fb1e934990551dc08c292c663ea71e3df13c516\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2a507c8c4c1f9249cfe6ef263032750576584fbb34c6c10df42381d47b1ab06\",\"dweb:/ipfs/QmdGcYwGzErhR3bADgAHTSTk5VgKXWnsRGdTn4z71D2Vuf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/Test.sol:Test",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/Test.sol:13:36:\n   |\n13 |     function getERC20ToNativePrice(uint erc20sSold) public override view returns (uint nativesBought) {\n   |                                    ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 439,
					"file": "src/Test.sol",
					"start": 424
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/Test.sol:16:36:\n   |\n16 |     function getNativeToERC20Price(uint nativesSold) public override view returns (uint erc20sBought) {\n   |                                    ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 571,
					"file": "src/Test.sol",
					"start": 555
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/Test.sol:19:32:\n   |\n19 |     function erc20ToNativeSwap(uint erc20sSold, address recipient) public override returns (uint nativesBought) {\n   |                                ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 697,
					"file": "src/Test.sol",
					"start": 682
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/Test.sol:19:49:\n   |\n19 |     function erc20ToNativeSwap(uint erc20sSold, address recipient) public override returns (uint nativesBought) {\n   |                                                 ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 716,
					"file": "src/Test.sol",
					"start": 699
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> src/Test.sol:22:32:\n   |\n22 |     function nativeToERC20Swap(address recipient) public override payable returns (uint erc20sBought) {\n   |                                ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 840,
					"file": "src/Test.sol",
					"start": 823
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> src/Test.sol:13:5:\n   |\n13 |     function getERC20ToNativePrice(uint erc20sSold) public override view returns (uint nativesBought) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 518,
					"file": "src/Test.sol",
					"start": 393
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> src/Test.sol:16:5:\n   |\n16 |     function getNativeToERC20Price(uint nativesSold) public override view returns (uint erc20sBought) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 649,
					"file": "src/Test.sol",
					"start": 524
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> src/Test.sol:19:5:\n   |\n19 |     function erc20ToNativeSwap(uint erc20sSold, address recipient) public override returns (uint nativesBought) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 790,
					"file": "src/Test.sol",
					"start": 655
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							685
						]
					},
					"id": 686,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "57:1083:2",
								"text": "@notice Simple ERC20 + EIP-2612 implementation.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\n @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\n @dev Note:\n - The ERC20 standard allows minting and transferring to and from the zero address,\n   minting and transferring zero tokens, as well as self-approvals.\n   For performance, this implementation WILL NOT revert for such actions.\n   Please add any checks with overrides if desired.\n - The `permit` function uses the ecrecover precompile (0x1).\n If you are overriding:\n - NEVER violate the ERC20 invariant:\n   the total sum of all balances must be equal to `totalSupply()`.\n - Check that the overridden function is actually used in the function you want to\n   change the behavior of. Much of the code has been manually inlined for performance."
							},
							"fullyImplemented": false,
							"id": 685,
							"linearizedBaseContracts": [
								685
							],
							"name": "ERC20",
							"nameLocation": "1158:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "1453:41:2",
										"text": "@dev The total supply has overflowed."
									},
									"errorSelector": "e5cfe957",
									"id": 183,
									"name": "TotalSupplyOverflow",
									"nameLocation": "1505:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:2"
									},
									"src": "1499:28:2"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1533:38:2",
										"text": "@dev The allowance has overflowed."
									},
									"errorSelector": "f9067066",
									"id": 186,
									"name": "AllowanceOverflow",
									"nameLocation": "1582:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1599:2:2"
									},
									"src": "1576:26:2"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1608:39:2",
										"text": "@dev The allowance has underflowed."
									},
									"errorSelector": "8301ab38",
									"id": 189,
									"name": "AllowanceUnderflow",
									"nameLocation": "1658:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:2:2"
									},
									"src": "1652:27:2"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1685:30:2",
										"text": "@dev Insufficient balance."
									},
									"errorSelector": "f4d678b8",
									"id": 192,
									"name": "InsufficientBalance",
									"nameLocation": "1726:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1745:2:2"
									},
									"src": "1720:28:2"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1754:32:2",
										"text": "@dev Insufficient allowance."
									},
									"errorSelector": "13be252b",
									"id": 195,
									"name": "InsufficientAllowance",
									"nameLocation": "1797:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:2:2"
									},
									"src": "1791:30:2"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "1827:31:2",
										"text": "@dev The permit is invalid."
									},
									"errorSelector": "ddafbaef",
									"id": 198,
									"name": "InvalidPermit",
									"nameLocation": "1869:13:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1882:2:2"
									},
									"src": "1863:22:2"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1891:32:2",
										"text": "@dev The permit has expired."
									},
									"errorSelector": "1a15a3cc",
									"id": 201,
									"name": "PermitExpired",
									"nameLocation": "1934:13:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:2:2"
									},
									"src": "1928:22:2"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1956:55:2",
										"text": "@dev The allowance of Permit2 is fixed at infinity."
									},
									"errorSelector": "3f68539a",
									"id": 204,
									"name": "Permit2AllowanceIsFixedAtInfinity",
									"nameLocation": "2022:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2055:2:2"
									},
									"src": "2016:42:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2347:73:2",
										"text": "@dev Emitted when `amount` tokens is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 213,
									"name": "Transfer",
									"nameLocation": "2431:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2456:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2440:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2478:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2462:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2490:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2482:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:58:2"
									},
									"src": "2425:73:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "2504:85:2",
										"text": "@dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 222,
									"name": "Approval",
									"nameLocation": "2600:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2625:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2609:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2632:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2657:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:64:2"
									},
									"src": "2594:79:2"
								},
								{
									"constant": true,
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2679:65:2",
										"text": "@dev `keccak256(bytes(\"Transfer(address,address,uint256)\"))`."
									},
									"id": 226,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "2774:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "2749:127:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2749:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2810:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2883:65:2",
										"text": "@dev `keccak256(bytes(\"Approval(address,address,uint256)\"))`."
									},
									"id": 230,
									"mutability": "constant",
									"name": "_APPROVAL_EVENT_SIGNATURE",
									"nameLocation": "2978:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "2953:127:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2953:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307838633562653165356562656337643562643134663731343237643165383466336464303331346330663762323239316535623230306163386337633362393235",
										"id": 229,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3014:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63486140976153616755203102783360879283472101686154884697241723088393386309925_by_1",
											"typeString": "int_const 6348...(69 digits omitted)...9925"
										},
										"value": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3370:47:2",
										"text": "@dev The storage slot for the total supply."
									},
									"id": 234,
									"mutability": "constant",
									"name": "_TOTAL_SUPPLY_SLOT",
									"nameLocation": "3447:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "3422:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 232,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3422:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078303533343563646637376562363866343463",
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3468:20:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96006856662521017420_by_1",
											"typeString": "int_const 96006856662521017420"
										},
										"value": "0x05345cdf77eb68f44c"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3495:203:2",
										"text": "@dev The balance slot of `owner` is given by:\n ```\n     mstore(0x0c, _BALANCE_SLOT_SEED)\n     mstore(0x00, owner)\n     let balanceSlot := keccak256(0x0c, 0x20)\n ```"
									},
									"id": 238,
									"mutability": "constant",
									"name": "_BALANCE_SLOT_SEED",
									"nameLocation": "3728:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "3703:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3703:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783837613231316132",
										"id": 237,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3749:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2275545506_by_1",
											"typeString": "int_const 2275545506"
										},
										"value": "0x87a211a2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "3766:256:2",
										"text": "@dev The allowance slot of (`owner`, `spender`) is given by:\n ```\n     mstore(0x20, spender)\n     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\n     mstore(0x00, owner)\n     let allowanceSlot := keccak256(0x0c, 0x34)\n ```"
									},
									"id": 242,
									"mutability": "constant",
									"name": "_ALLOWANCE_SLOT_SEED",
									"nameLocation": "4052:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "4027:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4027:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783766356539663230",
										"id": 241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4075:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2136907552_by_1",
											"typeString": "int_const 2136907552"
										},
										"value": "0x7f5e9f20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4092:198:2",
										"text": "@dev The nonce slot of `owner` is given by:\n ```\n     mstore(0x0c, _NONCES_SLOT_SEED)\n     mstore(0x00, owner)\n     let nonceSlot := keccak256(0x0c, 0x20)\n ```"
									},
									"id": 246,
									"mutability": "constant",
									"name": "_NONCES_SLOT_SEED",
									"nameLocation": "4320:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "4295:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4295:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783338333737353038",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4340:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_943158536_by_1",
											"typeString": "int_const 943158536"
										},
										"value": "0x38377508"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "4640:46:2",
										"text": "@dev `(_NONCES_SLOT_SEED << 16) | 0x1901`."
									},
									"id": 250,
									"mutability": "constant",
									"name": "_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX",
									"nameLocation": "4716:39:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "4691:81:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 248,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4691:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078333833373735303831393031",
										"id": 249,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4758:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_61810837821697_by_1",
											"typeString": "int_const 61810837821697"
										},
										"value": "0x383775081901"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "4779:107:2",
										"text": "@dev `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`."
									},
									"id": 254,
									"mutability": "constant",
									"name": "_DOMAIN_TYPEHASH",
									"nameLocation": "4916:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "4891:118:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 252,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4891:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307838623733633363363962623866653364353132656363346366373539636337393233396637623137396230666661636161396137356435323262333934303066",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4943:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
											"typeString": "int_const 6307...(69 digits omitted)...1551"
										},
										"value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5016:99:2",
										"text": "@dev `keccak256(\"1\")`.\n If you need to use a different version, override `_versionHash`."
									},
									"id": 258,
									"mutability": "constant",
									"name": "_DEFAULT_VERSION_HASH",
									"nameLocation": "5145:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "5120:123:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 256,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5120:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863383965666461613534633066323063376164663631323838326466303935306635613935313633376530333037636463623463363732663239386238626336",
										"id": 257,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5177:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1",
											"typeString": "int_const 9074...(69 digits omitted)...1126"
										},
										"value": "0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "5250:107:2",
										"text": "@dev `keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")`."
									},
									"id": 262,
									"mutability": "constant",
									"name": "_PERMIT_TYPEHASH",
									"nameLocation": "5387:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "5362:118:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 260,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5362:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 261,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5414:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "5487:340:2",
										"text": "@dev The canonical Permit2 address.\n For signature-based allowance granting for single transaction ERC20 `transferFrom`.\n To enable, override `_givePermit2InfiniteAllowance()`.\n [Github](https://github.com/Uniswap/permit2)\n [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)"
									},
									"id": 266,
									"mutability": "constant",
									"name": "_PERMIT2",
									"nameLocation": "5858:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 685,
									"src": "5832:79:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 264,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5832:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
										"id": 265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5869:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "6201:39:2",
										"text": "@dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6254:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6258:2:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "6290:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6290:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6289:15:2"
									},
									"scope": 685,
									"src": "6245:60:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "6311:41:2",
										"text": "@dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6366:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6372:2:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6404:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6404:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6403:15:2"
									},
									"scope": 685,
									"src": "6357:62:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "6536:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6553:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "6546:9:2"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "6425:50:2",
										"text": "@dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "6489:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6497:2:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "6529:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 281,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6529:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6528:7:2"
									},
									"scope": 685,
									"src": "6480:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6975:127:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7037:59:2",
													"nodeType": "YulBlock",
													"src": "7037:59:2",
													"statements": [
														{
															"nativeSrc": "7051:35:2",
															"nodeType": "YulAssignment",
															"src": "7051:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nativeSrc": "7067:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "7067:18:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "7061:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "7061:5:2"
																},
																"nativeSrc": "7061:25:2",
																"nodeType": "YulFunctionCall",
																"src": "7061:25:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7051:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7051:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 234,
														"isOffset": false,
														"isSlot": false,
														"src": "7067:18:2",
														"valueSize": 1
													},
													{
														"declaration": 291,
														"isOffset": false,
														"isSlot": false,
														"src": "7051:6:2",
														"valueSize": 1
													}
												],
												"id": 293,
												"nodeType": "InlineAssembly",
												"src": "7028:68:2"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "6851:51:2",
										"text": "@dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6916:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6927:2:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6967:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6959:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6959:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6958:16:2"
									},
									"scope": 685,
									"src": "6907:195:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "7247:207:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7309:139:2",
													"nodeType": "YulBlock",
													"src": "7309:139:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7330:4:2",
																		"nodeType": "YulLiteral",
																		"src": "7330:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nativeSrc": "7336:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "7336:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7323:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:2"
																},
																"nativeSrc": "7323:32:2",
																"nodeType": "YulFunctionCall",
																"src": "7323:32:2"
															},
															"nativeSrc": "7323:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "7323:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7375:4:2",
																		"nodeType": "YulLiteral",
																		"src": "7375:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "7381:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "7381:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7368:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:2"
																},
																"nativeSrc": "7368:19:2",
																"nodeType": "YulFunctionCall",
																"src": "7368:19:2"
															},
															"nativeSrc": "7368:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "7368:19:2"
														},
														{
															"nativeSrc": "7400:38:2",
															"nodeType": "YulAssignment",
															"src": "7400:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7426:4:2",
																				"nodeType": "YulLiteral",
																				"src": "7426:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7432:4:2",
																				"nodeType": "YulLiteral",
																				"src": "7432:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "7416:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "7416:9:2"
																		},
																		"nativeSrc": "7416:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "7416:21:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "7410:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "7410:5:2"
																},
																"nativeSrc": "7410:28:2",
																"nodeType": "YulFunctionCall",
																"src": "7410:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7400:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "7336:18:2",
														"valueSize": 1
													},
													{
														"declaration": 298,
														"isOffset": false,
														"isSlot": false,
														"src": "7381:5:2",
														"valueSize": 1
													},
													{
														"declaration": 301,
														"isOffset": false,
														"isSlot": false,
														"src": "7400:6:2",
														"valueSize": 1
													}
												],
												"id": 303,
												"nodeType": "InlineAssembly",
												"src": "7300:148:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "7108:55:2",
										"text": "@dev Returns the amount of tokens owned by `owner`."
									},
									"functionSelector": "70a08231",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7177:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7195:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "7187:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7186:15:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7239:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "7231:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7230:16:2"
									},
									"scope": 685,
									"src": "7168:286:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "7681:363:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 315,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "7695:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7695:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "7691:111:2",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "7728:74:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 317,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "7746:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 318,
																	"name": "_PERMIT2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "7757:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7746:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 326,
															"nodeType": "IfStatement",
															"src": "7742:49:2",
															"trueBody": {
																"expression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7779:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 321,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7779:7:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 320,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7774:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7774:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7788:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7774:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 314,
																"id": 325,
																"nodeType": "Return",
																"src": "7767:24:2"
															}
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "7863:175:2",
													"nodeType": "YulBlock",
													"src": "7863:175:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7884:4:2",
																		"nodeType": "YulLiteral",
																		"src": "7884:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "7890:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "7890:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7877:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:2"
																},
																"nativeSrc": "7877:21:2",
																"nodeType": "YulFunctionCall",
																"src": "7877:21:2"
															},
															"nativeSrc": "7877:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "7877:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7918:4:2",
																		"nodeType": "YulLiteral",
																		"src": "7918:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nativeSrc": "7924:20:2",
																		"nodeType": "YulIdentifier",
																		"src": "7924:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7911:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:2"
																},
																"nativeSrc": "7911:34:2",
																"nodeType": "YulFunctionCall",
																"src": "7911:34:2"
															},
															"nativeSrc": "7911:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "7911:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7965:4:2",
																		"nodeType": "YulLiteral",
																		"src": "7965:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "7971:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "7971:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7958:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7958:6:2"
																},
																"nativeSrc": "7958:19:2",
																"nodeType": "YulFunctionCall",
																"src": "7958:19:2"
															},
															"nativeSrc": "7958:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "7958:19:2"
														},
														{
															"nativeSrc": "7990:38:2",
															"nodeType": "YulAssignment",
															"src": "7990:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8016:4:2",
																				"nodeType": "YulLiteral",
																				"src": "8016:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8022:4:2",
																				"nodeType": "YulLiteral",
																				"src": "8022:4:2",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "8006:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "8006:9:2"
																		},
																		"nativeSrc": "8006:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "8006:21:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "8000:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "8000:5:2"
																},
																"nativeSrc": "8000:28:2",
																"nodeType": "YulFunctionCall",
																"src": "8000:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7990:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 242,
														"isOffset": false,
														"isSlot": false,
														"src": "7924:20:2",
														"valueSize": 1
													},
													{
														"declaration": 308,
														"isOffset": false,
														"isSlot": false,
														"src": "7971:5:2",
														"valueSize": 1
													},
													{
														"declaration": 313,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:6:2",
														"valueSize": 1
													},
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "7890:7:2",
														"valueSize": 1
													}
												],
												"id": 329,
												"nodeType": "InlineAssembly",
												"src": "7854:184:2"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "7460:84:2",
										"text": "@dev Returns the amount of tokens that `spender` can spend on behalf of `owner`."
									},
									"functionSelector": "dd62ed3e",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "7558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7567:32:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7669:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7661:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7660:16:2"
									},
									"scope": 685,
									"src": "7549:495:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "8255:949:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 341,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "8269:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8269:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 345,
												"nodeType": "IfStatement",
												"src": "8265:447:2",
												"trueBody": {
													"id": 344,
													"nodeType": "Block",
													"src": "8302:410:2",
													"statements": [
														{
															"AST": {
																"nativeSrc": "8372:330:2",
																"nodeType": "YulBlock",
																"src": "8372:330:2",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8543:145:2",
																			"nodeType": "YulBlock",
																			"src": "8543:145:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8572:4:2",
																								"nodeType": "YulLiteral",
																								"src": "8572:4:2",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8578:10:2",
																								"nodeType": "YulLiteral",
																								"src": "8578:10:2",
																								"type": "",
																								"value": "0x3f68539a"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "8565:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "8565:6:2"
																						},
																						"nativeSrc": "8565:24:2",
																						"nodeType": "YulFunctionCall",
																						"src": "8565:24:2"
																					},
																					"nativeSrc": "8565:24:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "8565:24:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8659:4:2",
																								"nodeType": "YulLiteral",
																								"src": "8659:4:2",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8665:4:2",
																								"nodeType": "YulLiteral",
																								"src": "8665:4:2",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "8652:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "8652:6:2"
																						},
																						"nativeSrc": "8652:18:2",
																						"nodeType": "YulFunctionCall",
																						"src": "8652:18:2"
																					},
																					"nativeSrc": "8652:18:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "8652:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8487:2:2",
																											"nodeType": "YulLiteral",
																											"src": "8487:2:2",
																											"type": "",
																											"value": "96"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "8495:2:2",
																													"nodeType": "YulLiteral",
																													"src": "8495:2:2",
																													"type": "",
																													"value": "96"
																												},
																												{
																													"name": "spender",
																													"nativeSrc": "8499:7:2",
																													"nodeType": "YulIdentifier",
																													"src": "8499:7:2"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nativeSrc": "8491:3:2",
																												"nodeType": "YulIdentifier",
																												"src": "8491:3:2"
																											},
																											"nativeSrc": "8491:16:2",
																											"nodeType": "YulFunctionCall",
																											"src": "8491:16:2"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "8483:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "8483:3:2"
																									},
																									"nativeSrc": "8483:25:2",
																									"nodeType": "YulFunctionCall",
																									"src": "8483:25:2"
																								},
																								{
																									"name": "_PERMIT2",
																									"nativeSrc": "8510:8:2",
																									"nodeType": "YulIdentifier",
																									"src": "8510:8:2"
																								}
																							],
																							"functionName": {
																								"name": "xor",
																								"nativeSrc": "8479:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "8479:3:2"
																							},
																							"nativeSrc": "8479:40:2",
																							"nodeType": "YulFunctionCall",
																							"src": "8479:40:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "amount",
																											"nativeSrc": "8532:6:2",
																											"nodeType": "YulIdentifier",
																											"src": "8532:6:2"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "8528:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "8528:3:2"
																									},
																									"nativeSrc": "8528:11:2",
																									"nodeType": "YulFunctionCall",
																									"src": "8528:11:2"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "8521:6:2",
																								"nodeType": "YulIdentifier",
																								"src": "8521:6:2"
																							},
																							"nativeSrc": "8521:19:2",
																							"nodeType": "YulFunctionCall",
																							"src": "8521:19:2"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "8476:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "8476:2:2"
																					},
																					"nativeSrc": "8476:65:2",
																					"nodeType": "YulFunctionCall",
																					"src": "8476:65:2"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "8469:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "8469:6:2"
																			},
																			"nativeSrc": "8469:73:2",
																			"nodeType": "YulFunctionCall",
																			"src": "8469:73:2"
																		},
																		"nativeSrc": "8466:222:2",
																		"nodeType": "YulIf",
																		"src": "8466:222:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 266,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8510:8:2",
																	"valueSize": 1
																},
																{
																	"declaration": 336,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8532:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 334,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8499:7:2",
																	"valueSize": 1
																}
															],
															"id": 343,
															"nodeType": "InlineAssembly",
															"src": "8363:339:2"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "8773:404:2",
													"nodeType": "YulBlock",
													"src": "8773:404:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8858:4:2",
																		"nodeType": "YulLiteral",
																		"src": "8858:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "8864:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "8864:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8851:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8851:6:2"
																},
																"nativeSrc": "8851:21:2",
																"nodeType": "YulFunctionCall",
																"src": "8851:21:2"
															},
															"nativeSrc": "8851:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "8851:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8892:4:2",
																		"nodeType": "YulLiteral",
																		"src": "8892:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nativeSrc": "8898:20:2",
																		"nodeType": "YulIdentifier",
																		"src": "8898:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8885:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8885:6:2"
																},
																"nativeSrc": "8885:34:2",
																"nodeType": "YulFunctionCall",
																"src": "8885:34:2"
															},
															"nativeSrc": "8885:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "8885:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8939:4:2",
																		"nodeType": "YulLiteral",
																		"src": "8939:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "8945:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "8945:6:2"
																		},
																		"nativeSrc": "8945:8:2",
																		"nodeType": "YulFunctionCall",
																		"src": "8945:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8932:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:2"
																},
																"nativeSrc": "8932:22:2",
																"nodeType": "YulFunctionCall",
																"src": "8932:22:2"
															},
															"nativeSrc": "8932:22:2",
															"nodeType": "YulExpressionStatement",
															"src": "8932:22:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8984:4:2",
																				"nodeType": "YulLiteral",
																				"src": "8984:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8990:4:2",
																				"nodeType": "YulLiteral",
																				"src": "8990:4:2",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "8974:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "8974:9:2"
																		},
																		"nativeSrc": "8974:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "8974:21:2"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "8997:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "8997:6:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "8967:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8967:6:2"
																},
																"nativeSrc": "8967:37:2",
																"nodeType": "YulFunctionCall",
																"src": "8967:37:2"
															},
															"nativeSrc": "8967:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "8967:37:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9066:4:2",
																		"nodeType": "YulLiteral",
																		"src": "9066:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "9072:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "9072:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9059:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "9059:6:2"
																},
																"nativeSrc": "9059:20:2",
																"nodeType": "YulFunctionCall",
																"src": "9059:20:2"
															},
															"nativeSrc": "9059:20:2",
															"nodeType": "YulExpressionStatement",
															"src": "9059:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9097:4:2",
																		"nodeType": "YulLiteral",
																		"src": "9097:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9103:4:2",
																		"nodeType": "YulLiteral",
																		"src": "9103:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nativeSrc": "9109:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "9109:25:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "9136:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "9136:6:2"
																		},
																		"nativeSrc": "9136:8:2",
																		"nodeType": "YulFunctionCall",
																		"src": "9136:8:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9150:2:2",
																				"nodeType": "YulLiteral",
																				"src": "9150:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9160:4:2",
																						"nodeType": "YulLiteral",
																						"src": "9160:4:2",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "9154:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "9154:5:2"
																				},
																				"nativeSrc": "9154:11:2",
																				"nodeType": "YulFunctionCall",
																				"src": "9154:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "9146:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:2"
																		},
																		"nativeSrc": "9146:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "9146:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "9092:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "9092:4:2"
																},
																"nativeSrc": "9092:75:2",
																"nodeType": "YulFunctionCall",
																"src": "9092:75:2"
															},
															"nativeSrc": "9092:75:2",
															"nodeType": "YulExpressionStatement",
															"src": "9092:75:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 242,
														"isOffset": false,
														"isSlot": false,
														"src": "8898:20:2",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "9109:25:2",
														"valueSize": 1
													},
													{
														"declaration": 336,
														"isOffset": false,
														"isSlot": false,
														"src": "8997:6:2",
														"valueSize": 1
													},
													{
														"declaration": 336,
														"isOffset": false,
														"isSlot": false,
														"src": "9072:6:2",
														"valueSize": 1
													},
													{
														"declaration": 334,
														"isOffset": false,
														"isSlot": false,
														"src": "8864:7:2",
														"valueSize": 1
													}
												],
												"id": 346,
												"nodeType": "InlineAssembly",
												"src": "8764:413:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9193:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 340,
												"id": 348,
												"nodeType": "Return",
												"src": "9186:11:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "8050:120:2",
										"text": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Emits a {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8184:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8200:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "8192:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8217:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "8209:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8209:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8191:33:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "8249:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8249:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8248:6:2"
									},
									"scope": 685,
									"src": "8175:1029:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "9467:1330:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 361,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9498:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9502:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9498:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "9510:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9514:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "9477:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9477:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "9477:44:2"
											},
											{
												"AST": {
													"nativeSrc": "9583:1134:2",
													"nodeType": "YulBlock",
													"src": "9583:1134:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9664:4:2",
																		"nodeType": "YulLiteral",
																		"src": "9664:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nativeSrc": "9670:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "9670:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9657:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:2"
																},
																"nativeSrc": "9657:32:2",
																"nodeType": "YulFunctionCall",
																"src": "9657:32:2"
															},
															"nativeSrc": "9657:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "9657:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9709:4:2",
																		"nodeType": "YulLiteral",
																		"src": "9709:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "9715:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "9715:6:2"
																		},
																		"nativeSrc": "9715:8:2",
																		"nodeType": "YulFunctionCall",
																		"src": "9715:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9702:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "9702:6:2"
																},
																"nativeSrc": "9702:22:2",
																"nodeType": "YulFunctionCall",
																"src": "9702:22:2"
															},
															"nativeSrc": "9702:22:2",
															"nodeType": "YulExpressionStatement",
															"src": "9702:22:2"
														},
														{
															"nativeSrc": "9737:44:2",
															"nodeType": "YulVariableDeclaration",
															"src": "9737:44:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9770:4:2",
																		"nodeType": "YulLiteral",
																		"src": "9770:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9776:4:2",
																		"nodeType": "YulLiteral",
																		"src": "9776:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9760:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "9760:9:2"
																},
																"nativeSrc": "9760:21:2",
																"nodeType": "YulFunctionCall",
																"src": "9760:21:2"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nativeSrc": "9741:15:2",
																	"nodeType": "YulTypedName",
																	"src": "9741:15:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9794:41:2",
															"nodeType": "YulVariableDeclaration",
															"src": "9794:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "9819:15:2",
																		"nodeType": "YulIdentifier",
																		"src": "9819:15:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "9813:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "9813:5:2"
																},
																"nativeSrc": "9813:22:2",
																"nodeType": "YulFunctionCall",
																"src": "9813:22:2"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nativeSrc": "9798:11:2",
																	"nodeType": "YulTypedName",
																	"src": "9798:11:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9922:119:2",
																"nodeType": "YulBlock",
																"src": "9922:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9947:4:2",
																					"nodeType": "YulLiteral",
																					"src": "9947:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9953:10:2",
																					"nodeType": "YulLiteral",
																					"src": "9953:10:2",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9940:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "9940:6:2"
																			},
																			"nativeSrc": "9940:24:2",
																			"nodeType": "YulFunctionCall",
																			"src": "9940:24:2"
																		},
																		"nativeSrc": "9940:24:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "9940:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10016:4:2",
																					"nodeType": "YulLiteral",
																					"src": "10016:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10022:4:2",
																					"nodeType": "YulLiteral",
																					"src": "10022:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10009:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "10009:6:2"
																			},
																			"nativeSrc": "10009:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "10009:18:2"
																		},
																		"nativeSrc": "10009:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "10009:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "9901:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "9901:6:2"
																	},
																	{
																		"name": "fromBalance",
																		"nativeSrc": "9909:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "9909:11:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9898:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "9898:2:2"
																},
																"nativeSrc": "9898:23:2",
																"nodeType": "YulFunctionCall",
																"src": "9898:23:2"
															},
															"nativeSrc": "9895:146:2",
															"nodeType": "YulIf",
															"src": "9895:146:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "10116:15:2",
																		"nodeType": "YulIdentifier",
																		"src": "10116:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "10137:11:2",
																				"nodeType": "YulIdentifier",
																				"src": "10137:11:2"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "10150:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "10150:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10133:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "10133:3:2"
																		},
																		"nativeSrc": "10133:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "10133:24:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10109:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "10109:6:2"
																},
																"nativeSrc": "10109:49:2",
																"nodeType": "YulFunctionCall",
																"src": "10109:49:2"
															},
															"nativeSrc": "10109:49:2",
															"nodeType": "YulExpressionStatement",
															"src": "10109:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10227:4:2",
																		"nodeType": "YulLiteral",
																		"src": "10227:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "10233:2:2",
																		"nodeType": "YulIdentifier",
																		"src": "10233:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10220:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:2"
																},
																"nativeSrc": "10220:16:2",
																"nodeType": "YulFunctionCall",
																"src": "10220:16:2"
															},
															"nativeSrc": "10220:16:2",
															"nodeType": "YulExpressionStatement",
															"src": "10220:16:2"
														},
														{
															"nativeSrc": "10249:42:2",
															"nodeType": "YulVariableDeclaration",
															"src": "10249:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10280:4:2",
																		"nodeType": "YulLiteral",
																		"src": "10280:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10286:4:2",
																		"nodeType": "YulLiteral",
																		"src": "10286:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10270:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "10270:9:2"
																},
																"nativeSrc": "10270:21:2",
																"nodeType": "YulFunctionCall",
																"src": "10270:21:2"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nativeSrc": "10253:13:2",
																	"nodeType": "YulTypedName",
																	"src": "10253:13:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nativeSrc": "10495:13:2",
																		"nodeType": "YulIdentifier",
																		"src": "10495:13:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nativeSrc": "10520:13:2",
																						"nodeType": "YulIdentifier",
																						"src": "10520:13:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "10514:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "10514:5:2"
																				},
																				"nativeSrc": "10514:20:2",
																				"nodeType": "YulFunctionCall",
																				"src": "10514:20:2"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "10536:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "10536:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10510:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "10510:3:2"
																		},
																		"nativeSrc": "10510:33:2",
																		"nodeType": "YulFunctionCall",
																		"src": "10510:33:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10488:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "10488:6:2"
																},
																"nativeSrc": "10488:56:2",
																"nodeType": "YulFunctionCall",
																"src": "10488:56:2"
															},
															"nativeSrc": "10488:56:2",
															"nodeType": "YulExpressionStatement",
															"src": "10488:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10606:4:2",
																		"nodeType": "YulLiteral",
																		"src": "10606:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "10612:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "10612:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10599:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "10599:6:2"
																},
																"nativeSrc": "10599:20:2",
																"nodeType": "YulFunctionCall",
																"src": "10599:20:2"
															},
															"nativeSrc": "10599:20:2",
															"nodeType": "YulExpressionStatement",
															"src": "10599:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10637:4:2",
																		"nodeType": "YulLiteral",
																		"src": "10637:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10643:4:2",
																		"nodeType": "YulLiteral",
																		"src": "10643:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "10649:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "10649:25:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "10676:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "10676:6:2"
																		},
																		"nativeSrc": "10676:8:2",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:8:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10690:2:2",
																				"nodeType": "YulLiteral",
																				"src": "10690:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10700:4:2",
																						"nodeType": "YulLiteral",
																						"src": "10700:4:2",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "10694:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "10694:5:2"
																				},
																				"nativeSrc": "10694:11:2",
																				"nodeType": "YulFunctionCall",
																				"src": "10694:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "10686:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "10686:3:2"
																		},
																		"nativeSrc": "10686:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "10686:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "10632:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "10632:4:2"
																},
																"nativeSrc": "10632:75:2",
																"nodeType": "YulFunctionCall",
																"src": "10632:75:2"
															},
															"nativeSrc": "10632:75:2",
															"nodeType": "YulExpressionStatement",
															"src": "10632:75:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "9670:18:2",
														"valueSize": 1
													},
													{
														"declaration": 226,
														"isOffset": false,
														"isSlot": false,
														"src": "10649:25:2",
														"valueSize": 1
													},
													{
														"declaration": 355,
														"isOffset": false,
														"isSlot": false,
														"src": "10150:6:2",
														"valueSize": 1
													},
													{
														"declaration": 355,
														"isOffset": false,
														"isSlot": false,
														"src": "10536:6:2",
														"valueSize": 1
													},
													{
														"declaration": 355,
														"isOffset": false,
														"isSlot": false,
														"src": "10612:6:2",
														"valueSize": 1
													},
													{
														"declaration": 355,
														"isOffset": false,
														"isSlot": false,
														"src": "9901:6:2",
														"valueSize": 1
													},
													{
														"declaration": 353,
														"isOffset": false,
														"isSlot": false,
														"src": "10233:2:2",
														"valueSize": 1
													}
												],
												"id": 367,
												"nodeType": "InlineAssembly",
												"src": "9574:1143:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 369,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10746:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10750:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10746:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "10758:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "10762:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "10726:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10726:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "10726:43:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10786:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 376,
												"nodeType": "Return",
												"src": "10779:11:2"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "9210:176:2",
										"text": "@dev Transfer `amount` tokens from the caller to `to`.\n Requirements:\n - `from` must at least have `amount`.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "9400:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9417:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "9409:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9429:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "9421:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9408:28:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "9461:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9461:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9460:6:2"
									},
									"scope": 685,
									"src": "9391:1406:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "11259:4659:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "11290:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "11296:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "11300:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "11269:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11269:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "11269:38:2"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 396,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "11391:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11391:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "13702:2142:2",
													"statements": [
														{
															"AST": {
																"nativeSrc": "13772:2062:2",
																"nodeType": "YulBlock",
																"src": "13772:2062:2",
																"statements": [
																	{
																		"nativeSrc": "13790:26:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13790:26:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13807:2:2",
																					"nodeType": "YulLiteral",
																					"src": "13807:2:2",
																					"type": "",
																					"value": "96"
																				},
																				{
																					"name": "from",
																					"nativeSrc": "13811:4:2",
																					"nodeType": "YulIdentifier",
																					"src": "13811:4:2"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "13803:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "13803:3:2"
																			},
																			"nativeSrc": "13803:13:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13803:13:2"
																		},
																		"variables": [
																			{
																				"name": "from_",
																				"nativeSrc": "13794:5:2",
																				"nodeType": "YulTypedName",
																				"src": "13794:5:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13906:4:2",
																					"nodeType": "YulLiteral",
																					"src": "13906:4:2",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "caller",
																						"nativeSrc": "13912:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "13912:6:2"
																					},
																					"nativeSrc": "13912:8:2",
																					"nodeType": "YulFunctionCall",
																					"src": "13912:8:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13899:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "13899:6:2"
																			},
																			"nativeSrc": "13899:22:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13899:22:2"
																		},
																		"nativeSrc": "13899:22:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "13899:22:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13945:4:2",
																					"nodeType": "YulLiteral",
																					"src": "13945:4:2",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"arguments": [
																						{
																							"name": "from_",
																							"nativeSrc": "13954:5:2",
																							"nodeType": "YulIdentifier",
																							"src": "13954:5:2"
																						},
																						{
																							"name": "_ALLOWANCE_SLOT_SEED",
																							"nativeSrc": "13961:20:2",
																							"nodeType": "YulIdentifier",
																							"src": "13961:20:2"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "13951:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "13951:2:2"
																					},
																					"nativeSrc": "13951:31:2",
																					"nodeType": "YulFunctionCall",
																					"src": "13951:31:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13938:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "13938:6:2"
																			},
																			"nativeSrc": "13938:45:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13938:45:2"
																		},
																		"nativeSrc": "13938:45:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "13938:45:2"
																	},
																	{
																		"nativeSrc": "14000:42:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14000:42:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14031:4:2",
																					"nodeType": "YulLiteral",
																					"src": "14031:4:2",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14037:4:2",
																					"nodeType": "YulLiteral",
																					"src": "14037:4:2",
																					"type": "",
																					"value": "0x34"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "14021:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "14021:9:2"
																			},
																			"nativeSrc": "14021:21:2",
																			"nodeType": "YulFunctionCall",
																			"src": "14021:21:2"
																		},
																		"variables": [
																			{
																				"name": "allowanceSlot",
																				"nativeSrc": "14004:13:2",
																				"nodeType": "YulTypedName",
																				"src": "14004:13:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14059:38:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14059:38:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "allowanceSlot",
																					"nativeSrc": "14083:13:2",
																					"nodeType": "YulIdentifier",
																					"src": "14083:13:2"
																				}
																			],
																			"functionName": {
																				"name": "sload",
																				"nativeSrc": "14077:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "14077:5:2"
																			},
																			"nativeSrc": "14077:20:2",
																			"nodeType": "YulFunctionCall",
																			"src": "14077:20:2"
																		},
																		"variables": [
																			{
																				"name": "allowance_",
																				"nativeSrc": "14063:10:2",
																				"nodeType": "YulTypedName",
																				"src": "14063:10:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14203:428:2",
																			"nodeType": "YulBlock",
																			"src": "14203:428:2",
																			"statements": [
																				{
																					"body": {
																						"nativeSrc": "14336:145:2",
																						"nodeType": "YulBlock",
																						"src": "14336:145:2",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "14369:4:2",
																											"nodeType": "YulLiteral",
																											"src": "14369:4:2",
																											"type": "",
																											"value": "0x00"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "14375:10:2",
																											"nodeType": "YulLiteral",
																											"src": "14375:10:2",
																											"type": "",
																											"value": "0x13be252b"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nativeSrc": "14362:6:2",
																										"nodeType": "YulIdentifier",
																										"src": "14362:6:2"
																									},
																									"nativeSrc": "14362:24:2",
																									"nodeType": "YulFunctionCall",
																									"src": "14362:24:2"
																								},
																								"nativeSrc": "14362:24:2",
																								"nodeType": "YulExpressionStatement",
																								"src": "14362:24:2"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "14448:4:2",
																											"nodeType": "YulLiteral",
																											"src": "14448:4:2",
																											"type": "",
																											"value": "0x1c"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "14454:4:2",
																											"nodeType": "YulLiteral",
																											"src": "14454:4:2",
																											"type": "",
																											"value": "0x04"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nativeSrc": "14441:6:2",
																										"nodeType": "YulIdentifier",
																										"src": "14441:6:2"
																									},
																									"nativeSrc": "14441:18:2",
																									"nodeType": "YulFunctionCall",
																									"src": "14441:18:2"
																								},
																								"nativeSrc": "14441:18:2",
																								"nodeType": "YulExpressionStatement",
																								"src": "14441:18:2"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "amount",
																								"nativeSrc": "14316:6:2",
																								"nodeType": "YulIdentifier",
																								"src": "14316:6:2"
																							},
																							{
																								"name": "allowance_",
																								"nativeSrc": "14324:10:2",
																								"nodeType": "YulIdentifier",
																								"src": "14324:10:2"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nativeSrc": "14313:2:2",
																							"nodeType": "YulIdentifier",
																							"src": "14313:2:2"
																						},
																						"nativeSrc": "14313:22:2",
																						"nodeType": "YulFunctionCall",
																						"src": "14313:22:2"
																					},
																					"nativeSrc": "14310:171:2",
																					"nodeType": "YulIf",
																					"src": "14310:171:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "allowanceSlot",
																								"nativeSrc": "14574:13:2",
																								"nodeType": "YulIdentifier",
																								"src": "14574:13:2"
																							},
																							{
																								"arguments": [
																									{
																										"name": "allowance_",
																										"nativeSrc": "14593:10:2",
																										"nodeType": "YulIdentifier",
																										"src": "14593:10:2"
																									},
																									{
																										"name": "amount",
																										"nativeSrc": "14605:6:2",
																										"nodeType": "YulIdentifier",
																										"src": "14605:6:2"
																									}
																								],
																								"functionName": {
																									"name": "sub",
																									"nativeSrc": "14589:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "14589:3:2"
																								},
																								"nativeSrc": "14589:23:2",
																								"nodeType": "YulFunctionCall",
																								"src": "14589:23:2"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "14567:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "14567:6:2"
																						},
																						"nativeSrc": "14567:46:2",
																						"nodeType": "YulFunctionCall",
																						"src": "14567:46:2"
																					},
																					"nativeSrc": "14567:46:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "14567:46:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "allowance_",
																					"nativeSrc": "14191:10:2",
																					"nodeType": "YulIdentifier",
																					"src": "14191:10:2"
																				}
																			],
																			"functionName": {
																				"name": "not",
																				"nativeSrc": "14187:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "14187:3:2"
																			},
																			"nativeSrc": "14187:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "14187:15:2"
																		},
																		"nativeSrc": "14184:447:2",
																		"nodeType": "YulIf",
																		"src": "14184:447:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14719:4:2",
																					"nodeType": "YulLiteral",
																					"src": "14719:4:2",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"arguments": [
																						{
																							"name": "from_",
																							"nativeSrc": "14728:5:2",
																							"nodeType": "YulIdentifier",
																							"src": "14728:5:2"
																						},
																						{
																							"name": "_BALANCE_SLOT_SEED",
																							"nativeSrc": "14735:18:2",
																							"nodeType": "YulIdentifier",
																							"src": "14735:18:2"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "14725:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "14725:2:2"
																					},
																					"nativeSrc": "14725:29:2",
																					"nodeType": "YulFunctionCall",
																					"src": "14725:29:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14712:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "14712:6:2"
																			},
																			"nativeSrc": "14712:43:2",
																			"nodeType": "YulFunctionCall",
																			"src": "14712:43:2"
																		},
																		"nativeSrc": "14712:43:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "14712:43:2"
																	},
																	{
																		"nativeSrc": "14772:44:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14772:44:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14805:4:2",
																					"nodeType": "YulLiteral",
																					"src": "14805:4:2",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14811:4:2",
																					"nodeType": "YulLiteral",
																					"src": "14811:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "14795:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "14795:9:2"
																			},
																			"nativeSrc": "14795:21:2",
																			"nodeType": "YulFunctionCall",
																			"src": "14795:21:2"
																		},
																		"variables": [
																			{
																				"name": "fromBalanceSlot",
																				"nativeSrc": "14776:15:2",
																				"nodeType": "YulTypedName",
																				"src": "14776:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14833:41:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14833:41:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "fromBalanceSlot",
																					"nativeSrc": "14858:15:2",
																					"nodeType": "YulIdentifier",
																					"src": "14858:15:2"
																				}
																			],
																			"functionName": {
																				"name": "sload",
																				"nativeSrc": "14852:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "14852:5:2"
																			},
																			"nativeSrc": "14852:22:2",
																			"nodeType": "YulFunctionCall",
																			"src": "14852:22:2"
																		},
																		"variables": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "14837:11:2",
																				"nodeType": "YulTypedName",
																				"src": "14837:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14969:131:2",
																			"nodeType": "YulBlock",
																			"src": "14969:131:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14998:4:2",
																								"nodeType": "YulLiteral",
																								"src": "14998:4:2",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15004:10:2",
																								"nodeType": "YulLiteral",
																								"src": "15004:10:2",
																								"type": "",
																								"value": "0xf4d678b8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "14991:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "14991:6:2"
																						},
																						"nativeSrc": "14991:24:2",
																						"nodeType": "YulFunctionCall",
																						"src": "14991:24:2"
																					},
																					"nativeSrc": "14991:24:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "14991:24:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15071:4:2",
																								"nodeType": "YulLiteral",
																								"src": "15071:4:2",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15077:4:2",
																								"nodeType": "YulLiteral",
																								"src": "15077:4:2",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "15064:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "15064:6:2"
																						},
																						"nativeSrc": "15064:18:2",
																						"nodeType": "YulFunctionCall",
																						"src": "15064:18:2"
																					},
																					"nativeSrc": "15064:18:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "15064:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nativeSrc": "14948:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "14948:6:2"
																				},
																				{
																					"name": "fromBalance",
																					"nativeSrc": "14956:11:2",
																					"nodeType": "YulIdentifier",
																					"src": "14956:11:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "14945:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "14945:2:2"
																			},
																			"nativeSrc": "14945:23:2",
																			"nodeType": "YulFunctionCall",
																			"src": "14945:23:2"
																		},
																		"nativeSrc": "14942:158:2",
																		"nodeType": "YulIf",
																		"src": "14942:158:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fromBalanceSlot",
																					"nativeSrc": "15183:15:2",
																					"nodeType": "YulIdentifier",
																					"src": "15183:15:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "fromBalance",
																							"nativeSrc": "15204:11:2",
																							"nodeType": "YulIdentifier",
																							"src": "15204:11:2"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "15217:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "15217:6:2"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "15200:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "15200:3:2"
																					},
																					"nativeSrc": "15200:24:2",
																					"nodeType": "YulFunctionCall",
																					"src": "15200:24:2"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "15176:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "15176:6:2"
																			},
																			"nativeSrc": "15176:49:2",
																			"nodeType": "YulFunctionCall",
																			"src": "15176:49:2"
																		},
																		"nativeSrc": "15176:49:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "15176:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15302:4:2",
																					"nodeType": "YulLiteral",
																					"src": "15302:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nativeSrc": "15308:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "15308:2:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15295:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "15295:6:2"
																			},
																			"nativeSrc": "15295:16:2",
																			"nodeType": "YulFunctionCall",
																			"src": "15295:16:2"
																		},
																		"nativeSrc": "15295:16:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "15295:16:2"
																	},
																	{
																		"nativeSrc": "15328:42:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15328:42:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15359:4:2",
																					"nodeType": "YulLiteral",
																					"src": "15359:4:2",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15365:4:2",
																					"nodeType": "YulLiteral",
																					"src": "15365:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "15349:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "15349:9:2"
																			},
																			"nativeSrc": "15349:21:2",
																			"nodeType": "YulFunctionCall",
																			"src": "15349:21:2"
																		},
																		"variables": [
																			{
																				"name": "toBalanceSlot",
																				"nativeSrc": "15332:13:2",
																				"nodeType": "YulTypedName",
																				"src": "15332:13:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "toBalanceSlot",
																					"nativeSrc": "15590:13:2",
																					"nodeType": "YulIdentifier",
																					"src": "15590:13:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "toBalanceSlot",
																									"nativeSrc": "15615:13:2",
																									"nodeType": "YulIdentifier",
																									"src": "15615:13:2"
																								}
																							],
																							"functionName": {
																								"name": "sload",
																								"nativeSrc": "15609:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "15609:5:2"
																							},
																							"nativeSrc": "15609:20:2",
																							"nodeType": "YulFunctionCall",
																							"src": "15609:20:2"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "15631:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "15631:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15605:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "15605:3:2"
																					},
																					"nativeSrc": "15605:33:2",
																					"nodeType": "YulFunctionCall",
																					"src": "15605:33:2"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "15583:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "15583:6:2"
																			},
																			"nativeSrc": "15583:56:2",
																			"nodeType": "YulFunctionCall",
																			"src": "15583:56:2"
																		},
																		"nativeSrc": "15583:56:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "15583:56:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15709:4:2",
																					"nodeType": "YulLiteral",
																					"src": "15709:4:2",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "15715:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "15715:6:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15702:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "15702:6:2"
																			},
																			"nativeSrc": "15702:20:2",
																			"nodeType": "YulFunctionCall",
																			"src": "15702:20:2"
																		},
																		"nativeSrc": "15702:20:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "15702:20:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15744:4:2",
																					"nodeType": "YulLiteral",
																					"src": "15744:4:2",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15750:4:2",
																					"nodeType": "YulLiteral",
																					"src": "15750:4:2",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"name": "_TRANSFER_EVENT_SIGNATURE",
																					"nativeSrc": "15756:25:2",
																					"nodeType": "YulIdentifier",
																					"src": "15756:25:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15787:2:2",
																							"nodeType": "YulLiteral",
																							"src": "15787:2:2",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"name": "from_",
																							"nativeSrc": "15791:5:2",
																							"nodeType": "YulIdentifier",
																							"src": "15791:5:2"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "15783:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "15783:3:2"
																					},
																					"nativeSrc": "15783:14:2",
																					"nodeType": "YulFunctionCall",
																					"src": "15783:14:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15803:2:2",
																							"nodeType": "YulLiteral",
																							"src": "15803:2:2",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "15813:4:2",
																									"nodeType": "YulLiteral",
																									"src": "15813:4:2",
																									"type": "",
																									"value": "0x0c"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "15807:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "15807:5:2"
																							},
																							"nativeSrc": "15807:11:2",
																							"nodeType": "YulFunctionCall",
																							"src": "15807:11:2"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "15799:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "15799:3:2"
																					},
																					"nativeSrc": "15799:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "15799:20:2"
																				}
																			],
																			"functionName": {
																				"name": "log3",
																				"nativeSrc": "15739:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "15739:4:2"
																			},
																			"nativeSrc": "15739:81:2",
																			"nodeType": "YulFunctionCall",
																			"src": "15739:81:2"
																		},
																		"nativeSrc": "15739:81:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "15739:81:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 242,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13961:20:2",
																	"valueSize": 1
																},
																{
																	"declaration": 238,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14735:18:2",
																	"valueSize": 1
																},
																{
																	"declaration": 226,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15756:25:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14316:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14605:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "14948:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15217:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15631:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15715:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 381,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13811:4:2",
																	"valueSize": 1
																},
																{
																	"declaration": 383,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15308:2:2",
																	"valueSize": 1
																}
															],
															"id": 400,
															"nodeType": "InlineAssembly",
															"src": "13763:2071:2"
														}
													]
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "11387:4457:2",
												"trueBody": {
													"id": 399,
													"nodeType": "Block",
													"src": "11424:2272:2",
													"statements": [
														{
															"AST": {
																"nativeSrc": "11494:2192:2",
																"nodeType": "YulBlock",
																"src": "11494:2192:2",
																"statements": [
																	{
																		"nativeSrc": "11512:26:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11512:26:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11529:2:2",
																					"nodeType": "YulLiteral",
																					"src": "11529:2:2",
																					"type": "",
																					"value": "96"
																				},
																				{
																					"name": "from",
																					"nativeSrc": "11533:4:2",
																					"nodeType": "YulIdentifier",
																					"src": "11533:4:2"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "11525:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "11525:3:2"
																			},
																			"nativeSrc": "11525:13:2",
																			"nodeType": "YulFunctionCall",
																			"src": "11525:13:2"
																		},
																		"variables": [
																			{
																				"name": "from_",
																				"nativeSrc": "11516:5:2",
																				"nodeType": "YulTypedName",
																				"src": "11516:5:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11589:894:2",
																			"nodeType": "YulBlock",
																			"src": "11589:894:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11688:4:2",
																								"nodeType": "YulLiteral",
																								"src": "11688:4:2",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "caller",
																									"nativeSrc": "11694:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "11694:6:2"
																								},
																								"nativeSrc": "11694:8:2",
																								"nodeType": "YulFunctionCall",
																								"src": "11694:8:2"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "11681:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "11681:6:2"
																						},
																						"nativeSrc": "11681:22:2",
																						"nodeType": "YulFunctionCall",
																						"src": "11681:22:2"
																					},
																					"nativeSrc": "11681:22:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "11681:22:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11731:4:2",
																								"nodeType": "YulLiteral",
																								"src": "11731:4:2",
																								"type": "",
																								"value": "0x0c"
																							},
																							{
																								"arguments": [
																									{
																										"name": "from_",
																										"nativeSrc": "11740:5:2",
																										"nodeType": "YulIdentifier",
																										"src": "11740:5:2"
																									},
																									{
																										"name": "_ALLOWANCE_SLOT_SEED",
																										"nativeSrc": "11747:20:2",
																										"nodeType": "YulIdentifier",
																										"src": "11747:20:2"
																									}
																								],
																								"functionName": {
																									"name": "or",
																									"nativeSrc": "11737:2:2",
																									"nodeType": "YulIdentifier",
																									"src": "11737:2:2"
																								},
																								"nativeSrc": "11737:31:2",
																								"nodeType": "YulFunctionCall",
																								"src": "11737:31:2"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "11724:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "11724:6:2"
																						},
																						"nativeSrc": "11724:45:2",
																						"nodeType": "YulFunctionCall",
																						"src": "11724:45:2"
																					},
																					"nativeSrc": "11724:45:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "11724:45:2"
																				},
																				{
																					"nativeSrc": "11790:42:2",
																					"nodeType": "YulVariableDeclaration",
																					"src": "11790:42:2",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11821:4:2",
																								"nodeType": "YulLiteral",
																								"src": "11821:4:2",
																								"type": "",
																								"value": "0x0c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11827:4:2",
																								"nodeType": "YulLiteral",
																								"src": "11827:4:2",
																								"type": "",
																								"value": "0x34"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nativeSrc": "11811:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "11811:9:2"
																						},
																						"nativeSrc": "11811:21:2",
																						"nodeType": "YulFunctionCall",
																						"src": "11811:21:2"
																					},
																					"variables": [
																						{
																							"name": "allowanceSlot",
																							"nativeSrc": "11794:13:2",
																							"nodeType": "YulTypedName",
																							"src": "11794:13:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nativeSrc": "11853:38:2",
																					"nodeType": "YulVariableDeclaration",
																					"src": "11853:38:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "allowanceSlot",
																								"nativeSrc": "11877:13:2",
																								"nodeType": "YulIdentifier",
																								"src": "11877:13:2"
																							}
																						],
																						"functionName": {
																							"name": "sload",
																							"nativeSrc": "11871:5:2",
																							"nodeType": "YulIdentifier",
																							"src": "11871:5:2"
																						},
																						"nativeSrc": "11871:20:2",
																						"nodeType": "YulFunctionCall",
																						"src": "11871:20:2"
																					},
																					"variables": [
																						{
																							"name": "allowance_",
																							"nativeSrc": "11857:10:2",
																							"nodeType": "YulTypedName",
																							"src": "11857:10:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"body": {
																						"nativeSrc": "12005:460:2",
																						"nodeType": "YulBlock",
																						"src": "12005:460:2",
																						"statements": [
																							{
																								"body": {
																									"nativeSrc": "12146:157:2",
																									"nodeType": "YulBlock",
																									"src": "12146:157:2",
																									"statements": [
																										{
																											"expression": {
																												"arguments": [
																													{
																														"kind": "number",
																														"nativeSrc": "12183:4:2",
																														"nodeType": "YulLiteral",
																														"src": "12183:4:2",
																														"type": "",
																														"value": "0x00"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "12189:10:2",
																														"nodeType": "YulLiteral",
																														"src": "12189:10:2",
																														"type": "",
																														"value": "0x13be252b"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nativeSrc": "12176:6:2",
																													"nodeType": "YulIdentifier",
																													"src": "12176:6:2"
																												},
																												"nativeSrc": "12176:24:2",
																												"nodeType": "YulFunctionCall",
																												"src": "12176:24:2"
																											},
																											"nativeSrc": "12176:24:2",
																											"nodeType": "YulExpressionStatement",
																											"src": "12176:24:2"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"kind": "number",
																														"nativeSrc": "12266:4:2",
																														"nodeType": "YulLiteral",
																														"src": "12266:4:2",
																														"type": "",
																														"value": "0x1c"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "12272:4:2",
																														"nodeType": "YulLiteral",
																														"src": "12272:4:2",
																														"type": "",
																														"value": "0x04"
																													}
																												],
																												"functionName": {
																													"name": "revert",
																													"nativeSrc": "12259:6:2",
																													"nodeType": "YulIdentifier",
																													"src": "12259:6:2"
																												},
																												"nativeSrc": "12259:18:2",
																												"nodeType": "YulFunctionCall",
																												"src": "12259:18:2"
																											},
																											"nativeSrc": "12259:18:2",
																											"nodeType": "YulExpressionStatement",
																											"src": "12259:18:2"
																										}
																									]
																								},
																								"condition": {
																									"arguments": [
																										{
																											"name": "amount",
																											"nativeSrc": "12126:6:2",
																											"nodeType": "YulIdentifier",
																											"src": "12126:6:2"
																										},
																										{
																											"name": "allowance_",
																											"nativeSrc": "12134:10:2",
																											"nodeType": "YulIdentifier",
																											"src": "12134:10:2"
																										}
																									],
																									"functionName": {
																										"name": "gt",
																										"nativeSrc": "12123:2:2",
																										"nodeType": "YulIdentifier",
																										"src": "12123:2:2"
																									},
																									"nativeSrc": "12123:22:2",
																									"nodeType": "YulFunctionCall",
																									"src": "12123:22:2"
																								},
																								"nativeSrc": "12120:183:2",
																								"nodeType": "YulIf",
																								"src": "12120:183:2"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "allowanceSlot",
																											"nativeSrc": "12404:13:2",
																											"nodeType": "YulIdentifier",
																											"src": "12404:13:2"
																										},
																										{
																											"arguments": [
																												{
																													"name": "allowance_",
																													"nativeSrc": "12423:10:2",
																													"nodeType": "YulIdentifier",
																													"src": "12423:10:2"
																												},
																												{
																													"name": "amount",
																													"nativeSrc": "12435:6:2",
																													"nodeType": "YulIdentifier",
																													"src": "12435:6:2"
																												}
																											],
																											"functionName": {
																												"name": "sub",
																												"nativeSrc": "12419:3:2",
																												"nodeType": "YulIdentifier",
																												"src": "12419:3:2"
																											},
																											"nativeSrc": "12419:23:2",
																											"nodeType": "YulFunctionCall",
																											"src": "12419:23:2"
																										}
																									],
																									"functionName": {
																										"name": "sstore",
																										"nativeSrc": "12397:6:2",
																										"nodeType": "YulIdentifier",
																										"src": "12397:6:2"
																									},
																									"nativeSrc": "12397:46:2",
																									"nodeType": "YulFunctionCall",
																									"src": "12397:46:2"
																								},
																								"nativeSrc": "12397:46:2",
																								"nodeType": "YulExpressionStatement",
																								"src": "12397:46:2"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "allowance_",
																								"nativeSrc": "11993:10:2",
																								"nodeType": "YulIdentifier",
																								"src": "11993:10:2"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "11989:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "11989:3:2"
																						},
																						"nativeSrc": "11989:15:2",
																						"nodeType": "YulFunctionCall",
																						"src": "11989:15:2"
																					},
																					"nativeSrc": "11986:479:2",
																					"nodeType": "YulIf",
																					"src": "11986:479:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "caller",
																								"nativeSrc": "11568:6:2",
																								"nodeType": "YulIdentifier",
																								"src": "11568:6:2"
																							},
																							"nativeSrc": "11568:8:2",
																							"nodeType": "YulFunctionCall",
																							"src": "11568:8:2"
																						},
																						{
																							"name": "_PERMIT2",
																							"nativeSrc": "11578:8:2",
																							"nodeType": "YulIdentifier",
																							"src": "11578:8:2"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nativeSrc": "11565:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "11565:2:2"
																					},
																					"nativeSrc": "11565:22:2",
																					"nodeType": "YulFunctionCall",
																					"src": "11565:22:2"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "11558:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "11558:6:2"
																			},
																			"nativeSrc": "11558:30:2",
																			"nodeType": "YulFunctionCall",
																			"src": "11558:30:2"
																		},
																		"nativeSrc": "11555:928:2",
																		"nodeType": "YulIf",
																		"src": "11555:928:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12571:4:2",
																					"nodeType": "YulLiteral",
																					"src": "12571:4:2",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"arguments": [
																						{
																							"name": "from_",
																							"nativeSrc": "12580:5:2",
																							"nodeType": "YulIdentifier",
																							"src": "12580:5:2"
																						},
																						{
																							"name": "_BALANCE_SLOT_SEED",
																							"nativeSrc": "12587:18:2",
																							"nodeType": "YulIdentifier",
																							"src": "12587:18:2"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "12577:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "12577:2:2"
																					},
																					"nativeSrc": "12577:29:2",
																					"nodeType": "YulFunctionCall",
																					"src": "12577:29:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12564:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "12564:6:2"
																			},
																			"nativeSrc": "12564:43:2",
																			"nodeType": "YulFunctionCall",
																			"src": "12564:43:2"
																		},
																		"nativeSrc": "12564:43:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "12564:43:2"
																	},
																	{
																		"nativeSrc": "12624:44:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12624:44:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12657:4:2",
																					"nodeType": "YulLiteral",
																					"src": "12657:4:2",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12663:4:2",
																					"nodeType": "YulLiteral",
																					"src": "12663:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "12647:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "12647:9:2"
																			},
																			"nativeSrc": "12647:21:2",
																			"nodeType": "YulFunctionCall",
																			"src": "12647:21:2"
																		},
																		"variables": [
																			{
																				"name": "fromBalanceSlot",
																				"nativeSrc": "12628:15:2",
																				"nodeType": "YulTypedName",
																				"src": "12628:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12685:41:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12685:41:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "fromBalanceSlot",
																					"nativeSrc": "12710:15:2",
																					"nodeType": "YulIdentifier",
																					"src": "12710:15:2"
																				}
																			],
																			"functionName": {
																				"name": "sload",
																				"nativeSrc": "12704:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "12704:5:2"
																			},
																			"nativeSrc": "12704:22:2",
																			"nodeType": "YulFunctionCall",
																			"src": "12704:22:2"
																		},
																		"variables": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "12689:11:2",
																				"nodeType": "YulTypedName",
																				"src": "12689:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12821:131:2",
																			"nodeType": "YulBlock",
																			"src": "12821:131:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12850:4:2",
																								"nodeType": "YulLiteral",
																								"src": "12850:4:2",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12856:10:2",
																								"nodeType": "YulLiteral",
																								"src": "12856:10:2",
																								"type": "",
																								"value": "0xf4d678b8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "12843:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "12843:6:2"
																						},
																						"nativeSrc": "12843:24:2",
																						"nodeType": "YulFunctionCall",
																						"src": "12843:24:2"
																					},
																					"nativeSrc": "12843:24:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "12843:24:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12923:4:2",
																								"nodeType": "YulLiteral",
																								"src": "12923:4:2",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12929:4:2",
																								"nodeType": "YulLiteral",
																								"src": "12929:4:2",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "12916:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "12916:6:2"
																						},
																						"nativeSrc": "12916:18:2",
																						"nodeType": "YulFunctionCall",
																						"src": "12916:18:2"
																					},
																					"nativeSrc": "12916:18:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "12916:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nativeSrc": "12800:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "12800:6:2"
																				},
																				{
																					"name": "fromBalance",
																					"nativeSrc": "12808:11:2",
																					"nodeType": "YulIdentifier",
																					"src": "12808:11:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "12797:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "12797:2:2"
																			},
																			"nativeSrc": "12797:23:2",
																			"nodeType": "YulFunctionCall",
																			"src": "12797:23:2"
																		},
																		"nativeSrc": "12794:158:2",
																		"nodeType": "YulIf",
																		"src": "12794:158:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fromBalanceSlot",
																					"nativeSrc": "13035:15:2",
																					"nodeType": "YulIdentifier",
																					"src": "13035:15:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "fromBalance",
																							"nativeSrc": "13056:11:2",
																							"nodeType": "YulIdentifier",
																							"src": "13056:11:2"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "13069:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "13069:6:2"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "13052:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "13052:3:2"
																					},
																					"nativeSrc": "13052:24:2",
																					"nodeType": "YulFunctionCall",
																					"src": "13052:24:2"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "13028:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "13028:6:2"
																			},
																			"nativeSrc": "13028:49:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13028:49:2"
																		},
																		"nativeSrc": "13028:49:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "13028:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13154:4:2",
																					"nodeType": "YulLiteral",
																					"src": "13154:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nativeSrc": "13160:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "13160:2:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13147:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "13147:6:2"
																			},
																			"nativeSrc": "13147:16:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13147:16:2"
																		},
																		"nativeSrc": "13147:16:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "13147:16:2"
																	},
																	{
																		"nativeSrc": "13180:42:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13180:42:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13211:4:2",
																					"nodeType": "YulLiteral",
																					"src": "13211:4:2",
																					"type": "",
																					"value": "0x0c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13217:4:2",
																					"nodeType": "YulLiteral",
																					"src": "13217:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "13201:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "13201:9:2"
																			},
																			"nativeSrc": "13201:21:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13201:21:2"
																		},
																		"variables": [
																			{
																				"name": "toBalanceSlot",
																				"nativeSrc": "13184:13:2",
																				"nodeType": "YulTypedName",
																				"src": "13184:13:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "toBalanceSlot",
																					"nativeSrc": "13442:13:2",
																					"nodeType": "YulIdentifier",
																					"src": "13442:13:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "toBalanceSlot",
																									"nativeSrc": "13467:13:2",
																									"nodeType": "YulIdentifier",
																									"src": "13467:13:2"
																								}
																							],
																							"functionName": {
																								"name": "sload",
																								"nativeSrc": "13461:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "13461:5:2"
																							},
																							"nativeSrc": "13461:20:2",
																							"nodeType": "YulFunctionCall",
																							"src": "13461:20:2"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "13483:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "13483:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13457:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "13457:3:2"
																					},
																					"nativeSrc": "13457:33:2",
																					"nodeType": "YulFunctionCall",
																					"src": "13457:33:2"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "13435:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "13435:6:2"
																			},
																			"nativeSrc": "13435:56:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13435:56:2"
																		},
																		"nativeSrc": "13435:56:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "13435:56:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13561:4:2",
																					"nodeType": "YulLiteral",
																					"src": "13561:4:2",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"name": "amount",
																					"nativeSrc": "13567:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "13567:6:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13554:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "13554:6:2"
																			},
																			"nativeSrc": "13554:20:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13554:20:2"
																		},
																		"nativeSrc": "13554:20:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "13554:20:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13596:4:2",
																					"nodeType": "YulLiteral",
																					"src": "13596:4:2",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13602:4:2",
																					"nodeType": "YulLiteral",
																					"src": "13602:4:2",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"name": "_TRANSFER_EVENT_SIGNATURE",
																					"nativeSrc": "13608:25:2",
																					"nodeType": "YulIdentifier",
																					"src": "13608:25:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13639:2:2",
																							"nodeType": "YulLiteral",
																							"src": "13639:2:2",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"name": "from_",
																							"nativeSrc": "13643:5:2",
																							"nodeType": "YulIdentifier",
																							"src": "13643:5:2"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "13635:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "13635:3:2"
																					},
																					"nativeSrc": "13635:14:2",
																					"nodeType": "YulFunctionCall",
																					"src": "13635:14:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13655:2:2",
																							"nodeType": "YulLiteral",
																							"src": "13655:2:2",
																							"type": "",
																							"value": "96"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13665:4:2",
																									"nodeType": "YulLiteral",
																									"src": "13665:4:2",
																									"type": "",
																									"value": "0x0c"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "13659:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "13659:5:2"
																							},
																							"nativeSrc": "13659:11:2",
																							"nodeType": "YulFunctionCall",
																							"src": "13659:11:2"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "13651:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "13651:3:2"
																					},
																					"nativeSrc": "13651:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "13651:20:2"
																				}
																			],
																			"functionName": {
																				"name": "log3",
																				"nativeSrc": "13591:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "13591:4:2"
																			},
																			"nativeSrc": "13591:81:2",
																			"nodeType": "YulFunctionCall",
																			"src": "13591:81:2"
																		},
																		"nativeSrc": "13591:81:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "13591:81:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 242,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11747:20:2",
																	"valueSize": 1
																},
																{
																	"declaration": 238,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12587:18:2",
																	"valueSize": 1
																},
																{
																	"declaration": 266,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11578:8:2",
																	"valueSize": 1
																},
																{
																	"declaration": 226,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13608:25:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12126:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12435:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12800:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13069:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13483:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 385,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13567:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 381,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11533:4:2",
																	"valueSize": 1
																},
																{
																	"declaration": 383,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "13160:2:2",
																	"valueSize": 1
																}
															],
															"id": 398,
															"nodeType": "InlineAssembly",
															"src": "11485:2201:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "15873:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "15879:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "15883:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 403,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "15853:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15853:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "15853:37:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15907:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 389,
												"id": 410,
												"nodeType": "Return",
												"src": "15900:11:2"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "10803:357:2",
										"text": "@dev Transfers `amount` tokens from `from` to `to`.\n Note: Does not update the allowance if it is the maximum uint256 value.\n Requirements:\n - `from` must at least have `amount`.\n - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11174:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11195:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "11187:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11209:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "11201:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11221:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "11213:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11213:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11186:42:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "11253:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11253:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11252:6:2"
									},
									"scope": 685,
									"src": "11165:4753:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "16425:2:2",
										"statements": []
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "16207:137:2",
										"text": "@dev For more performance, override to return the constant value\n of `keccak256(bytes(name()))` if `name()` will never change."
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_constantNameHash",
									"nameLocation": "16358:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16375:2:2"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16417:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "16409:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 415,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16409:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16408:16:2"
									},
									"scope": 685,
									"src": "16349:78:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "16572:47:2",
										"statements": [
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "16582:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 426,
														"name": "_DEFAULT_VERSION_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "16591:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "16582:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "16582:30:2"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "16433:63:2",
										"text": "@dev If you need a different value, override this function."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_versionHash",
									"nameLocation": "16510:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16522:2:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16564:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "16556:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16556:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16555:16:2"
									},
									"scope": 685,
									"src": "16501:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "16744:262:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16806:194:2",
													"nodeType": "YulBlock",
													"src": "16806:194:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16827:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16827:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED",
																		"nativeSrc": "16833:17:2",
																		"nodeType": "YulIdentifier",
																		"src": "16833:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16820:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16820:6:2"
																},
																"nativeSrc": "16820:31:2",
																"nodeType": "YulFunctionCall",
																"src": "16820:31:2"
															},
															"nativeSrc": "16820:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "16820:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16871:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16871:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "16877:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "16877:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16864:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16864:6:2"
																},
																"nativeSrc": "16864:19:2",
																"nodeType": "YulFunctionCall",
																"src": "16864:19:2"
															},
															"nativeSrc": "16864:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "16864:19:2"
														},
														{
															"nativeSrc": "16896:38:2",
															"nodeType": "YulVariableDeclaration",
															"src": "16896:38:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16923:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16923:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16929:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16929:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16913:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "16913:9:2"
																},
																"nativeSrc": "16913:21:2",
																"nodeType": "YulFunctionCall",
																"src": "16913:21:2"
															},
															"variables": [
																{
																	"name": "nonceSlot",
																	"nativeSrc": "16900:9:2",
																	"nodeType": "YulTypedName",
																	"src": "16900:9:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nativeSrc": "16954:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "16954:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16969:1:2",
																				"nodeType": "YulLiteral",
																				"src": "16969:1:2",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "nonceSlot",
																						"nativeSrc": "16978:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "16978:9:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16972:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "16972:5:2"
																				},
																				"nativeSrc": "16972:16:2",
																				"nodeType": "YulFunctionCall",
																				"src": "16972:16:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16965:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16965:3:2"
																		},
																		"nativeSrc": "16965:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16965:24:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16947:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16947:6:2"
																},
																"nativeSrc": "16947:43:2",
																"nodeType": "YulFunctionCall",
																"src": "16947:43:2"
															},
															"nativeSrc": "16947:43:2",
															"nodeType": "YulExpressionStatement",
															"src": "16947:43:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 246,
														"isOffset": false,
														"isSlot": false,
														"src": "16833:17:2",
														"valueSize": 1
													},
													{
														"declaration": 433,
														"isOffset": false,
														"isSlot": false,
														"src": "16877:5:2",
														"valueSize": 1
													}
												],
												"id": 436,
												"nodeType": "InlineAssembly",
												"src": "16797:203:2"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "16625:57:2",
										"text": "@dev For inheriting contracts to increment the nonce."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_incrementNonce",
									"nameLocation": "16696:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16720:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "16712:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16711:15:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16744:0:2"
									},
									"scope": 685,
									"src": "16687:319:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "17213:264:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17275:196:2",
													"nodeType": "YulBlock",
													"src": "17275:196:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17354:4:2",
																		"nodeType": "YulLiteral",
																		"src": "17354:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED",
																		"nativeSrc": "17360:17:2",
																		"nodeType": "YulIdentifier",
																		"src": "17360:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17347:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17347:6:2"
																},
																"nativeSrc": "17347:31:2",
																"nodeType": "YulFunctionCall",
																"src": "17347:31:2"
															},
															"nativeSrc": "17347:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "17347:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17398:4:2",
																		"nodeType": "YulLiteral",
																		"src": "17398:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "17404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "17404:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17391:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17391:6:2"
																},
																"nativeSrc": "17391:19:2",
																"nodeType": "YulFunctionCall",
																"src": "17391:19:2"
															},
															"nativeSrc": "17391:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "17391:19:2"
														},
														{
															"nativeSrc": "17423:38:2",
															"nodeType": "YulAssignment",
															"src": "17423:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17449:4:2",
																				"nodeType": "YulLiteral",
																				"src": "17449:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17455:4:2",
																				"nodeType": "YulLiteral",
																				"src": "17455:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "17439:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "17439:9:2"
																		},
																		"nativeSrc": "17439:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "17439:21:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "17433:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "17433:5:2"
																},
																"nativeSrc": "17433:28:2",
																"nodeType": "YulFunctionCall",
																"src": "17433:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17423:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17423:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 246,
														"isOffset": false,
														"isSlot": false,
														"src": "17360:17:2",
														"valueSize": 1
													},
													{
														"declaration": 441,
														"isOffset": false,
														"isSlot": false,
														"src": "17404:5:2",
														"valueSize": 1
													},
													{
														"declaration": 444,
														"isOffset": false,
														"isSlot": false,
														"src": "17423:6:2",
														"valueSize": 1
													}
												],
												"id": 446,
												"nodeType": "InlineAssembly",
												"src": "17266:205:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "17012:120:2",
										"text": "@dev Returns the current nonce for `owner`.\n This value is used to compute the signature for EIP-2612 permit."
									},
									"functionSelector": "7ecebe00",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "17146:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17161:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "17153:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17152:15:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17205:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "17197:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17197:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17196:16:2"
									},
									"scope": 685,
									"src": "17137:340:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "17850:3527:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 466,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "17864:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17864:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"nodeType": "IfStatement",
												"src": "17860:445:2",
												"trueBody": {
													"id": 469,
													"nodeType": "Block",
													"src": "17897:408:2",
													"statements": [
														{
															"AST": {
																"nativeSrc": "17967:328:2",
																"nodeType": "YulBlock",
																"src": "17967:328:2",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "18136:145:2",
																			"nodeType": "YulBlock",
																			"src": "18136:145:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18165:4:2",
																								"nodeType": "YulLiteral",
																								"src": "18165:4:2",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18171:10:2",
																								"nodeType": "YulLiteral",
																								"src": "18171:10:2",
																								"type": "",
																								"value": "0x3f68539a"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "18158:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "18158:6:2"
																						},
																						"nativeSrc": "18158:24:2",
																						"nodeType": "YulFunctionCall",
																						"src": "18158:24:2"
																					},
																					"nativeSrc": "18158:24:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "18158:24:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18252:4:2",
																								"nodeType": "YulLiteral",
																								"src": "18252:4:2",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18258:4:2",
																								"nodeType": "YulLiteral",
																								"src": "18258:4:2",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "18245:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "18245:6:2"
																						},
																						"nativeSrc": "18245:18:2",
																						"nodeType": "YulFunctionCall",
																						"src": "18245:18:2"
																					},
																					"nativeSrc": "18245:18:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "18245:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "18081:2:2",
																											"nodeType": "YulLiteral",
																											"src": "18081:2:2",
																											"type": "",
																											"value": "96"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "18089:2:2",
																													"nodeType": "YulLiteral",
																													"src": "18089:2:2",
																													"type": "",
																													"value": "96"
																												},
																												{
																													"name": "spender",
																													"nativeSrc": "18093:7:2",
																													"nodeType": "YulIdentifier",
																													"src": "18093:7:2"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nativeSrc": "18085:3:2",
																												"nodeType": "YulIdentifier",
																												"src": "18085:3:2"
																											},
																											"nativeSrc": "18085:16:2",
																											"nodeType": "YulFunctionCall",
																											"src": "18085:16:2"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "18077:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "18077:3:2"
																									},
																									"nativeSrc": "18077:25:2",
																									"nodeType": "YulFunctionCall",
																									"src": "18077:25:2"
																								},
																								{
																									"name": "_PERMIT2",
																									"nativeSrc": "18104:8:2",
																									"nodeType": "YulIdentifier",
																									"src": "18104:8:2"
																								}
																							],
																							"functionName": {
																								"name": "xor",
																								"nativeSrc": "18073:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "18073:3:2"
																							},
																							"nativeSrc": "18073:40:2",
																							"nodeType": "YulFunctionCall",
																							"src": "18073:40:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "18126:5:2",
																											"nodeType": "YulIdentifier",
																											"src": "18126:5:2"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "18122:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "18122:3:2"
																									},
																									"nativeSrc": "18122:10:2",
																									"nodeType": "YulFunctionCall",
																									"src": "18122:10:2"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "18115:6:2",
																								"nodeType": "YulIdentifier",
																								"src": "18115:6:2"
																							},
																							"nativeSrc": "18115:18:2",
																							"nodeType": "YulFunctionCall",
																							"src": "18115:18:2"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "18070:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "18070:2:2"
																					},
																					"nativeSrc": "18070:64:2",
																					"nodeType": "YulFunctionCall",
																					"src": "18070:64:2"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "18063:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "18063:6:2"
																			},
																			"nativeSrc": "18063:72:2",
																			"nodeType": "YulFunctionCall",
																			"src": "18063:72:2"
																		},
																		"nativeSrc": "18060:221:2",
																		"nodeType": "YulIf",
																		"src": "18060:221:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 266,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18104:8:2",
																	"valueSize": 1
																},
																{
																	"declaration": 453,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18093:7:2",
																	"valueSize": 1
																},
																{
																	"declaration": 455,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18126:5:2",
																	"valueSize": 1
																}
															],
															"id": 468,
															"nodeType": "InlineAssembly",
															"src": "17958:337:2"
														}
													]
												}
											},
											{
												"assignments": [
													472
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "nameHash",
														"nameLocation": "18322:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "18314:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 471,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "18314:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 473,
														"name": "_constantNameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "18333:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18333:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18314:38:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 476,
														"name": "nameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "18460:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18480:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18472:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 477,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "18472:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18472:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "18460:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "18456:63:2",
												"trueBody": {
													"expression": {
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 482,
															"name": "nameHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "18484:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 486,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "18511:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																					"typeString": "function () view returns (string memory)"
																				}
																			},
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18511:6:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18505:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 484,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "18505:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18505:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 483,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "18495:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18495:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "18484:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 491,
													"nodeType": "ExpressionStatement",
													"src": "18484:35:2"
												}
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "versionHash",
														"nameLocation": "18537:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "18529:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 493,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "18529:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 495,
														"name": "_versionHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "18551:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18551:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18529:36:2"
											},
											{
												"AST": {
													"nativeSrc": "18627:2744:2",
													"nodeType": "YulBlock",
													"src": "18627:2744:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "18743:113:2",
																"nodeType": "YulBlock",
																"src": "18743:113:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18768:4:2",
																					"nodeType": "YulLiteral",
																					"src": "18768:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18774:10:2",
																					"nodeType": "YulLiteral",
																					"src": "18774:10:2",
																					"type": "",
																					"value": "0x1a15a3cc"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "18761:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "18761:6:2"
																			},
																			"nativeSrc": "18761:24:2",
																			"nodeType": "YulFunctionCall",
																			"src": "18761:24:2"
																		},
																		"nativeSrc": "18761:24:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "18761:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18831:4:2",
																					"nodeType": "YulLiteral",
																					"src": "18831:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18837:4:2",
																					"nodeType": "YulLiteral",
																					"src": "18837:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18824:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "18824:6:2"
																			},
																			"nativeSrc": "18824:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "18824:18:2"
																		},
																		"nativeSrc": "18824:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "18824:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "timestamp",
																			"nativeSrc": "18720:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "18720:9:2"
																		},
																		"nativeSrc": "18720:11:2",
																		"nodeType": "YulFunctionCall",
																		"src": "18720:11:2"
																	},
																	{
																		"name": "deadline",
																		"nativeSrc": "18733:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "18733:8:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18717:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "18717:2:2"
																},
																"nativeSrc": "18717:25:2",
																"nodeType": "YulFunctionCall",
																"src": "18717:25:2"
															},
															"nativeSrc": "18714:142:2",
															"nodeType": "YulIf",
															"src": "18714:142:2"
														},
														{
															"nativeSrc": "18869:20:2",
															"nodeType": "YulVariableDeclaration",
															"src": "18869:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18884:4:2",
																		"nodeType": "YulLiteral",
																		"src": "18884:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18878:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "18878:5:2"
																},
																"nativeSrc": "18878:11:2",
																"nodeType": "YulFunctionCall",
																"src": "18878:11:2"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "18873:1:2",
																	"nodeType": "YulTypedName",
																	"src": "18873:1:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18975:32:2",
															"nodeType": "YulAssignment",
															"src": "18975:32:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18988:2:2",
																		"nodeType": "YulLiteral",
																		"src": "18988:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18996:2:2",
																				"nodeType": "YulLiteral",
																				"src": "18996:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "19000:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "19000:5:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "18992:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "18992:3:2"
																		},
																		"nativeSrc": "18992:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "18992:14:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18984:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "18984:3:2"
																},
																"nativeSrc": "18984:23:2",
																"nodeType": "YulFunctionCall",
																"src": "18984:23:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "18975:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "18975:5:2"
																}
															]
														},
														{
															"nativeSrc": "19020:36:2",
															"nodeType": "YulAssignment",
															"src": "19020:36:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19035:2:2",
																		"nodeType": "YulLiteral",
																		"src": "19035:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19043:2:2",
																				"nodeType": "YulLiteral",
																				"src": "19043:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "spender",
																				"nativeSrc": "19047:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "19047:7:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "19039:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19039:3:2"
																		},
																		"nativeSrc": "19039:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19039:16:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "19031:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "19031:3:2"
																},
																"nativeSrc": "19031:25:2",
																"nodeType": "YulFunctionCall",
																"src": "19031:25:2"
															},
															"variableNames": [
																{
																	"name": "spender",
																	"nativeSrc": "19020:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "19020:7:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19134:4:2",
																		"nodeType": "YulLiteral",
																		"src": "19134:4:2",
																		"type": "",
																		"value": "0x0e"
																	},
																	{
																		"name": "_NONCES_SLOT_SEED_WITH_SIGNATURE_PREFIX",
																		"nativeSrc": "19140:39:2",
																		"nodeType": "YulIdentifier",
																		"src": "19140:39:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19127:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19127:6:2"
																},
																"nativeSrc": "19127:53:2",
																"nodeType": "YulFunctionCall",
																"src": "19127:53:2"
															},
															"nativeSrc": "19127:53:2",
															"nodeType": "YulExpressionStatement",
															"src": "19127:53:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19200:4:2",
																		"nodeType": "YulLiteral",
																		"src": "19200:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "19206:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "19206:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19193:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19193:6:2"
																},
																"nativeSrc": "19193:19:2",
																"nodeType": "YulFunctionCall",
																"src": "19193:19:2"
															},
															"nativeSrc": "19193:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "19193:19:2"
														},
														{
															"nativeSrc": "19225:38:2",
															"nodeType": "YulVariableDeclaration",
															"src": "19225:38:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19252:4:2",
																		"nodeType": "YulLiteral",
																		"src": "19252:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19258:4:2",
																		"nodeType": "YulLiteral",
																		"src": "19258:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "19242:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "19242:9:2"
																},
																"nativeSrc": "19242:21:2",
																"nodeType": "YulFunctionCall",
																"src": "19242:21:2"
															},
															"variables": [
																{
																	"name": "nonceSlot",
																	"nativeSrc": "19229:9:2",
																	"nodeType": "YulTypedName",
																	"src": "19229:9:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19276:34:2",
															"nodeType": "YulVariableDeclaration",
															"src": "19276:34:2",
															"value": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nativeSrc": "19300:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "19300:9:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "19294:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "19294:5:2"
																},
																"nativeSrc": "19294:16:2",
																"nodeType": "YulFunctionCall",
																"src": "19294:16:2"
															},
															"variables": [
																{
																	"name": "nonceValue",
																	"nativeSrc": "19280:10:2",
																	"nodeType": "YulTypedName",
																	"src": "19280:10:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "19375:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "19375:1:2"
																	},
																	{
																		"name": "_DOMAIN_TYPEHASH",
																		"nativeSrc": "19378:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "19378:16:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19368:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19368:6:2"
																},
																"nativeSrc": "19368:27:2",
																"nodeType": "YulFunctionCall",
																"src": "19368:27:2"
															},
															"nativeSrc": "19368:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "19368:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19419:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19419:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19422:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19422:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19415:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19415:3:2"
																		},
																		"nativeSrc": "19415:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19415:12:2"
																	},
																	{
																		"name": "nameHash",
																		"nativeSrc": "19429:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "19429:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19408:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19408:6:2"
																},
																"nativeSrc": "19408:30:2",
																"nodeType": "YulFunctionCall",
																"src": "19408:30:2"
															},
															"nativeSrc": "19408:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "19408:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19462:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19462:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19465:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19465:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19458:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19458:3:2"
																		},
																		"nativeSrc": "19458:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19458:12:2"
																	},
																	{
																		"name": "versionHash",
																		"nativeSrc": "19472:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "19472:11:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19451:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19451:6:2"
																},
																"nativeSrc": "19451:33:2",
																"nodeType": "YulFunctionCall",
																"src": "19451:33:2"
															},
															"nativeSrc": "19451:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "19451:33:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19508:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19508:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19511:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19511:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19504:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19504:3:2"
																		},
																		"nativeSrc": "19504:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19504:12:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nativeSrc": "19518:7:2",
																			"nodeType": "YulIdentifier",
																			"src": "19518:7:2"
																		},
																		"nativeSrc": "19518:9:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19518:9:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19497:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19497:6:2"
																},
																"nativeSrc": "19497:31:2",
																"nodeType": "YulFunctionCall",
																"src": "19497:31:2"
															},
															"nativeSrc": "19497:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "19497:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19552:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19552:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19555:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19555:4:2",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19548:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19548:3:2"
																		},
																		"nativeSrc": "19548:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19548:12:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nativeSrc": "19562:7:2",
																			"nodeType": "YulIdentifier",
																			"src": "19562:7:2"
																		},
																		"nativeSrc": "19562:9:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19562:9:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19541:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19541:6:2"
																},
																"nativeSrc": "19541:31:2",
																"nodeType": "YulFunctionCall",
																"src": "19541:31:2"
															},
															"nativeSrc": "19541:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "19541:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19592:4:2",
																		"nodeType": "YulLiteral",
																		"src": "19592:4:2",
																		"type": "",
																		"value": "0x2e"
																	},
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19608:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19608:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19611:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19611:4:2",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "19598:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "19598:9:2"
																		},
																		"nativeSrc": "19598:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19598:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19585:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19585:6:2"
																},
																"nativeSrc": "19585:32:2",
																"nodeType": "YulFunctionCall",
																"src": "19585:32:2"
															},
															"nativeSrc": "19585:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "19585:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "19677:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "19677:1:2"
																	},
																	{
																		"name": "_PERMIT_TYPEHASH",
																		"nativeSrc": "19680:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "19680:16:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19670:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19670:6:2"
																},
																"nativeSrc": "19670:27:2",
																"nodeType": "YulFunctionCall",
																"src": "19670:27:2"
															},
															"nativeSrc": "19670:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "19670:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19721:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19721:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19724:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19724:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19717:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19717:3:2"
																		},
																		"nativeSrc": "19717:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19717:12:2"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "19731:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "19731:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19710:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19710:6:2"
																},
																"nativeSrc": "19710:27:2",
																"nodeType": "YulFunctionCall",
																"src": "19710:27:2"
															},
															"nativeSrc": "19710:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "19710:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19761:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19761:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19764:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19764:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19757:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19757:3:2"
																		},
																		"nativeSrc": "19757:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19757:12:2"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "19771:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "19771:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19750:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19750:6:2"
																},
																"nativeSrc": "19750:29:2",
																"nodeType": "YulFunctionCall",
																"src": "19750:29:2"
															},
															"nativeSrc": "19750:29:2",
															"nodeType": "YulExpressionStatement",
															"src": "19750:29:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19803:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19803:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19806:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19806:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19799:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19799:3:2"
																		},
																		"nativeSrc": "19799:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19799:12:2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19813:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "19813:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19792:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19792:6:2"
																},
																"nativeSrc": "19792:27:2",
																"nodeType": "YulFunctionCall",
																"src": "19792:27:2"
															},
															"nativeSrc": "19792:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "19792:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19843:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19843:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19846:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19846:4:2",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19839:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19839:3:2"
																		},
																		"nativeSrc": "19839:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19839:12:2"
																	},
																	{
																		"name": "nonceValue",
																		"nativeSrc": "19853:10:2",
																		"nodeType": "YulIdentifier",
																		"src": "19853:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19832:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19832:6:2"
																},
																"nativeSrc": "19832:32:2",
																"nodeType": "YulFunctionCall",
																"src": "19832:32:2"
															},
															"nativeSrc": "19832:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "19832:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19888:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19888:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19891:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19891:4:2",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19884:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "19884:3:2"
																		},
																		"nativeSrc": "19884:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19884:12:2"
																	},
																	{
																		"name": "deadline",
																		"nativeSrc": "19898:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "19898:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19877:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19877:6:2"
																},
																"nativeSrc": "19877:30:2",
																"nodeType": "YulFunctionCall",
																"src": "19877:30:2"
															},
															"nativeSrc": "19877:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "19877:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19927:4:2",
																		"nodeType": "YulLiteral",
																		"src": "19927:4:2",
																		"type": "",
																		"value": "0x4e"
																	},
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "19943:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "19943:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19946:4:2",
																				"nodeType": "YulLiteral",
																				"src": "19946:4:2",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "19933:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "19933:9:2"
																		},
																		"nativeSrc": "19933:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "19933:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19920:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "19920:6:2"
																},
																"nativeSrc": "19920:32:2",
																"nodeType": "YulFunctionCall",
																"src": "19920:32:2"
															},
															"nativeSrc": "19920:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "19920:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20019:4:2",
																		"nodeType": "YulLiteral",
																		"src": "20019:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "20035:4:2",
																				"nodeType": "YulLiteral",
																				"src": "20035:4:2",
																				"type": "",
																				"value": "0x2c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20041:4:2",
																				"nodeType": "YulLiteral",
																				"src": "20041:4:2",
																				"type": "",
																				"value": "0x42"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "20025:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "20025:9:2"
																		},
																		"nativeSrc": "20025:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20025:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20012:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20012:6:2"
																},
																"nativeSrc": "20012:35:2",
																"nodeType": "YulFunctionCall",
																"src": "20012:35:2"
															},
															"nativeSrc": "20012:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "20012:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20067:4:2",
																		"nodeType": "YulLiteral",
																		"src": "20067:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "20077:4:2",
																				"nodeType": "YulLiteral",
																				"src": "20077:4:2",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "v",
																				"nativeSrc": "20083:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "20083:1:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20073:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "20073:3:2"
																		},
																		"nativeSrc": "20073:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20073:12:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20060:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20060:6:2"
																},
																"nativeSrc": "20060:26:2",
																"nodeType": "YulFunctionCall",
																"src": "20060:26:2"
															},
															"nativeSrc": "20060:26:2",
															"nodeType": "YulExpressionStatement",
															"src": "20060:26:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20106:4:2",
																		"nodeType": "YulLiteral",
																		"src": "20106:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "20112:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "20112:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20099:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20099:6:2"
																},
																"nativeSrc": "20099:15:2",
																"nodeType": "YulFunctionCall",
																"src": "20099:15:2"
															},
															"nativeSrc": "20099:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "20099:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20134:4:2",
																		"nodeType": "YulLiteral",
																		"src": "20134:4:2",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"name": "s",
																		"nativeSrc": "20140:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "20140:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20127:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20127:6:2"
																},
																"nativeSrc": "20127:15:2",
																"nodeType": "YulFunctionCall",
																"src": "20127:15:2"
															},
															"nativeSrc": "20127:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "20127:15:2"
														},
														{
															"nativeSrc": "20155:53:2",
															"nodeType": "YulVariableDeclaration",
															"src": "20155:53:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "20175:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "20175:3:2"
																		},
																		"nativeSrc": "20175:5:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20175:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20182:1:2",
																		"nodeType": "YulLiteral",
																		"src": "20182:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20185:4:2",
																		"nodeType": "YulLiteral",
																		"src": "20185:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20191:4:2",
																		"nodeType": "YulLiteral",
																		"src": "20191:4:2",
																		"type": "",
																		"value": "0x80"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20197:4:2",
																		"nodeType": "YulLiteral",
																		"src": "20197:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20203:4:2",
																		"nodeType": "YulLiteral",
																		"src": "20203:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "20164:10:2",
																	"nodeType": "YulIdentifier",
																	"src": "20164:10:2"
																},
																"nativeSrc": "20164:44:2",
																"nodeType": "YulFunctionCall",
																"src": "20164:44:2"
															},
															"variables": [
																{
																	"name": "t",
																	"nativeSrc": "20159:1:2",
																	"nodeType": "YulTypedName",
																	"src": "20159:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20632:113:2",
																"nodeType": "YulBlock",
																"src": "20632:113:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20657:4:2",
																					"nodeType": "YulLiteral",
																					"src": "20657:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20663:10:2",
																					"nodeType": "YulLiteral",
																					"src": "20663:10:2",
																					"type": "",
																					"value": "0xddafbaef"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20650:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "20650:6:2"
																			},
																			"nativeSrc": "20650:24:2",
																			"nodeType": "YulFunctionCall",
																			"src": "20650:24:2"
																		},
																		"nativeSrc": "20650:24:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "20650:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20720:4:2",
																					"nodeType": "YulLiteral",
																					"src": "20720:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20726:4:2",
																					"nodeType": "YulLiteral",
																					"src": "20726:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20713:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "20713:6:2"
																			},
																			"nativeSrc": "20713:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "20713:18:2"
																		},
																		"nativeSrc": "20713:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "20713:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "20605:14:2",
																							"nodeType": "YulIdentifier",
																							"src": "20605:14:2"
																						},
																						"nativeSrc": "20605:16:2",
																						"nodeType": "YulFunctionCall",
																						"src": "20605:16:2"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "20599:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "20599:5:2"
																				},
																				"nativeSrc": "20599:23:2",
																				"nodeType": "YulFunctionCall",
																				"src": "20599:23:2"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "20624:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "20624:5:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20596:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "20596:2:2"
																		},
																		"nativeSrc": "20596:34:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20596:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20589:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20589:6:2"
																},
																"nativeSrc": "20589:42:2",
																"nodeType": "YulFunctionCall",
																"src": "20589:42:2"
															},
															"nativeSrc": "20586:159:2",
															"nodeType": "YulIf",
															"src": "20586:159:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "nonceSlot",
																		"nativeSrc": "20819:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "20819:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "nonceValue",
																				"nativeSrc": "20834:10:2",
																				"nodeType": "YulIdentifier",
																				"src": "20834:10:2"
																			},
																			{
																				"name": "t",
																				"nativeSrc": "20846:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "20846:1:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20830:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "20830:3:2"
																		},
																		"nativeSrc": "20830:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20830:18:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "20812:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20812:6:2"
																},
																"nativeSrc": "20812:37:2",
																"nodeType": "YulFunctionCall",
																"src": "20812:37:2"
															},
															"nativeSrc": "20812:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "20812:37:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21019:4:2",
																		"nodeType": "YulLiteral",
																		"src": "21019:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21032:3:2",
																						"nodeType": "YulLiteral",
																						"src": "21032:3:2",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"name": "_ALLOWANCE_SLOT_SEED",
																						"nativeSrc": "21037:20:2",
																						"nodeType": "YulIdentifier",
																						"src": "21037:20:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "21028:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "21028:3:2"
																				},
																				"nativeSrc": "21028:30:2",
																				"nodeType": "YulFunctionCall",
																				"src": "21028:30:2"
																			},
																			{
																				"name": "spender",
																				"nativeSrc": "21060:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "21060:7:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "21025:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "21025:2:2"
																		},
																		"nativeSrc": "21025:43:2",
																		"nodeType": "YulFunctionCall",
																		"src": "21025:43:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21012:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "21012:6:2"
																},
																"nativeSrc": "21012:57:2",
																"nodeType": "YulFunctionCall",
																"src": "21012:57:2"
															},
															"nativeSrc": "21012:57:2",
															"nodeType": "YulExpressionStatement",
															"src": "21012:57:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "21099:4:2",
																				"nodeType": "YulLiteral",
																				"src": "21099:4:2",
																				"type": "",
																				"value": "0x2c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21105:4:2",
																				"nodeType": "YulLiteral",
																				"src": "21105:4:2",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "21089:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "21089:9:2"
																		},
																		"nativeSrc": "21089:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "21089:21:2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21112:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "21112:5:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "21082:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "21082:6:2"
																},
																"nativeSrc": "21082:36:2",
																"nodeType": "YulFunctionCall",
																"src": "21082:36:2"
															},
															"nativeSrc": "21082:36:2",
															"nodeType": "YulExpressionStatement",
															"src": "21082:36:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "21182:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "21182:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21185:4:2",
																				"nodeType": "YulLiteral",
																				"src": "21185:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21178:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "21178:3:2"
																		},
																		"nativeSrc": "21178:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "21178:12:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21192:4:2",
																		"nodeType": "YulLiteral",
																		"src": "21192:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nativeSrc": "21198:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "21198:25:2"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "21225:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "21225:5:2"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "21232:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "21232:7:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "21173:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "21173:4:2"
																},
																"nativeSrc": "21173:67:2",
																"nodeType": "YulFunctionCall",
																"src": "21173:67:2"
															},
															"nativeSrc": "21173:67:2",
															"nodeType": "YulExpressionStatement",
															"src": "21173:67:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21260:4:2",
																		"nodeType": "YulLiteral",
																		"src": "21260:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "21266:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "21266:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21253:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "21253:6:2"
																},
																"nativeSrc": "21253:15:2",
																"nodeType": "YulFunctionCall",
																"src": "21253:15:2"
															},
															"nativeSrc": "21253:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "21253:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21324:4:2",
																		"nodeType": "YulLiteral",
																		"src": "21324:4:2",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21330:1:2",
																		"nodeType": "YulLiteral",
																		"src": "21330:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21317:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "21317:6:2"
																},
																"nativeSrc": "21317:15:2",
																"nodeType": "YulFunctionCall",
																"src": "21317:15:2"
															},
															"nativeSrc": "21317:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "21317:15:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 242,
														"isOffset": false,
														"isSlot": false,
														"src": "21037:20:2",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "21198:25:2",
														"valueSize": 1
													},
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "19378:16:2",
														"valueSize": 1
													},
													{
														"declaration": 250,
														"isOffset": false,
														"isSlot": false,
														"src": "19140:39:2",
														"valueSize": 1
													},
													{
														"declaration": 262,
														"isOffset": false,
														"isSlot": false,
														"src": "19680:16:2",
														"valueSize": 1
													},
													{
														"declaration": 457,
														"isOffset": false,
														"isSlot": false,
														"src": "18733:8:2",
														"valueSize": 1
													},
													{
														"declaration": 457,
														"isOffset": false,
														"isSlot": false,
														"src": "19898:8:2",
														"valueSize": 1
													},
													{
														"declaration": 472,
														"isOffset": false,
														"isSlot": false,
														"src": "19429:8:2",
														"valueSize": 1
													},
													{
														"declaration": 451,
														"isOffset": false,
														"isSlot": false,
														"src": "18975:5:2",
														"valueSize": 1
													},
													{
														"declaration": 451,
														"isOffset": false,
														"isSlot": false,
														"src": "19000:5:2",
														"valueSize": 1
													},
													{
														"declaration": 451,
														"isOffset": false,
														"isSlot": false,
														"src": "19206:5:2",
														"valueSize": 1
													},
													{
														"declaration": 451,
														"isOffset": false,
														"isSlot": false,
														"src": "19731:5:2",
														"valueSize": 1
													},
													{
														"declaration": 451,
														"isOffset": false,
														"isSlot": false,
														"src": "20624:5:2",
														"valueSize": 1
													},
													{
														"declaration": 451,
														"isOffset": false,
														"isSlot": false,
														"src": "21225:5:2",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "20112:1:2",
														"valueSize": 1
													},
													{
														"declaration": 463,
														"isOffset": false,
														"isSlot": false,
														"src": "20140:1:2",
														"valueSize": 1
													},
													{
														"declaration": 453,
														"isOffset": false,
														"isSlot": false,
														"src": "19020:7:2",
														"valueSize": 1
													},
													{
														"declaration": 453,
														"isOffset": false,
														"isSlot": false,
														"src": "19047:7:2",
														"valueSize": 1
													},
													{
														"declaration": 453,
														"isOffset": false,
														"isSlot": false,
														"src": "19771:7:2",
														"valueSize": 1
													},
													{
														"declaration": 453,
														"isOffset": false,
														"isSlot": false,
														"src": "21060:7:2",
														"valueSize": 1
													},
													{
														"declaration": 453,
														"isOffset": false,
														"isSlot": false,
														"src": "21232:7:2",
														"valueSize": 1
													},
													{
														"declaration": 459,
														"isOffset": false,
														"isSlot": false,
														"src": "20083:1:2",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "19813:5:2",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "21112:5:2",
														"valueSize": 1
													},
													{
														"declaration": 494,
														"isOffset": false,
														"isSlot": false,
														"src": "19472:11:2",
														"valueSize": 1
													}
												],
												"id": 498,
												"nodeType": "InlineAssembly",
												"src": "18618:2753:2"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "17483:173:2",
										"text": "@dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\n authorized by a signed approval by `owner`.\n Emits a {Approval} event."
									},
									"functionSelector": "d505accf",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "17670:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17694:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "17686:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17717:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "17709:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17742:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "17734:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "17765:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "17757:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "17789:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "17783:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 458,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17783:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "17808:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "17800:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 460,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17800:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "17827:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "17819:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17819:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17676:158:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17850:0:2"
									},
									"scope": 685,
									"src": "17661:3716:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "21531:664:2",
										"statements": [
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "nameHash",
														"nameLocation": "21549:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "21541:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 506,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "21541:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 508,
														"name": "_constantNameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "21560:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21560:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21541:38:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "nameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "21687:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21707:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21699:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 512,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "21699:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21699:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "21687:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "21683:63:2",
												"trueBody": {
													"expression": {
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 517,
															"name": "nameHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "21711:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 521,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "21738:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																					"typeString": "function () view returns (string memory)"
																				}
																			},
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21738:6:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21732:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 519,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "21732:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21732:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 518,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "21722:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21722:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "21711:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 526,
													"nodeType": "ExpressionStatement",
													"src": "21711:35:2"
												}
											},
											{
												"assignments": [
													529
												],
												"declarations": [
													{
														"constant": false,
														"id": 529,
														"mutability": "mutable",
														"name": "versionHash",
														"nameLocation": "21764:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "21756:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 528,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "21756:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 530,
														"name": "_versionHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "21778:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21778:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21756:36:2"
											},
											{
												"AST": {
													"nativeSrc": "21854:335:2",
													"nodeType": "YulBlock",
													"src": "21854:335:2",
													"statements": [
														{
															"nativeSrc": "21868:20:2",
															"nodeType": "YulVariableDeclaration",
															"src": "21868:20:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21883:4:2",
																		"nodeType": "YulLiteral",
																		"src": "21883:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21877:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "21877:5:2"
																},
																"nativeSrc": "21877:11:2",
																"nodeType": "YulFunctionCall",
																"src": "21877:11:2"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "21872:1:2",
																	"nodeType": "YulTypedName",
																	"src": "21872:1:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "21941:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "21941:1:2"
																	},
																	{
																		"name": "_DOMAIN_TYPEHASH",
																		"nativeSrc": "21944:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "21944:16:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21934:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "21934:6:2"
																},
																"nativeSrc": "21934:27:2",
																"nodeType": "YulFunctionCall",
																"src": "21934:27:2"
															},
															"nativeSrc": "21934:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "21934:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "21985:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "21985:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21988:4:2",
																				"nodeType": "YulLiteral",
																				"src": "21988:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21981:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "21981:3:2"
																		},
																		"nativeSrc": "21981:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "21981:12:2"
																	},
																	{
																		"name": "nameHash",
																		"nativeSrc": "21995:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "21995:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21974:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "21974:6:2"
																},
																"nativeSrc": "21974:30:2",
																"nodeType": "YulFunctionCall",
																"src": "21974:30:2"
															},
															"nativeSrc": "21974:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "21974:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "22028:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "22028:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22031:4:2",
																				"nodeType": "YulLiteral",
																				"src": "22031:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22024:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "22024:3:2"
																		},
																		"nativeSrc": "22024:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "22024:12:2"
																	},
																	{
																		"name": "versionHash",
																		"nativeSrc": "22038:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "22038:11:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22017:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "22017:6:2"
																},
																"nativeSrc": "22017:33:2",
																"nodeType": "YulFunctionCall",
																"src": "22017:33:2"
															},
															"nativeSrc": "22017:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "22017:33:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "22074:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "22074:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22077:4:2",
																				"nodeType": "YulLiteral",
																				"src": "22077:4:2",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22070:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "22070:3:2"
																		},
																		"nativeSrc": "22070:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "22070:12:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nativeSrc": "22084:7:2",
																			"nodeType": "YulIdentifier",
																			"src": "22084:7:2"
																		},
																		"nativeSrc": "22084:9:2",
																		"nodeType": "YulFunctionCall",
																		"src": "22084:9:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22063:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "22063:6:2"
																},
																"nativeSrc": "22063:31:2",
																"nodeType": "YulFunctionCall",
																"src": "22063:31:2"
															},
															"nativeSrc": "22063:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "22063:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "22118:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "22118:1:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22121:4:2",
																				"nodeType": "YulLiteral",
																				"src": "22121:4:2",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22114:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "22114:3:2"
																		},
																		"nativeSrc": "22114:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "22114:12:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nativeSrc": "22128:7:2",
																			"nodeType": "YulIdentifier",
																			"src": "22128:7:2"
																		},
																		"nativeSrc": "22128:9:2",
																		"nodeType": "YulFunctionCall",
																		"src": "22128:9:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22107:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "22107:6:2"
																},
																"nativeSrc": "22107:31:2",
																"nodeType": "YulFunctionCall",
																"src": "22107:31:2"
															},
															"nativeSrc": "22107:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "22107:31:2"
														},
														{
															"nativeSrc": "22151:28:2",
															"nodeType": "YulAssignment",
															"src": "22151:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "22171:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "22171:1:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22174:4:2",
																		"nodeType": "YulLiteral",
																		"src": "22174:4:2",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "22161:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "22161:9:2"
																},
																"nativeSrc": "22161:18:2",
																"nodeType": "YulFunctionCall",
																"src": "22161:18:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22151:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "22151:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 254,
														"isOffset": false,
														"isSlot": false,
														"src": "21944:16:2",
														"valueSize": 1
													},
													{
														"declaration": 507,
														"isOffset": false,
														"isSlot": false,
														"src": "21995:8:2",
														"valueSize": 1
													},
													{
														"declaration": 504,
														"isOffset": false,
														"isSlot": false,
														"src": "22151:6:2",
														"valueSize": 1
													},
													{
														"declaration": 529,
														"isOffset": false,
														"isSlot": false,
														"src": "22038:11:2",
														"valueSize": 1
													}
												],
												"id": 533,
												"nodeType": "InlineAssembly",
												"src": "21845:344:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "21383:70:2",
										"text": "@dev Returns the EIP-712 domain separator for the EIP-2612 permit."
									},
									"functionSelector": "3644e515",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "21467:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21483:2:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21523:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "21515:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 503,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21515:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21514:16:2"
									},
									"scope": 685,
									"src": "21458:737:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "22659:1112:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22698:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22690:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22690:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22690:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "22702:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "22706:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 543,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "22669:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22669:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "22669:44:2"
											},
											{
												"AST": {
													"nativeSrc": "22775:937:2",
													"nodeType": "YulBlock",
													"src": "22775:937:2",
													"statements": [
														{
															"nativeSrc": "22789:50:2",
															"nodeType": "YulVariableDeclaration",
															"src": "22789:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nativeSrc": "22820:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "22820:18:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "22814:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "22814:5:2"
																},
																"nativeSrc": "22814:25:2",
																"nodeType": "YulFunctionCall",
																"src": "22814:25:2"
															},
															"variables": [
																{
																	"name": "totalSupplyBefore",
																	"nativeSrc": "22793:17:2",
																	"nodeType": "YulTypedName",
																	"src": "22793:17:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22852:54:2",
															"nodeType": "YulVariableDeclaration",
															"src": "22852:54:2",
															"value": {
																"arguments": [
																	{
																		"name": "totalSupplyBefore",
																		"nativeSrc": "22880:17:2",
																		"nodeType": "YulIdentifier",
																		"src": "22880:17:2"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "22899:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "22899:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22876:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "22876:3:2"
																},
																"nativeSrc": "22876:30:2",
																"nodeType": "YulFunctionCall",
																"src": "22876:30:2"
															},
															"variables": [
																{
																	"name": "totalSupplyAfter",
																	"nativeSrc": "22856:16:2",
																	"nodeType": "YulTypedName",
																	"src": "22856:16:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23015:119:2",
																"nodeType": "YulBlock",
																"src": "23015:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23040:4:2",
																					"nodeType": "YulLiteral",
																					"src": "23040:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23046:10:2",
																					"nodeType": "YulLiteral",
																					"src": "23046:10:2",
																					"type": "",
																					"value": "0xe5cfe957"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "23033:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "23033:6:2"
																			},
																			"nativeSrc": "23033:24:2",
																			"nodeType": "YulFunctionCall",
																			"src": "23033:24:2"
																		},
																		"nativeSrc": "23033:24:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "23033:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23109:4:2",
																					"nodeType": "YulLiteral",
																					"src": "23109:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23115:4:2",
																					"nodeType": "YulLiteral",
																					"src": "23115:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "23102:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "23102:6:2"
																			},
																			"nativeSrc": "23102:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "23102:18:2"
																		},
																		"nativeSrc": "23102:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "23102:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "totalSupplyAfter",
																		"nativeSrc": "22978:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "22978:16:2"
																	},
																	{
																		"name": "totalSupplyBefore",
																		"nativeSrc": "22996:17:2",
																		"nodeType": "YulIdentifier",
																		"src": "22996:17:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "22975:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "22975:2:2"
																},
																"nativeSrc": "22975:39:2",
																"nodeType": "YulFunctionCall",
																"src": "22975:39:2"
															},
															"nativeSrc": "22972:162:2",
															"nodeType": "YulIf",
															"src": "22972:162:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nativeSrc": "23201:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "23201:18:2"
																	},
																	{
																		"name": "totalSupplyAfter",
																		"nativeSrc": "23221:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "23221:16:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23194:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "23194:6:2"
																},
																"nativeSrc": "23194:44:2",
																"nodeType": "YulFunctionCall",
																"src": "23194:44:2"
															},
															"nativeSrc": "23194:44:2",
															"nodeType": "YulExpressionStatement",
															"src": "23194:44:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23318:4:2",
																		"nodeType": "YulLiteral",
																		"src": "23318:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nativeSrc": "23324:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "23324:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23311:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "23311:6:2"
																},
																"nativeSrc": "23311:32:2",
																"nodeType": "YulFunctionCall",
																"src": "23311:32:2"
															},
															"nativeSrc": "23311:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "23311:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23363:4:2",
																		"nodeType": "YulLiteral",
																		"src": "23363:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "23369:2:2",
																		"nodeType": "YulIdentifier",
																		"src": "23369:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23356:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "23356:6:2"
																},
																"nativeSrc": "23356:16:2",
																"nodeType": "YulFunctionCall",
																"src": "23356:16:2"
															},
															"nativeSrc": "23356:16:2",
															"nodeType": "YulExpressionStatement",
															"src": "23356:16:2"
														},
														{
															"nativeSrc": "23385:42:2",
															"nodeType": "YulVariableDeclaration",
															"src": "23385:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23416:4:2",
																		"nodeType": "YulLiteral",
																		"src": "23416:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23422:4:2",
																		"nodeType": "YulLiteral",
																		"src": "23422:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "23406:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "23406:9:2"
																},
																"nativeSrc": "23406:21:2",
																"nodeType": "YulFunctionCall",
																"src": "23406:21:2"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nativeSrc": "23389:13:2",
																	"nodeType": "YulTypedName",
																	"src": "23389:13:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nativeSrc": "23497:13:2",
																		"nodeType": "YulIdentifier",
																		"src": "23497:13:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nativeSrc": "23522:13:2",
																						"nodeType": "YulIdentifier",
																						"src": "23522:13:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23516:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "23516:5:2"
																				},
																				"nativeSrc": "23516:20:2",
																				"nodeType": "YulFunctionCall",
																				"src": "23516:20:2"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "23538:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "23538:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23512:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "23512:3:2"
																		},
																		"nativeSrc": "23512:33:2",
																		"nodeType": "YulFunctionCall",
																		"src": "23512:33:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23490:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "23490:6:2"
																},
																"nativeSrc": "23490:56:2",
																"nodeType": "YulFunctionCall",
																"src": "23490:56:2"
															},
															"nativeSrc": "23490:56:2",
															"nodeType": "YulExpressionStatement",
															"src": "23490:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23608:4:2",
																		"nodeType": "YulLiteral",
																		"src": "23608:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "23614:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "23614:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23601:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "23601:6:2"
																},
																"nativeSrc": "23601:20:2",
																"nodeType": "YulFunctionCall",
																"src": "23601:20:2"
															},
															"nativeSrc": "23601:20:2",
															"nodeType": "YulExpressionStatement",
															"src": "23601:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23639:4:2",
																		"nodeType": "YulLiteral",
																		"src": "23639:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23645:4:2",
																		"nodeType": "YulLiteral",
																		"src": "23645:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "23651:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "23651:25:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23678:1:2",
																		"nodeType": "YulLiteral",
																		"src": "23678:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "23685:2:2",
																				"nodeType": "YulLiteral",
																				"src": "23685:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23695:4:2",
																						"nodeType": "YulLiteral",
																						"src": "23695:4:2",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "23689:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "23689:5:2"
																				},
																				"nativeSrc": "23689:11:2",
																				"nodeType": "YulFunctionCall",
																				"src": "23689:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "23681:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "23681:3:2"
																		},
																		"nativeSrc": "23681:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "23681:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "23634:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "23634:4:2"
																},
																"nativeSrc": "23634:68:2",
																"nodeType": "YulFunctionCall",
																"src": "23634:68:2"
															},
															"nativeSrc": "23634:68:2",
															"nodeType": "YulExpressionStatement",
															"src": "23634:68:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "23324:18:2",
														"valueSize": 1
													},
													{
														"declaration": 234,
														"isOffset": false,
														"isSlot": false,
														"src": "22820:18:2",
														"valueSize": 1
													},
													{
														"declaration": 234,
														"isOffset": false,
														"isSlot": false,
														"src": "23201:18:2",
														"valueSize": 1
													},
													{
														"declaration": 226,
														"isOffset": false,
														"isSlot": false,
														"src": "23651:25:2",
														"valueSize": 1
													},
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "22899:6:2",
														"valueSize": 1
													},
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "23538:6:2",
														"valueSize": 1
													},
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "23614:6:2",
														"valueSize": 1
													},
													{
														"declaration": 538,
														"isOffset": false,
														"isSlot": false,
														"src": "23369:2:2",
														"valueSize": 1
													}
												],
												"id": 552,
												"nodeType": "InlineAssembly",
												"src": "22766:946:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23749:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23741:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 554,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23741:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23741:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "23753:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "23757:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "23721:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23721:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "23721:43:2"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "22484:110:2",
										"text": "@dev Mints `amount` tokens to `to`, increasing the total supply.\n Emits a {Transfer} event."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "22608:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22622:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "22614:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22634:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "22626:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22626:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22613:28:2"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22659:0:2"
									},
									"scope": 685,
									"src": "22599:1172:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "24239:1057:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "24270:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24284:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24276:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24276:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24276:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "24288:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "24249:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24249:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "24249:46:2"
											},
											{
												"AST": {
													"nativeSrc": "24357:878:2",
													"nodeType": "YulBlock",
													"src": "24357:878:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24438:4:2",
																		"nodeType": "YulLiteral",
																		"src": "24438:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_BALANCE_SLOT_SEED",
																		"nativeSrc": "24444:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "24444:18:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24431:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "24431:6:2"
																},
																"nativeSrc": "24431:32:2",
																"nodeType": "YulFunctionCall",
																"src": "24431:32:2"
															},
															"nativeSrc": "24431:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "24431:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24483:4:2",
																		"nodeType": "YulLiteral",
																		"src": "24483:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "24489:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "24489:4:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24476:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "24476:6:2"
																},
																"nativeSrc": "24476:18:2",
																"nodeType": "YulFunctionCall",
																"src": "24476:18:2"
															},
															"nativeSrc": "24476:18:2",
															"nodeType": "YulExpressionStatement",
															"src": "24476:18:2"
														},
														{
															"nativeSrc": "24507:44:2",
															"nodeType": "YulVariableDeclaration",
															"src": "24507:44:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24540:4:2",
																		"nodeType": "YulLiteral",
																		"src": "24540:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24546:4:2",
																		"nodeType": "YulLiteral",
																		"src": "24546:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "24530:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "24530:9:2"
																},
																"nativeSrc": "24530:21:2",
																"nodeType": "YulFunctionCall",
																"src": "24530:21:2"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nativeSrc": "24511:15:2",
																	"nodeType": "YulTypedName",
																	"src": "24511:15:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24564:41:2",
															"nodeType": "YulVariableDeclaration",
															"src": "24564:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "24589:15:2",
																		"nodeType": "YulIdentifier",
																		"src": "24589:15:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "24583:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "24583:5:2"
																},
																"nativeSrc": "24583:22:2",
																"nodeType": "YulFunctionCall",
																"src": "24583:22:2"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nativeSrc": "24568:11:2",
																	"nodeType": "YulTypedName",
																	"src": "24568:11:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24692:119:2",
																"nodeType": "YulBlock",
																"src": "24692:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "24717:4:2",
																					"nodeType": "YulLiteral",
																					"src": "24717:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24723:10:2",
																					"nodeType": "YulLiteral",
																					"src": "24723:10:2",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "24710:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "24710:6:2"
																			},
																			"nativeSrc": "24710:24:2",
																			"nodeType": "YulFunctionCall",
																			"src": "24710:24:2"
																		},
																		"nativeSrc": "24710:24:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "24710:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "24786:4:2",
																					"nodeType": "YulLiteral",
																					"src": "24786:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24792:4:2",
																					"nodeType": "YulLiteral",
																					"src": "24792:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "24779:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "24779:6:2"
																			},
																			"nativeSrc": "24779:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "24779:18:2"
																		},
																		"nativeSrc": "24779:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "24779:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "24671:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "24671:6:2"
																	},
																	{
																		"name": "fromBalance",
																		"nativeSrc": "24679:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "24679:11:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24668:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "24668:2:2"
																},
																"nativeSrc": "24668:23:2",
																"nodeType": "YulFunctionCall",
																"src": "24668:23:2"
															},
															"nativeSrc": "24665:146:2",
															"nodeType": "YulIf",
															"src": "24665:146:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "24886:15:2",
																		"nodeType": "YulIdentifier",
																		"src": "24886:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "24907:11:2",
																				"nodeType": "YulIdentifier",
																				"src": "24907:11:2"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "24920:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "24920:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24903:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "24903:3:2"
																		},
																		"nativeSrc": "24903:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "24903:24:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "24879:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "24879:6:2"
																},
																"nativeSrc": "24879:49:2",
																"nodeType": "YulFunctionCall",
																"src": "24879:49:2"
															},
															"nativeSrc": "24879:49:2",
															"nodeType": "YulExpressionStatement",
															"src": "24879:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_TOTAL_SUPPLY_SLOT",
																		"nativeSrc": "25008:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "25008:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_TOTAL_SUPPLY_SLOT",
																						"nativeSrc": "25038:18:2",
																						"nodeType": "YulIdentifier",
																						"src": "25038:18:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "25032:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "25032:5:2"
																				},
																				"nativeSrc": "25032:25:2",
																				"nodeType": "YulFunctionCall",
																				"src": "25032:25:2"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "25059:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "25059:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25028:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "25028:3:2"
																		},
																		"nativeSrc": "25028:38:2",
																		"nodeType": "YulFunctionCall",
																		"src": "25028:38:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "25001:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "25001:6:2"
																},
																"nativeSrc": "25001:66:2",
																"nodeType": "YulFunctionCall",
																"src": "25001:66:2"
															},
															"nativeSrc": "25001:66:2",
															"nodeType": "YulExpressionStatement",
															"src": "25001:66:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25129:4:2",
																		"nodeType": "YulLiteral",
																		"src": "25129:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "25135:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "25135:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25122:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "25122:6:2"
																},
																"nativeSrc": "25122:20:2",
																"nodeType": "YulFunctionCall",
																"src": "25122:20:2"
															},
															"nativeSrc": "25122:20:2",
															"nodeType": "YulExpressionStatement",
															"src": "25122:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25160:4:2",
																		"nodeType": "YulLiteral",
																		"src": "25160:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25166:4:2",
																		"nodeType": "YulLiteral",
																		"src": "25166:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "25172:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "25172:25:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "25203:2:2",
																				"nodeType": "YulLiteral",
																				"src": "25203:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25211:2:2",
																						"nodeType": "YulLiteral",
																						"src": "25211:2:2",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "from",
																						"nativeSrc": "25215:4:2",
																						"nodeType": "YulIdentifier",
																						"src": "25215:4:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "25207:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "25207:3:2"
																				},
																				"nativeSrc": "25207:13:2",
																				"nodeType": "YulFunctionCall",
																				"src": "25207:13:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "25199:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "25199:3:2"
																		},
																		"nativeSrc": "25199:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "25199:22:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25223:1:2",
																		"nodeType": "YulLiteral",
																		"src": "25223:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "25155:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "25155:4:2"
																},
																"nativeSrc": "25155:70:2",
																"nodeType": "YulFunctionCall",
																"src": "25155:70:2"
															},
															"nativeSrc": "25155:70:2",
															"nodeType": "YulExpressionStatement",
															"src": "25155:70:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "24444:18:2",
														"valueSize": 1
													},
													{
														"declaration": 234,
														"isOffset": false,
														"isSlot": false,
														"src": "25008:18:2",
														"valueSize": 1
													},
													{
														"declaration": 234,
														"isOffset": false,
														"isSlot": false,
														"src": "25038:18:2",
														"valueSize": 1
													},
													{
														"declaration": 226,
														"isOffset": false,
														"isSlot": false,
														"src": "25172:25:2",
														"valueSize": 1
													},
													{
														"declaration": 568,
														"isOffset": false,
														"isSlot": false,
														"src": "24671:6:2",
														"valueSize": 1
													},
													{
														"declaration": 568,
														"isOffset": false,
														"isSlot": false,
														"src": "24920:6:2",
														"valueSize": 1
													},
													{
														"declaration": 568,
														"isOffset": false,
														"isSlot": false,
														"src": "25059:6:2",
														"valueSize": 1
													},
													{
														"declaration": 568,
														"isOffset": false,
														"isSlot": false,
														"src": "25135:6:2",
														"valueSize": 1
													},
													{
														"declaration": 566,
														"isOffset": false,
														"isSlot": false,
														"src": "24489:4:2",
														"valueSize": 1
													},
													{
														"declaration": 566,
														"isOffset": false,
														"isSlot": false,
														"src": "25215:4:2",
														"valueSize": 1
													}
												],
												"id": 580,
												"nodeType": "InlineAssembly",
												"src": "24348:887:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "25264:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25278:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25270:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 583,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25270:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25270:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "25282:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "25244:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25244:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "25244:45:2"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "24060:112:2",
										"text": "@dev Burns `amount` tokens from `from`, reducing the total supply.\n Emits a {Transfer} event."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "24186:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24200:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "24192:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24214:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "24206:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24191:30:2"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24239:0:2"
									},
									"scope": 685,
									"src": "24177:1119:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "25722:1318:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 602,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "25753:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "25759:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "25763:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "25732:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25732:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "25732:38:2"
											},
											{
												"AST": {
													"nativeSrc": "25832:1155:2",
													"nodeType": "YulBlock",
													"src": "25832:1155:2",
													"statements": [
														{
															"nativeSrc": "25846:26:2",
															"nodeType": "YulVariableDeclaration",
															"src": "25846:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25863:2:2",
																		"nodeType": "YulLiteral",
																		"src": "25863:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "25867:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "25867:4:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "25859:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "25859:3:2"
																},
																"nativeSrc": "25859:13:2",
																"nodeType": "YulFunctionCall",
																"src": "25859:13:2"
															},
															"variables": [
																{
																	"name": "from_",
																	"nativeSrc": "25850:5:2",
																	"nodeType": "YulTypedName",
																	"src": "25850:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25952:4:2",
																		"nodeType": "YulLiteral",
																		"src": "25952:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from_",
																				"nativeSrc": "25961:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "25961:5:2"
																			},
																			{
																				"name": "_BALANCE_SLOT_SEED",
																				"nativeSrc": "25968:18:2",
																				"nodeType": "YulIdentifier",
																				"src": "25968:18:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "25958:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "25958:2:2"
																		},
																		"nativeSrc": "25958:29:2",
																		"nodeType": "YulFunctionCall",
																		"src": "25958:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25945:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "25945:6:2"
																},
																"nativeSrc": "25945:43:2",
																"nodeType": "YulFunctionCall",
																"src": "25945:43:2"
															},
															"nativeSrc": "25945:43:2",
															"nodeType": "YulExpressionStatement",
															"src": "25945:43:2"
														},
														{
															"nativeSrc": "26001:44:2",
															"nodeType": "YulVariableDeclaration",
															"src": "26001:44:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26034:4:2",
																		"nodeType": "YulLiteral",
																		"src": "26034:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26040:4:2",
																		"nodeType": "YulLiteral",
																		"src": "26040:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "26024:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "26024:9:2"
																},
																"nativeSrc": "26024:21:2",
																"nodeType": "YulFunctionCall",
																"src": "26024:21:2"
															},
															"variables": [
																{
																	"name": "fromBalanceSlot",
																	"nativeSrc": "26005:15:2",
																	"nodeType": "YulTypedName",
																	"src": "26005:15:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26058:41:2",
															"nodeType": "YulVariableDeclaration",
															"src": "26058:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "26083:15:2",
																		"nodeType": "YulIdentifier",
																		"src": "26083:15:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "26077:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "26077:5:2"
																},
																"nativeSrc": "26077:22:2",
																"nodeType": "YulFunctionCall",
																"src": "26077:22:2"
															},
															"variables": [
																{
																	"name": "fromBalance",
																	"nativeSrc": "26062:11:2",
																	"nodeType": "YulTypedName",
																	"src": "26062:11:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26186:119:2",
																"nodeType": "YulBlock",
																"src": "26186:119:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "26211:4:2",
																					"nodeType": "YulLiteral",
																					"src": "26211:4:2",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26217:10:2",
																					"nodeType": "YulLiteral",
																					"src": "26217:10:2",
																					"type": "",
																					"value": "0xf4d678b8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "26204:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "26204:6:2"
																			},
																			"nativeSrc": "26204:24:2",
																			"nodeType": "YulFunctionCall",
																			"src": "26204:24:2"
																		},
																		"nativeSrc": "26204:24:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "26204:24:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "26280:4:2",
																					"nodeType": "YulLiteral",
																					"src": "26280:4:2",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26286:4:2",
																					"nodeType": "YulLiteral",
																					"src": "26286:4:2",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "26273:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "26273:6:2"
																			},
																			"nativeSrc": "26273:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "26273:18:2"
																		},
																		"nativeSrc": "26273:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "26273:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "26165:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "26165:6:2"
																	},
																	{
																		"name": "fromBalance",
																		"nativeSrc": "26173:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "26173:11:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26162:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "26162:2:2"
																},
																"nativeSrc": "26162:23:2",
																"nodeType": "YulFunctionCall",
																"src": "26162:23:2"
															},
															"nativeSrc": "26159:146:2",
															"nodeType": "YulIf",
															"src": "26159:146:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fromBalanceSlot",
																		"nativeSrc": "26380:15:2",
																		"nodeType": "YulIdentifier",
																		"src": "26380:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "fromBalance",
																				"nativeSrc": "26401:11:2",
																				"nodeType": "YulIdentifier",
																				"src": "26401:11:2"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "26414:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "26414:6:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26397:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "26397:3:2"
																		},
																		"nativeSrc": "26397:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "26397:24:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "26373:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "26373:6:2"
																},
																"nativeSrc": "26373:49:2",
																"nodeType": "YulFunctionCall",
																"src": "26373:49:2"
															},
															"nativeSrc": "26373:49:2",
															"nodeType": "YulExpressionStatement",
															"src": "26373:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26491:4:2",
																		"nodeType": "YulLiteral",
																		"src": "26491:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "26497:2:2",
																		"nodeType": "YulIdentifier",
																		"src": "26497:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26484:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "26484:6:2"
																},
																"nativeSrc": "26484:16:2",
																"nodeType": "YulFunctionCall",
																"src": "26484:16:2"
															},
															"nativeSrc": "26484:16:2",
															"nodeType": "YulExpressionStatement",
															"src": "26484:16:2"
														},
														{
															"nativeSrc": "26513:42:2",
															"nodeType": "YulVariableDeclaration",
															"src": "26513:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26544:4:2",
																		"nodeType": "YulLiteral",
																		"src": "26544:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26550:4:2",
																		"nodeType": "YulLiteral",
																		"src": "26550:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "26534:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "26534:9:2"
																},
																"nativeSrc": "26534:21:2",
																"nodeType": "YulFunctionCall",
																"src": "26534:21:2"
															},
															"variables": [
																{
																	"name": "toBalanceSlot",
																	"nativeSrc": "26517:13:2",
																	"nodeType": "YulTypedName",
																	"src": "26517:13:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "toBalanceSlot",
																		"nativeSrc": "26759:13:2",
																		"nodeType": "YulIdentifier",
																		"src": "26759:13:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "toBalanceSlot",
																						"nativeSrc": "26784:13:2",
																						"nodeType": "YulIdentifier",
																						"src": "26784:13:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "26778:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "26778:5:2"
																				},
																				"nativeSrc": "26778:20:2",
																				"nodeType": "YulFunctionCall",
																				"src": "26778:20:2"
																			},
																			{
																				"name": "amount",
																				"nativeSrc": "26800:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "26800:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26774:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "26774:3:2"
																		},
																		"nativeSrc": "26774:33:2",
																		"nodeType": "YulFunctionCall",
																		"src": "26774:33:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "26752:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "26752:6:2"
																},
																"nativeSrc": "26752:56:2",
																"nodeType": "YulFunctionCall",
																"src": "26752:56:2"
															},
															"nativeSrc": "26752:56:2",
															"nodeType": "YulExpressionStatement",
															"src": "26752:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26870:4:2",
																		"nodeType": "YulLiteral",
																		"src": "26870:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "26876:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "26876:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26863:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "26863:6:2"
																},
																"nativeSrc": "26863:20:2",
																"nodeType": "YulFunctionCall",
																"src": "26863:20:2"
															},
															"nativeSrc": "26863:20:2",
															"nodeType": "YulExpressionStatement",
															"src": "26863:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26901:4:2",
																		"nodeType": "YulLiteral",
																		"src": "26901:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26907:4:2",
																		"nodeType": "YulLiteral",
																		"src": "26907:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "26913:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "26913:25:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "26944:2:2",
																				"nodeType": "YulLiteral",
																				"src": "26944:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from_",
																				"nativeSrc": "26948:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "26948:5:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "26940:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "26940:3:2"
																		},
																		"nativeSrc": "26940:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "26940:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "26960:2:2",
																				"nodeType": "YulLiteral",
																				"src": "26960:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26970:4:2",
																						"nodeType": "YulLiteral",
																						"src": "26970:4:2",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "26964:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "26964:5:2"
																				},
																				"nativeSrc": "26964:11:2",
																				"nodeType": "YulFunctionCall",
																				"src": "26964:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "26956:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "26956:3:2"
																		},
																		"nativeSrc": "26956:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "26956:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "26896:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "26896:4:2"
																},
																"nativeSrc": "26896:81:2",
																"nodeType": "YulFunctionCall",
																"src": "26896:81:2"
															},
															"nativeSrc": "26896:81:2",
															"nodeType": "YulExpressionStatement",
															"src": "26896:81:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "25968:18:2",
														"valueSize": 1
													},
													{
														"declaration": 226,
														"isOffset": false,
														"isSlot": false,
														"src": "26913:25:2",
														"valueSize": 1
													},
													{
														"declaration": 598,
														"isOffset": false,
														"isSlot": false,
														"src": "26165:6:2",
														"valueSize": 1
													},
													{
														"declaration": 598,
														"isOffset": false,
														"isSlot": false,
														"src": "26414:6:2",
														"valueSize": 1
													},
													{
														"declaration": 598,
														"isOffset": false,
														"isSlot": false,
														"src": "26800:6:2",
														"valueSize": 1
													},
													{
														"declaration": 598,
														"isOffset": false,
														"isSlot": false,
														"src": "26876:6:2",
														"valueSize": 1
													},
													{
														"declaration": 594,
														"isOffset": false,
														"isSlot": false,
														"src": "25867:4:2",
														"valueSize": 1
													},
													{
														"declaration": 596,
														"isOffset": false,
														"isSlot": false,
														"src": "26497:2:2",
														"valueSize": 1
													}
												],
												"id": 607,
												"nodeType": "InlineAssembly",
												"src": "25823:1164:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 609,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "27016:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "27022:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "27026:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 608,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "26996:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26996:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "26996:37:2"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "25585:54:2",
										"text": "@dev Moves `amount` of tokens from `from` to `to`."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "25653:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25671:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "25663:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25685:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "25677:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25697:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "25689:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25689:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25662:42:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25722:0:2"
									},
									"scope": 685,
									"src": "25644:1396:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "27504:997:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 625,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "27518:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27518:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "27514:134:2",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "27551:97:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 627,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "27569:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 628,
																	"name": "_PERMIT2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "27580:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "27569:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "27565:32:2",
															"trueBody": {
																"functionReturnParameters": 624,
																"id": 630,
																"nodeType": "Return",
																"src": "27590:7:2"
															}
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "27709:786:2",
													"nodeType": "YulBlock",
													"src": "27709:786:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27792:4:2",
																		"nodeType": "YulLiteral",
																		"src": "27792:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "27798:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "27798:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27785:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "27785:6:2"
																},
																"nativeSrc": "27785:21:2",
																"nodeType": "YulFunctionCall",
																"src": "27785:21:2"
															},
															"nativeSrc": "27785:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "27785:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27826:4:2",
																		"nodeType": "YulLiteral",
																		"src": "27826:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"name": "_ALLOWANCE_SLOT_SEED",
																		"nativeSrc": "27832:20:2",
																		"nodeType": "YulIdentifier",
																		"src": "27832:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27819:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "27819:6:2"
																},
																"nativeSrc": "27819:34:2",
																"nodeType": "YulFunctionCall",
																"src": "27819:34:2"
															},
															"nativeSrc": "27819:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "27819:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27873:4:2",
																		"nodeType": "YulLiteral",
																		"src": "27873:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "27879:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "27879:5:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27866:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "27866:6:2"
																},
																"nativeSrc": "27866:19:2",
																"nodeType": "YulFunctionCall",
																"src": "27866:19:2"
															},
															"nativeSrc": "27866:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "27866:19:2"
														},
														{
															"nativeSrc": "27898:42:2",
															"nodeType": "YulVariableDeclaration",
															"src": "27898:42:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27929:4:2",
																		"nodeType": "YulLiteral",
																		"src": "27929:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27935:4:2",
																		"nodeType": "YulLiteral",
																		"src": "27935:4:2",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "27919:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "27919:9:2"
																},
																"nativeSrc": "27919:21:2",
																"nodeType": "YulFunctionCall",
																"src": "27919:21:2"
															},
															"variables": [
																{
																	"name": "allowanceSlot",
																	"nativeSrc": "27902:13:2",
																	"nodeType": "YulTypedName",
																	"src": "27902:13:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27953:38:2",
															"nodeType": "YulVariableDeclaration",
															"src": "27953:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "allowanceSlot",
																		"nativeSrc": "27977:13:2",
																		"nodeType": "YulIdentifier",
																		"src": "27977:13:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "27971:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "27971:5:2"
																},
																"nativeSrc": "27971:20:2",
																"nodeType": "YulFunctionCall",
																"src": "27971:20:2"
															},
															"variables": [
																{
																	"name": "allowance_",
																	"nativeSrc": "27957:10:2",
																	"nodeType": "YulTypedName",
																	"src": "27957:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28089:396:2",
																"nodeType": "YulBlock",
																"src": "28089:396:2",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "28214:133:2",
																			"nodeType": "YulBlock",
																			"src": "28214:133:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "28243:4:2",
																								"nodeType": "YulLiteral",
																								"src": "28243:4:2",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "28249:10:2",
																								"nodeType": "YulLiteral",
																								"src": "28249:10:2",
																								"type": "",
																								"value": "0x13be252b"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "28236:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "28236:6:2"
																						},
																						"nativeSrc": "28236:24:2",
																						"nodeType": "YulFunctionCall",
																						"src": "28236:24:2"
																					},
																					"nativeSrc": "28236:24:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "28236:24:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "28318:4:2",
																								"nodeType": "YulLiteral",
																								"src": "28318:4:2",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "28324:4:2",
																								"nodeType": "YulLiteral",
																								"src": "28324:4:2",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "28311:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "28311:6:2"
																						},
																						"nativeSrc": "28311:18:2",
																						"nodeType": "YulFunctionCall",
																						"src": "28311:18:2"
																					},
																					"nativeSrc": "28311:18:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "28311:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "amount",
																					"nativeSrc": "28194:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "28194:6:2"
																				},
																				{
																					"name": "allowance_",
																					"nativeSrc": "28202:10:2",
																					"nodeType": "YulIdentifier",
																					"src": "28202:10:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "28191:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "28191:2:2"
																			},
																			"nativeSrc": "28191:22:2",
																			"nodeType": "YulFunctionCall",
																			"src": "28191:22:2"
																		},
																		"nativeSrc": "28188:159:2",
																		"nodeType": "YulIf",
																		"src": "28188:159:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "allowanceSlot",
																					"nativeSrc": "28432:13:2",
																					"nodeType": "YulIdentifier",
																					"src": "28432:13:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "allowance_",
																							"nativeSrc": "28451:10:2",
																							"nodeType": "YulIdentifier",
																							"src": "28451:10:2"
																						},
																						{
																							"name": "amount",
																							"nativeSrc": "28463:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "28463:6:2"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "28447:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "28447:3:2"
																					},
																					"nativeSrc": "28447:23:2",
																					"nodeType": "YulFunctionCall",
																					"src": "28447:23:2"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "28425:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "28425:6:2"
																			},
																			"nativeSrc": "28425:46:2",
																			"nodeType": "YulFunctionCall",
																			"src": "28425:46:2"
																		},
																		"nativeSrc": "28425:46:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "28425:46:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "allowance_",
																		"nativeSrc": "28077:10:2",
																		"nodeType": "YulIdentifier",
																		"src": "28077:10:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "28073:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "28073:3:2"
																},
																"nativeSrc": "28073:15:2",
																"nodeType": "YulFunctionCall",
																"src": "28073:15:2"
															},
															"nativeSrc": "28070:415:2",
															"nodeType": "YulIf",
															"src": "28070:415:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 242,
														"isOffset": false,
														"isSlot": false,
														"src": "27832:20:2",
														"valueSize": 1
													},
													{
														"declaration": 622,
														"isOffset": false,
														"isSlot": false,
														"src": "28194:6:2",
														"valueSize": 1
													},
													{
														"declaration": 622,
														"isOffset": false,
														"isSlot": false,
														"src": "28463:6:2",
														"valueSize": 1
													},
													{
														"declaration": 618,
														"isOffset": false,
														"isSlot": false,
														"src": "27879:5:2",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "27798:7:2",
														"valueSize": 1
													}
												],
												"id": 634,
												"nodeType": "InlineAssembly",
												"src": "27700:795:2"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "27329:80:2",
										"text": "@dev Updates the allowance of `owner` for `spender` based on spent `amount`."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "27423:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "27439:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27439:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "27454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27479:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "27471:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27438:48:2"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27504:0:2"
									},
									"scope": 685,
									"src": "27414:1087:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "28717:953:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 646,
														"name": "_givePermit2InfiniteAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "28731:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28731:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "28727:447:2",
												"trueBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "28764:410:2",
													"statements": [
														{
															"AST": {
																"nativeSrc": "28834:330:2",
																"nodeType": "YulBlock",
																"src": "28834:330:2",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "29005:145:2",
																			"nodeType": "YulBlock",
																			"src": "29005:145:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "29034:4:2",
																								"nodeType": "YulLiteral",
																								"src": "29034:4:2",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "29040:10:2",
																								"nodeType": "YulLiteral",
																								"src": "29040:10:2",
																								"type": "",
																								"value": "0x3f68539a"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "29027:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "29027:6:2"
																						},
																						"nativeSrc": "29027:24:2",
																						"nodeType": "YulFunctionCall",
																						"src": "29027:24:2"
																					},
																					"nativeSrc": "29027:24:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "29027:24:2"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "29121:4:2",
																								"nodeType": "YulLiteral",
																								"src": "29121:4:2",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "29127:4:2",
																								"nodeType": "YulLiteral",
																								"src": "29127:4:2",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "29114:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "29114:6:2"
																						},
																						"nativeSrc": "29114:18:2",
																						"nodeType": "YulFunctionCall",
																						"src": "29114:18:2"
																					},
																					"nativeSrc": "29114:18:2",
																					"nodeType": "YulExpressionStatement",
																					"src": "29114:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "28949:2:2",
																											"nodeType": "YulLiteral",
																											"src": "28949:2:2",
																											"type": "",
																											"value": "96"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "28957:2:2",
																													"nodeType": "YulLiteral",
																													"src": "28957:2:2",
																													"type": "",
																													"value": "96"
																												},
																												{
																													"name": "spender",
																													"nativeSrc": "28961:7:2",
																													"nodeType": "YulIdentifier",
																													"src": "28961:7:2"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nativeSrc": "28953:3:2",
																												"nodeType": "YulIdentifier",
																												"src": "28953:3:2"
																											},
																											"nativeSrc": "28953:16:2",
																											"nodeType": "YulFunctionCall",
																											"src": "28953:16:2"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "28945:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "28945:3:2"
																									},
																									"nativeSrc": "28945:25:2",
																									"nodeType": "YulFunctionCall",
																									"src": "28945:25:2"
																								},
																								{
																									"name": "_PERMIT2",
																									"nativeSrc": "28972:8:2",
																									"nodeType": "YulIdentifier",
																									"src": "28972:8:2"
																								}
																							],
																							"functionName": {
																								"name": "xor",
																								"nativeSrc": "28941:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "28941:3:2"
																							},
																							"nativeSrc": "28941:40:2",
																							"nodeType": "YulFunctionCall",
																							"src": "28941:40:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "amount",
																											"nativeSrc": "28994:6:2",
																											"nodeType": "YulIdentifier",
																											"src": "28994:6:2"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "28990:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "28990:3:2"
																									},
																									"nativeSrc": "28990:11:2",
																									"nodeType": "YulFunctionCall",
																									"src": "28990:11:2"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "28983:6:2",
																								"nodeType": "YulIdentifier",
																								"src": "28983:6:2"
																							},
																							"nativeSrc": "28983:19:2",
																							"nodeType": "YulFunctionCall",
																							"src": "28983:19:2"
																						}
																					],
																					"functionName": {
																						"name": "or",
																						"nativeSrc": "28938:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "28938:2:2"
																					},
																					"nativeSrc": "28938:65:2",
																					"nodeType": "YulFunctionCall",
																					"src": "28938:65:2"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "28931:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "28931:6:2"
																			},
																			"nativeSrc": "28931:73:2",
																			"nodeType": "YulFunctionCall",
																			"src": "28931:73:2"
																		},
																		"nativeSrc": "28928:222:2",
																		"nodeType": "YulIf",
																		"src": "28928:222:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 266,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "28972:8:2",
																	"valueSize": 1
																},
																{
																	"declaration": 643,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "28994:6:2",
																	"valueSize": 1
																},
																{
																	"declaration": 641,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "28961:7:2",
																	"valueSize": 1
																}
															],
															"id": 648,
															"nodeType": "InlineAssembly",
															"src": "28825:339:2"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "29235:429:2",
													"nodeType": "YulBlock",
													"src": "29235:429:2",
													"statements": [
														{
															"nativeSrc": "29249:28:2",
															"nodeType": "YulVariableDeclaration",
															"src": "29249:28:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29267:2:2",
																		"nodeType": "YulLiteral",
																		"src": "29267:2:2",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "owner",
																		"nativeSrc": "29271:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "29271:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "29263:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "29263:3:2"
																},
																"nativeSrc": "29263:14:2",
																"nodeType": "YulFunctionCall",
																"src": "29263:14:2"
															},
															"variables": [
																{
																	"name": "owner_",
																	"nativeSrc": "29253:6:2",
																	"nodeType": "YulTypedName",
																	"src": "29253:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29361:4:2",
																		"nodeType": "YulLiteral",
																		"src": "29361:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "spender",
																		"nativeSrc": "29367:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "29367:7:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29354:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "29354:6:2"
																},
																"nativeSrc": "29354:21:2",
																"nodeType": "YulFunctionCall",
																"src": "29354:21:2"
															},
															"nativeSrc": "29354:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "29354:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29395:4:2",
																		"nodeType": "YulLiteral",
																		"src": "29395:4:2",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"arguments": [
																			{
																				"name": "owner_",
																				"nativeSrc": "29404:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "29404:6:2"
																			},
																			{
																				"name": "_ALLOWANCE_SLOT_SEED",
																				"nativeSrc": "29412:20:2",
																				"nodeType": "YulIdentifier",
																				"src": "29412:20:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "29401:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "29401:2:2"
																		},
																		"nativeSrc": "29401:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "29401:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29388:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "29388:6:2"
																},
																"nativeSrc": "29388:46:2",
																"nodeType": "YulFunctionCall",
																"src": "29388:46:2"
															},
															"nativeSrc": "29388:46:2",
															"nodeType": "YulExpressionStatement",
															"src": "29388:46:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29464:4:2",
																				"nodeType": "YulLiteral",
																				"src": "29464:4:2",
																				"type": "",
																				"value": "0x0c"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29470:4:2",
																				"nodeType": "YulLiteral",
																				"src": "29470:4:2",
																				"type": "",
																				"value": "0x34"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "29454:9:2",
																			"nodeType": "YulIdentifier",
																			"src": "29454:9:2"
																		},
																		"nativeSrc": "29454:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "29454:21:2"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "29477:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "29477:6:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "29447:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "29447:6:2"
																},
																"nativeSrc": "29447:37:2",
																"nodeType": "YulFunctionCall",
																"src": "29447:37:2"
															},
															"nativeSrc": "29447:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "29447:37:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29546:4:2",
																		"nodeType": "YulLiteral",
																		"src": "29546:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "amount",
																		"nativeSrc": "29552:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "29552:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29539:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "29539:6:2"
																},
																"nativeSrc": "29539:20:2",
																"nodeType": "YulFunctionCall",
																"src": "29539:20:2"
															},
															"nativeSrc": "29539:20:2",
															"nodeType": "YulExpressionStatement",
															"src": "29539:20:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29577:4:2",
																		"nodeType": "YulLiteral",
																		"src": "29577:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29583:4:2",
																		"nodeType": "YulLiteral",
																		"src": "29583:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "_APPROVAL_EVENT_SIGNATURE",
																		"nativeSrc": "29589:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "29589:25:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29620:2:2",
																				"nodeType": "YulLiteral",
																				"src": "29620:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "owner_",
																				"nativeSrc": "29624:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "29624:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "29616:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "29616:3:2"
																		},
																		"nativeSrc": "29616:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "29616:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29637:2:2",
																				"nodeType": "YulLiteral",
																				"src": "29637:2:2",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "29647:4:2",
																						"nodeType": "YulLiteral",
																						"src": "29647:4:2",
																						"type": "",
																						"value": "0x2c"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "29641:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "29641:5:2"
																				},
																				"nativeSrc": "29641:11:2",
																				"nodeType": "YulFunctionCall",
																				"src": "29641:11:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "29633:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "29633:3:2"
																		},
																		"nativeSrc": "29633:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "29633:20:2"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "29572:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "29572:4:2"
																},
																"nativeSrc": "29572:82:2",
																"nodeType": "YulFunctionCall",
																"src": "29572:82:2"
															},
															"nativeSrc": "29572:82:2",
															"nodeType": "YulExpressionStatement",
															"src": "29572:82:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 242,
														"isOffset": false,
														"isSlot": false,
														"src": "29412:20:2",
														"valueSize": 1
													},
													{
														"declaration": 230,
														"isOffset": false,
														"isSlot": false,
														"src": "29589:25:2",
														"valueSize": 1
													},
													{
														"declaration": 643,
														"isOffset": false,
														"isSlot": false,
														"src": "29477:6:2",
														"valueSize": 1
													},
													{
														"declaration": 643,
														"isOffset": false,
														"isSlot": false,
														"src": "29552:6:2",
														"valueSize": 1
													},
													{
														"declaration": 639,
														"isOffset": false,
														"isSlot": false,
														"src": "29271:5:2",
														"valueSize": 1
													},
													{
														"declaration": 641,
														"isOffset": false,
														"isSlot": false,
														"src": "29367:7:2",
														"valueSize": 1
													}
												],
												"id": 651,
												"nodeType": "InlineAssembly",
												"src": "29226:438:2"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "28507:122:2",
										"text": "@dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\n Emits a {Approval} event."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "28643:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28660:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "28652:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "28675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "28667:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28692:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "28684:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28651:48:2"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28717:0:2"
									},
									"scope": 685,
									"src": "28634:1036:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "30155:2:2",
										"statements": []
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "29959:102:2",
										"text": "@dev Hook that is called before any transfer of tokens.\n This includes minting and burning."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "30075:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30104:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "30096:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30096:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30118:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "30110:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30130:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "30122:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30095:42:2"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30155:0:2"
									},
									"scope": 685,
									"src": "30066:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "30357:2:2",
										"statements": []
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "30163:101:2",
										"text": "@dev Hook that is called after any transfer of tokens.\n This includes minting and burning."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "30278:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "30298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30320:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "30312:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30312:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30332:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "30324:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30297:42:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30357:0:2"
									},
									"scope": 685,
									"src": "30269:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "31064:29:2",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31081:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 680,
												"id": 682,
												"nodeType": "Return",
												"src": "31074:12:2"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "30648:333:2",
										"text": "@dev Returns whether to fix the Permit2 contract's allowance at infinity.\n This value should be kept constant after contract initialization,\n or else the actual allowance values may not match with the {Approval} events.\n For best performance, return a compile-time constant for zero-cost abstraction."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_givePermit2InfiniteAllowance",
									"nameLocation": "30995:29:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31024:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "31058:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31058:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31057:6:2"
									},
									"scope": 685,
									"src": "30986:107:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 686,
							"src": "1140:29955:2",
							"usedErrors": [
								183,
								186,
								189,
								192,
								195,
								198,
								201,
								204
							],
							"usedEvents": [
								213,
								222
							]
						}
					],
					"src": "32:31064:2"
				},
				"id": 2
			},
			"src/SwapAbstract.sol": {
				"ast": {
					"absolutePath": "src/SwapAbstract.sol",
					"exportedSymbols": {
						"ERC20": [
							685
						],
						"Permit2Sig": [
							697
						],
						"SwapAbstract": [
							823
						]
					},
					"id": 824,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 687,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:3"
						},
						{
							"absolutePath": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
							"file": "https://github.com/Vectorized/solady/blob/main/src/tokens/ERC20.sol",
							"id": 688,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 686,
							"src": "74:77:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "Permit2Sig",
							"id": 697,
							"members": [
								{
									"constant": false,
									"id": 690,
									"mutability": "mutable",
									"name": "deadline",
									"nameLocation": "185:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "180:13:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 689,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "180:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 692,
									"mutability": "mutable",
									"name": "v",
									"nameLocation": "206:1:3",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "200:7:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 691,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "200:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 694,
									"mutability": "mutable",
									"name": "r",
									"nameLocation": "222:1:3",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "214:9:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 693,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "214:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 696,
									"mutability": "mutable",
									"name": "s",
									"nameLocation": "238:1:3",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "230:9:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 695,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "230:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Permit2Sig",
							"nameLocation": "162:10:3",
							"nodeType": "StructDefinition",
							"scope": 824,
							"src": "155:88:3",
							"visibility": "public"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "SwapAbstract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 823,
							"linearizedBaseContracts": [
								823
							],
							"name": "SwapAbstract",
							"nameLocation": "265:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "38d52e0f",
									"id": 700,
									"mutability": "immutable",
									"name": "asset",
									"nameLocation": "308:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "285:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$685",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 699,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 698,
											"name": "ERC20",
											"nameLocations": [
												"285:5:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 685,
											"src": "285:5:3"
										},
										"referencedDeclaration": 685,
										"src": "285:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$685",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "347:33:3",
										"statements": [
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "358:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$685",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 707,
														"name": "asset_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "366:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$685",
															"typeString": "contract ERC20"
														}
													},
													"src": "358:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$685",
														"typeString": "contract ERC20"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "358:14:3"
											}
										]
									},
									"id": 711,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "asset_",
												"nameLocation": "340:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "334:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$685",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 701,
														"name": "ERC20",
														"nameLocations": [
															"334:5:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "334:5:3"
													},
													"referencedDeclaration": 685,
													"src": "334:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$685",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:14:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:0:3"
									},
									"scope": 823,
									"src": "322:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"functionSelector": "25d1782d",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getERC20ToNativePrice",
									"nameLocation": "397:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "424:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "419:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "419:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:17:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "470:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "465:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "465:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:20:3"
									},
									"scope": 823,
									"src": "388:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"functionSelector": "ea6b80b7",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNativeToERC20Price",
									"nameLocation": "500:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "nativesSold",
												"nameLocation": "527:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "522:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:18:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "574:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "569:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "569:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:19:3"
									},
									"scope": 823,
									"src": "491:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"functionSelector": "08e30698",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "erc20ToNativeSwap",
									"nameLocation": "603:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "626:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "621:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "646:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "638:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:36:3"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "686:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "681:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "681:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:20:3"
									},
									"scope": 823,
									"src": "594:107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"functionSelector": "bc710575",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nativeToERC20Swap",
									"nameLocation": "716:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "742:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "734:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:19:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "790:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "785:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "785:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:19:3"
									},
									"scope": 823,
									"src": "707:97:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "892:67:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "928:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 750,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "940:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "944:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "940:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 748,
														"name": "erc20ToNativeSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															755,
															793
														],
														"referencedDeclaration": 734,
														"src": "910:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) returns (uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "910:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 753,
												"nodeType": "Return",
												"src": "903:48:3"
											}
										]
									},
									"functionSelector": "127d0409",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20ToNativeSwap",
									"nameLocation": "821:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "844:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:17:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "877:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "872:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:20:3"
									},
									"scope": 823,
									"src": "812:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "1091:163:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 770,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1115:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1119:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1115:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 774,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1135:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapAbstract_$823",
																		"typeString": "contract SwapAbstract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapAbstract_$823",
																		"typeString": "contract SwapAbstract"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1127:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1127:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1127:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "1142:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 777,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1154:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Permit2Sig_$697_calldata_ptr",
																	"typeString": "struct Permit2Sig calldata"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1158:8:3",
															"memberName": "deadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "1154:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 779,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1168:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Permit2Sig_$697_calldata_ptr",
																	"typeString": "struct Permit2Sig calldata"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1172:1:3",
															"memberName": "v",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 692,
															"src": "1168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 781,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1175:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Permit2Sig_$697_calldata_ptr",
																	"typeString": "struct Permit2Sig calldata"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1179:1:3",
															"memberName": "r",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 694,
															"src": "1175:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 783,
																"name": "sig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1182:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Permit2Sig_$697_calldata_ptr",
																	"typeString": "struct Permit2Sig calldata"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1186:1:3",
															"memberName": "s",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 696,
															"src": "1182:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 767,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "1102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$685",
																"typeString": "contract ERC20"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1108:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "1102:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1102:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "1102:86:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 788,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "1224:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1236:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 787,
														"name": "erc20ToNativeSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															755,
															793
														],
														"referencedDeclaration": 734,
														"src": "1206:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) returns (uint256)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1206:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 766,
												"id": 791,
												"nodeType": "Return",
												"src": "1199:47:3"
											}
										]
									},
									"functionSelector": "de899d1f",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20ToNativeSwap",
									"nameLocation": "976:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "999:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "994:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "994:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1011:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1050:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1030:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Permit2Sig_$697_calldata_ptr",
													"typeString": "struct Permit2Sig"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "Permit2Sig",
														"nameLocations": [
															"1030:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 697,
														"src": "1030:10:3"
													},
													"referencedDeclaration": 697,
													"src": "1030:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Permit2Sig_$697_storage_ptr",
														"typeString": "struct Permit2Sig"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:61:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "1076:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1071:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:20:3"
									},
									"scope": 823,
									"src": "967:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "1373:70:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 804,
															"name": "erc20sSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "1409:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 805,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1420:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1424:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1420:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1431:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Permit2Sig_$697_calldata_ptr",
																"typeString": "struct Permit2Sig calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Permit2Sig_$697_calldata_ptr",
																"typeString": "struct Permit2Sig calldata"
															}
														],
														"id": 803,
														"name": "erc20ToNativeSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															755,
															793
														],
														"referencedDeclaration": 793,
														"src": "1391:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_struct$_Permit2Sig_$697_calldata_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,struct Permit2Sig calldata) returns (uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 802,
												"id": 809,
												"nodeType": "Return",
												"src": "1384:51:3"
											}
										]
									},
									"functionSelector": "19cdf284",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20ToNativeSwap",
									"nameLocation": "1275:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "1298:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1293:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1293:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1330:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1310:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Permit2Sig_$697_calldata_ptr",
													"typeString": "struct Permit2Sig"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "Permit2Sig",
														"nameLocations": [
															"1310:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 697,
														"src": "1310:10:3"
													},
													"referencedDeclaration": 697,
													"src": "1310:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Permit2Sig_$697_storage_ptr",
														"typeString": "struct Permit2Sig"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:42:3"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "1358:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1353:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:20:3"
									},
									"scope": 823,
									"src": "1266:177:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "1529:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 817,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1565:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1569:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1565:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 816,
														"name": "nativeToERC20Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "1547:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1547:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 815,
												"id": 820,
												"nodeType": "Return",
												"src": "1540:36:3"
											}
										]
									},
									"functionSelector": "aea1e3d1",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nativeToERC20Swap",
									"nameLocation": "1464:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1481:2:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "1515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1510:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:19:3"
									},
									"scope": 823,
									"src": "1455:129:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 824,
							"src": "247:1340:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1541:3"
				},
				"id": 3
			},
			"src/Test.sol": {
				"ast": {
					"absolutePath": "src/Test.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"ERC20": [
							685
						],
						"Ownable": [
							147
						],
						"Permit2Sig": [
							697
						],
						"SwapAbstract": [
							823
						],
						"Test": [
							895
						]
					},
					"id": 896,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 896,
							"sourceUnit": 148,
							"src": "74:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/SwapAbstract.sol",
							"file": "./SwapAbstract.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 896,
							"sourceUnit": 824,
							"src": "220:28:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "Ownable",
										"nameLocations": [
											"269:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "269:7:4"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "269:7:4"
								},
								{
									"baseName": {
										"id": 830,
										"name": "SwapAbstract",
										"nameLocations": [
											"278:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "278:12:4"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "278:12:4"
								}
							],
							"canonicalName": "Test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 895,
							"linearizedBaseContracts": [
								895,
								823,
								147,
								177
							],
							"name": "Test",
							"nameLocation": "261:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "377:8:4",
										"statements": []
									},
									"id": 848,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 836,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 833,
													"src": "335:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 837,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 835,
												"name": "Ownable",
												"nameLocations": [
													"327:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "327:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "327:14:4"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 842,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "369:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Test_$895",
																		"typeString": "contract Test"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Test_$895",
																		"typeString": "contract Test"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "361:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "361:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "361:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 839,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "355:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$685_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "355:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$685",
														"typeString": "contract ERC20"
													}
												}
											],
											"id": 845,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 838,
												"name": "SwapAbstract",
												"nameLocations": [
													"342:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 823,
												"src": "342:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "342:34:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "320:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "312:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:4"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "377:0:4"
									},
									"scope": 895,
									"src": "300:85:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										718
									],
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "491:27:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "509:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 855,
												"id": 857,
												"nodeType": "Return",
												"src": "502:8:4"
											}
										]
									},
									"functionSelector": "25d1782d",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getERC20ToNativePrice",
									"nameLocation": "402:21:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 852,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "448:8:4"
									},
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "429:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "424:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:17:4"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "476:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "471:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "471:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:20:4"
									},
									"scope": 895,
									"src": "393:125:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										725
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "622:27:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "640:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 866,
												"id": 868,
												"nodeType": "Return",
												"src": "633:8:4"
											}
										]
									},
									"functionSelector": "ea6b80b7",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNativeToERC20Price",
									"nameLocation": "533:21:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 863,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "580:8:4"
									},
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "nativesSold",
												"nameLocation": "560:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "555:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:18:4"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "608:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "603:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "603:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:19:4"
									},
									"scope": 895,
									"src": "524:125:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734
									],
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "763:27:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "781:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 879,
												"id": 881,
												"nodeType": "Return",
												"src": "774:8:4"
											}
										]
									},
									"functionSelector": "08e30698",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20ToNativeSwap",
									"nameLocation": "664:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 876,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "725:8:4"
									},
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "erc20sSold",
												"nameLocation": "687:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "682:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "682:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "707:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "699:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:36:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "nativesBought",
												"nameLocation": "748:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "743:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:20:4"
									},
									"scope": 895,
									"src": "655:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "894:27:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "912:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 890,
												"id": 892,
												"nodeType": "Return",
												"src": "905:8:4"
											}
										]
									},
									"functionSelector": "bc710575",
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nativeToERC20Swap",
									"nameLocation": "805:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 887,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "849:8:4"
									},
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "831:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "823:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:19:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "erc20sBought",
												"nameLocation": "880:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "875:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:19:4"
									},
									"scope": 895,
									"src": "796:125:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 896,
							"src": "252:672:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "46:878:4"
				},
				"id": 4
			}
		}
	}
}